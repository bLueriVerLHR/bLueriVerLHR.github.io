{"meta":{"title":"--&~ World of Blue_River ~&--","subtitle":"World of BlueRiver","description":"A small world of BlueRiver","author":"Blue_River","url":"https://blueriverlhr.github.io","root":"/"},"pages":[{"title":"Series","date":"2021-07-30T11:54:26.790Z","updated":"2021-07-30T11:54:26.790Z","comments":true,"path":"series/index.html","permalink":"https://blueriverlhr.github.io/series/index.html","excerpt":"","text":""},{"title":"Tags","date":"2021-07-30T11:54:26.790Z","updated":"2021-07-30T11:54:26.790Z","comments":true,"path":"tags/index.html","permalink":"https://blueriverlhr.github.io/tags/index.html","excerpt":"","text":""},{"title":"About","date":"2021-07-30T11:54:26.790Z","updated":"2021-07-30T11:54:26.790Z","comments":true,"path":"about/index.html","permalink":"https://blueriverlhr.github.io/about/index.html","excerpt":"","text":""},{"title":"","date":"2021-08-02T05:15:36.000Z","updated":"2021-08-06T01:54:24.575Z","comments":true,"path":"jsgames/2048.html","permalink":"https://blueriverlhr.github.io/jsgames/2048.html","excerpt":"","text":"注：请在电脑端游玩，游戏操作是电脑上的上下左右键。 *{ padding: 0; margin: 0; } header{ display:block; margin:0 auto; width:500px; text-align:center; } header h1{ font-family:Arial, Helvetica, sans-serif; font-size:60px; font-weight:bold; margin-top: 20px; margin-bottom: 20px; } header #newgamebutton{ width:100px; padding:10px; background:#8f7a66; font-family:Arial, Helvetica, sans-serif; color:white; border-radius:10px; text-decoration:none; } header #newgamebutton:hover{ background:#9f8b77; } header p{ font-family:Arial, Helvetica, sans-serif; font-size:25px; margin:20px auto; } #grid-container{ width:460px; height:460px; padding:20px; margin:40px auto; background:#bbada0; border-radius:10px; position:relative; } .grid-cell{ width:100px; height:100px; border-radius:6px; background:#ccc0b3; position:absolute; } .number-cell{ width:100px; height:100px; border-radius:6px; line-height:100px; font:Arial, Helvetica, sans-serif; font-size:50px; font-weight:bold; text-align: center; position:absolute; } #gameover{ background-color:black; color: white; font-family:Arial, Helvetica, sans-serif; font-size:60px; position: absolute; top:45%; left:42%; width:250px; text-align:center; display: none; } 2048 New Game score:0 GAME OVER var board = new Array(); var added = new Array(); var score = 0; var top = 240; $(document).ready(function(e){ newgame(); }); function newgame(){ //初始化棋盘格 init(); //在随机两个各自声称的数字 generateOneNumber(); generateOneNumber(); } function init(){ score=0; document.getElementById(\"score\").innerHTML=score; $(\"#gameover\").css('display','none'); for(var i = 0;i"},{"title":"JavaScript Games","date":"2021-08-02T05:15:36.000Z","updated":"2021-08-12T10:03:15.525Z","comments":true,"path":"jsgames/index.html","permalink":"https://blueriverlhr.github.io/jsgames/index.html","excerpt":"","text":"2048"},{"title":"一些工作及其进度","date":"2021-08-06T01:43:31.000Z","updated":"2021-08-09T03:14:59.173Z","comments":true,"path":"tasks/index.html","permalink":"https://blueriverlhr.github.io/tasks/index.html","excerpt":"","text":"先锋网 21届 招新题目 招新题目Ex"},{"title":"先锋网出门指北2021","date":"2021-07-31T05:39:01.000Z","updated":"2021-08-13T02:33:51.851Z","comments":true,"path":"tasks/pioneer-21.html","permalink":"https://blueriverlhr.github.io/tasks/pioneer-21.html","excerpt":"留给2021届南湖先锋网网络部成员的题目。 众所周知，南湖先锋网是个二次元团体（bushi 南湖先锋网网络部欢迎任何专业，任何喜欢网络技术或者编程的学生加入！ 不过，我们依然会希望加入的孩子有一颗愿意继续下去的心。 所以该学长制作了本题目集。 多留点评论呀&gt;w&lt;很想知道大家的想法）））","text":"留给2021届南湖先锋网网络部成员的题目。 众所周知，南湖先锋网是个二次元团体（bushi 南湖先锋网网络部欢迎任何专业，任何喜欢网络技术或者编程的学生加入！ 不过，我们依然会希望加入的孩子有一颗愿意继续下去的心。 所以该学长制作了本题目集。 多留点评论呀&gt;w&lt;很想知道大家的想法））） 热身那么我们在开始之前需要做什么呢？ 比如找找网页上有没有关于先锋网成军时间的信息？ 或许，你需要一些小手段才能看见，但不是猜谜语，也不是ctrl+F。 其中带@符号的题目比较有挑战。 Hello World第一个任务！ 最简单，也是最基础的。让我们来喊一声Hello World!吧！ C 12345#include &lt;stdio.h&gt;int main() &#123; printf(&quot;Hello World!&quot;); return 0;&#125; Python 1print(&quot;Hello World&quot;) Go 1234567package mainimport &quot;fmt&quot;func main() &#123; fmt.Print(&quot;Hello World!&quot;)&#125; JavaScript 1console.log(&quot;Hello World!&quot;) 博客之旅第二个任务！ 点击一下按钮前往一个学长的博客吧！ 点击我前往 如果觉得上面的按钮怎么也按不了，那就进入另一个学长的博客吧！ 默认用户名应该是你的学号，密码是数字和英文哦！ 用户名： 密码： 前往 Akari@Akari！ 12345678910111213141516171819202122232425262728293031323334353637383940414243 /* + + + + [ &gt;i&gt;n[t */ #include&lt;stdio.h&gt; /*2w0,1m2,]_&lt;n+a m+o&gt;r&gt;i&gt;=&gt;([&#x27;0n1&#x27;0)1; */int/**/main(int/**/n,char**m)&#123;FILE*p,*q;int A,k,a,r,i/* #uinndcelfu_dset&lt;rsitcdti_oa.nhs&gt;i/_*/;char*d=&quot;P%&quot; &quot;d\\n%d\\40%d&quot;/**/ &quot;\\n%d\\n\\00wb+&quot;,b[1024],y[]=&quot;yuriyurarararayuruyuri*daijiken**akkari~n**&quot; &quot;/y*u*k/riin&lt;ty(uyr)g,aur,arr[a1r2a82*y2*/u*r&#123;uyu&#125;riOcyurhiyua**rrar+*arayra*=&quot; &quot;yuruyurwiyuriyurara&#x27;rariayuruyuriyuriyu&gt;rarararayuruy9uriyu3riyurar_aBrMaPrOaWy^?&quot; &quot;*]/f]`;hvroai&lt;dp/f*i*s/&lt;ii(f)a&#123;tpguat&lt;cahfaurh(+uf)a;f&#125;vivn+tf/g*`*w/jmaa+i`ni(&quot;/** */&quot;i+k[&gt;+b+i&gt;++b++&gt;l[rb&quot;;int/**/u;for(i=0;i&lt;101;i++)y[i*2]^=&quot;~hktrvg~dmG*eoa+%squ#l2&quot; &quot;:(wn\\&quot;1l))v?wM353&#123;/Y;lgcGp`vedllwudvOK`cct~[|ju &#123;stkjalor(stwvne\\&quot;gt\\&quot;yogYURUYURI&quot;[ i]^y[i*2+1]^4;/*!*/p=(n&gt;1&amp;&amp;(m[1][0]-&#x27;-&#x27;||m[1][1] !=&#x27;\\0&#x27;))?fopen(m[1],y+298):stdin; /*y/riynrt~(^w^)],]c+h+a+r+*+*[n&gt;)+&#123;&gt;f+o&lt;r&lt;(-m] =&lt;2&lt;5&lt;64;&#125;-]-(m+;yry[rm*])/[* */q=(n&lt;3||!(m[2][0]-&#x27;-&#x27;||m[2][1]))?stdout /*]&#123; &#125;[*/:fopen(m[2],d+14);if(!p||/* &quot;]&lt;&lt;*-]&gt;y++&gt;u&gt;&gt;+r &gt;+u+++y&gt;--u---r&gt;++i+++&quot; &lt;)&lt; ;[&gt;-m-.&gt;a-.-i.++n.&gt;[(w)*/!q/**/) return+printf(&quot;Can &quot; &quot;not\\x20open\\40%s\\40&quot; &quot;&quot; &quot;for\\40%sing\\n&quot;,m[!p?1:2],!p?/* o=82]5&lt;&lt;+(+3+1+&amp;.(+ m +-+1.)&lt;)&lt;|&lt;|.6&gt;4&gt;-+(&gt; m- &amp;-1.9-2-)-|-|.28&gt;-w-?-m.:&gt;([28+ */&quot;read&quot;:&quot;writ&quot;);for ( a=k=u= 0;y[u]; u=2 +u)&#123;y[k++ ]=y[u];&#125;if((a=fread(b,1,1024/*,mY/R*Y&quot;R*/,p/*U*/)/* R*/ )&gt;/*U&#123; */ 2&amp;&amp; b/*Y*/[0]/*U*/==&#x27;P&#x27; &amp;&amp;4==/*&quot;y*r/y)r\\&#125;*/sscanf(b,d,&amp;k,&amp; A,&amp; i, &amp;r)&amp;&amp; ! (k-6&amp;&amp;k -5)&amp;&amp;r==255)&#123;u=A;if(n&gt;3)&#123;/*]&amp;&lt;1&lt;6&lt;?&lt;m.-+1&gt;3&gt; +:+ .1&gt;3+++ . -m-) -;.u+=++.1&lt;0&lt; &lt;; f&lt;o&lt;r&lt;(.;&lt;([m(=)/8*/u++;i++;&#125;fprintf (q, d,k, u &gt;&gt;1,i&gt;&gt;1,r);u = k-5?8:4;k=3;&#125;else /*]&gt;*/&#123;(u)=/*&#123; p&gt; &gt;u &gt;t&gt;-]s &gt;++(.yryr*/+( n+14&gt;17)?8/4:8*5/ 4;&#125;for(r=i=0 ; ;)&#123;u*=6;u+= (n&gt;3?1:0);if (y[u]&amp;01)fputc(/* &lt;g-e&lt;t.c&gt;h.a r -(-).)8+&lt;1. &gt;;+i.(&lt;)&lt; &lt;)+&#123;+i.f&gt;([180*/1* (r),q);if(y[u ]&amp;16)k=A;if (y[u]&amp;2)k--;if(i/* (&quot;^w^NAMORI; &#123; I*/==a/*&quot; )*/)&#123;/**/i=a=(u)*11 &amp;255;if(1&amp;&amp;0&gt;= (a= fread(b,1,1024,p))&amp;&amp; &quot;)]i&gt;(w)-;&#125; &#123; /i-f-(-m--M1-0.)&lt;&#123;&quot; [ 8]==59/* */ )break;i=0;&#125;r=b[i++] ;u+=(/**&gt;&gt; *..&lt;/&lt;&lt;&lt;)&lt;[[;]**/+8&amp;* (y+u))?(10- r?4:2):(y[u] &amp;4)?(k?2:4):2;u=y[u/* 49;7i\\(w)/;&#125; y&#125;ru\\=*ri[ ,mc]o;n&#125;trientuu ren ( */]-(int)&#x27;`&#x27;;&#125; fclose( p);k= +fclose( q); /*] &lt;*.na/m*o&#123;ri&#123; d;^w^;&#125; &#125;^_^&#125;&#125; &quot; */ return k- -1+ /*\\&#x27; &#x27;-`*/ ( -/*&#125;/ */0x01 ); &#123;;&#123; &#125;&#125; ; /*^w^*/ ;&#125; 上面的代码是20th International Obfuscated C Code Contest (2011)的获奖作品。 获取它的全部内容需要到这里的Akari中获取。 尽可能的获取它的有趣内容吧！ 多娜多娜一起来干坏事吧！ 算法@ &amp; 数学以下是数学题目 请问：如果你有20块钱，一瓶饮料花一块钱，三个瓶盖可以换一瓶饮料，两个空瓶可以换一瓶饮料，不允许赊账，最后你最多可以喝多少瓶饮料？ 请问：从一读到一亿需要读多少汉字？ 以下是一道来自codeforces的题目 请前往此处，完成后保留AC截图即可。 网络编程@建立可以在本地通讯的TCP客户端和服务端。 开锁高手@@请想方法打开这个锁，并记下密码。 下载–&gt;锁程序 如果真的不太行，可以看看提示。（鼠标停留在提示上） 通信@@DNS通信简单叙述以下通信过程： 123IP 192.168.1.103.40087 &gt; 112.4.0.55.53: 51336+ A? www.neu.edu.cn. (32)IP 192.168.1.103.55032 &gt; 221.131.143.69.53: 51336+ A? www.neu.edu.cn. (32)IP 221.131.143.69.53 &gt; 192.168.1.103.55032: 51336 2/2/4 CNAME w.cdn.neu.edu.cn., A 210.30.199.4 (191) TCP通信简单叙述利用TCP通讯获取服务器操作系统信息的思路。 其中，你只能通过80端口和服务器通信。 休闲小游戏看了这么多东西，你也应该累了吧，来放松一下吧！ 一起来玩吧！ 戴森球计划请使用： 四个原油精炼厂（炼油厂）； 原油； 若干传送带，四向分流器，分拣器。 规划流水线，使得最终产物没有原油。 要求： 保证不会中间产物堆积，流水线必须顺畅； 不得拆了重建，流水线建造完不的修改。 后记是否被第一个题目中那么多语言吓到了呢？ 实际上我们还可以找到很多奇奇怪怪的编程语言，这时候不禁会想问全世界有上千种编程语言，为什么程序员都只学习那几个主流语言? 时常的，我会想到一些奇奇怪怪，也会看一些奇奇怪怪的问题。在寻找这些问题的答案的过程中，我会逐渐学得到一些知识。 或许就像Search to Learn(StL)的感觉一样，我们通过搜索引擎进行学习。 题外话，很推荐用google或bing来搜索问题答案，多使用像是StackOverflow这类网站来问问题。 同时，对于看到这里同学，为你简单介绍一下网络部吧。 南湖先锋网2020级网络部现在活跃的有四个学长，孙哥，覃佬，Fz和口口。 孙哥和覃佬都是全能型选手，Fz会用C++手撸物理引擎写游戏，口口是个混子。 我们一般选择部员有空的时候开会，交流讨论本周学习过的知识。如果有不懂的知识，也可以询问学长。（不仅仅有20级的，也会有其他年级的学长） 如果时间允许，学长可能会直接讲授一个专题的知识。 问题方向不限制，前端，后端，网络编程，渗透，二次元等等都可以。不过学长能力有限，也不一定知道。 不过，学长们也有自己的事务处理，不一定能及时回复信息。（不过口口估计是在玩steam上的游戏）。 这个学长已经交给你了所有。"},{"title":"2021EX","date":"2021-07-31T05:39:01.000Z","updated":"2021-08-12T09:59:29.327Z","comments":true,"path":"tasks/pioneer-21ex.html","permalink":"https://blueriverlhr.github.io/tasks/pioneer-21ex.html","excerpt":"","text":"编程语言始终只是一个工具，中间手段，先锋网主要研究他的应用和原理。 接下来的题目比较有难度： 1简单叙述JavaScript的数组和C语言的数组区别。 2C++中的NULL和C语言中的NULL有什么区别？ 3使用结构化绑定，仅用一行函数内代码实现如下函数： 12345678910111213141516template &lt;typename Key, typename Value, typename F&gt;void update(std::map&lt;Key, Value&gt;&amp; m, F foo) &#123; // TODO:&#125;int main() &#123; std::map&lt;std::string, long long int&gt; m &#123; &#123;&quot;a&quot;, 1&#125;, &#123;&quot;b&quot;, 2&#125;, &#123;&quot;c&quot;, 3&#125; &#125;; update(m, [](std::string key) &#123; return std::hash&lt;std::string&gt;&#123;&#125;(key); &#125;); for (auto&amp;&amp; [key, value] : m) std::cout &lt;&lt; key &lt;&lt; &quot;:&quot; &lt;&lt; value &lt;&lt; std::endl;&#125; 4使用两个goroutine，交替打印序列，一个goroutine打印数字，另外一个goroutine打印字母，最终效果如下： 112AB34CD56EF78GH910IJ1112KL1314MN1516OP1718QR1920ST2122UV2324WX2526YZ2728 只需要提供思路 5在控制台登录到:https://chat.neboer.site/并在general频道发布一句话。 6在Arch Linux下利用telnet登录到本地。 7在vim里找到万物的答案，并退出vim。 提示：可以尝试:help 42 8执行以下语句中的一句： 1234$ yum install sl$ apt-get install sl$ zypper install sl$ pacman -S sl 然后执行sl。 9搭建Wordpress + Nginx + MySQL + PHP网站。 10编写api 要求： curl -i http://localhost:8888/from/you 执行以上语句可以返回 123HTTP/1.1 200 OKDate: Sun, 30 Aug 2020 15:32:35 GMTContent-Length: 0"}],"posts":[{"title":"Arch Linux 下修改 gnome GUI 的关闭，最大，最小键的布局","slug":"gnome-application-change-close-button","date":"2021-08-14T05:03:34.000Z","updated":"2021-08-14T05:12:12.565Z","comments":true,"path":"2021/gnome-application-change-close-button/","link":"","permalink":"https://blueriverlhr.github.io/2021/gnome-application-change-close-button/","excerpt":"在做 Gnome 桌面美化时候学习的方法。","text":"在做 Gnome 桌面美化时候学习的方法。 参考文章gnome 应用窗口 关闭、最小化、最大化 按钮的位置设置 操作12$ sudo pacman -S dconf-editor$ dconf-editor 打开到设置路径为 /org/gnome/desktop/wm/preferences/button-layout 该设置即控制关闭，最大，最小键布局。 Use default value 就是最右侧只有一个关闭键 可以修改成如下样式： 123close,maximize,minimize,appmenu:# 或者appmenu:maximize,minimize,close","categories":[{"name":"Application","slug":"Application","permalink":"https://blueriverlhr.github.io/categories/Application/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://blueriverlhr.github.io/tags/Arch-Linux/"},{"name":"Gnome","slug":"Gnome","permalink":"https://blueriverlhr.github.io/tags/Gnome/"}]},{"title":"在NVIDIA显卡下启动Arch Linux系统的亮度调节功能","slug":"ctl-brightness-arch-nvidia","date":"2021-08-12T12:20:26.000Z","updated":"2021-08-12T12:44:33.375Z","comments":true,"path":"2021/ctl-brightness-arch-nvidia/","link":"","permalink":"https://blueriverlhr.github.io/2021/ctl-brightness-arch-nvidia/","excerpt":"《关于我在Arch Linux上调节亮度用了acpid，brightnessctl，xbacklight也改变不了亮度，于是上网搜索了半天终于发现问题出现在闭源的Nvidia显卡和Arch Linux相性不好，修改了两个系统文件然后重启电脑才搞定问题这件事》XD","text":"《关于我在Arch Linux上调节亮度用了acpid，brightnessctl，xbacklight也改变不了亮度，于是上网搜索了半天终于发现问题出现在闭源的Nvidia显卡和Arch Linux相性不好，修改了两个系统文件然后重启电脑才搞定问题这件事》XD 参考文章Backlight Arch / Manjaro Linux 英伟达显卡闭源驱动 调节屏幕亮度失效问题解决方法 Debian 10 Buster | update-grub | command not found 操作方法1 添加10-nvidia.conf（可能不需要，没测试）首先，打开到xorg.conf.d中： 12$ cd /usr/share/X11/xorg.conf.d$ ls 查看输出有没有10-nvidia.conf，如果没有，执行下面步骤： 1$ sudo vim 10-nvidia.conf 在里面输入如下内容： 1234567Section &quot;Device&quot; Identifier &quot;Device0&quot; Driver &quot;nvidia&quot; VendorName &quot;NVIDIA Corporation&quot; Option &quot;RegistryDwords&quot; &quot;EnableBrightnessControl=1&quot; Option &quot;NoLogo&quot; &quot;True&quot;EndSection 保存后退出。 2 更新grub打开grub文件： 12$ cd /etc/default/$ sudo vim grub 修改GRUB_CMDLINE_LINUX=&quot;&quot;为GRUB_CMDLINE_LINUX=&quot;acpi_backlight=vendor&quot; 然后在输入命令： 12$ sudo grub-mkconfig grub$ reboot 当电脑重启以后就可以调节屏幕亮度了。 此时你可以在/sys/class/backlight/里看到原来的acpi_video0换成了nvidia_0 12$ ls /sys/class/backlight/nvidia_0 后记难受，太难受了TAT 原因竟然是显卡。。。","categories":[{"name":"Application","slug":"Application","permalink":"https://blueriverlhr.github.io/categories/Application/"}],"tags":[{"name":"Arch_Linux","slug":"Arch-Linux","permalink":"https://blueriverlhr.github.io/tags/Arch-Linux/"}]},{"title":"先锋网2021开头","slug":"for-neupioneer2021","date":"2021-08-10T13:45:12.000Z","updated":"2021-08-15T06:22:00.765Z","comments":true,"path":"2021/for-neupioneer2021/","link":"","permalink":"https://blueriverlhr.github.io/2021/for-neupioneer2021/","excerpt":"在我的印象里，先锋网网络部是个很清闲的部门，没啥大事情干，没有什么任务，也不用举办什么活动。 似乎有一个内部晚会，不过，学长我确实没参加。 作为一个学生组织的部门，什么事情也没有，是不是稍微有点奇怪？不是有点奇怪，是很奇怪。但奇怪归奇怪，从一个学生组织活到这种类似于社团性质的部门是有一段过程的。只是作为20级的混子，学长我不了解罢了。/(ㄒoㄒ)/~~ 想来，网络部每周也都会挑一个时间开一次例会。例会上大家分享一下本周做了些什么，有什么不懂的可以让学长讲解一下。 20届主要讲的就是Vue全栈技术，应该吧？(T_T)实际上大一的时候太混子了，很多东西没学过，云里雾里的，不过基础内容还是比较了解，会写一点demo（例子）。 因为这个学期我换了一个校区，可能没办法例会到场，就在网站上写一些先锋网大一学习的内容，同时巩固下自己的知识吧。","text":"在我的印象里，先锋网网络部是个很清闲的部门，没啥大事情干，没有什么任务，也不用举办什么活动。 似乎有一个内部晚会，不过，学长我确实没参加。 作为一个学生组织的部门，什么事情也没有，是不是稍微有点奇怪？不是有点奇怪，是很奇怪。但奇怪归奇怪，从一个学生组织活到这种类似于社团性质的部门是有一段过程的。只是作为20级的混子，学长我不了解罢了。/(ㄒoㄒ)/~~ 想来，网络部每周也都会挑一个时间开一次例会。例会上大家分享一下本周做了些什么，有什么不懂的可以让学长讲解一下。 20届主要讲的就是Vue全栈技术，应该吧？(T_T)实际上大一的时候太混子了，很多东西没学过，云里雾里的，不过基础内容还是比较了解，会写一点demo（例子）。 因为这个学期我换了一个校区，可能没办法例会到场，就在网站上写一些先锋网大一学习的内容，同时巩固下自己的知识吧。 网页想来，可视化是减少思考的一大利器。简简单单几张图片就可以引发舆论（乌合麒麟），不过一个小短片就可以让人泪目（讲授父爱的宣传片）。 网站亦是一种可视化利器。网站可以同时播放文字，图片，视频，并将这些内容有效的混合起来吸引人们的注意。人们认知网站所展示出来的内容，从屏幕上获取网络所给予的信息，形成自己的感受。 我们能够自由的发表言论，看图片，看视频，不仅要感谢通讯行业的民那（民那即大家的意思，日语音译），也有前后端工程师的功劳。他们通过合作，搭建起一个个的网站，丰富着万维网的生态，让每个人都能从中获益。 先锋网的网站，即http://pioneer.neu.edu.cn至今依然更新着校内一些事情。即便现在几乎没有学生使用先锋网网站作为网络宣传，仍旧发挥着自己的作用。 先锋网的主要方向是web和其他所有计算机知识。 嗯，以上就是我所有的废话了，接下来我们进入正题吧。 透过现象看本质（该节内容：基本操作） 每一个网页都是由代码组成的。 如下是一个简单的html代码示例： 123456789101112&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;Pioneer&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 id=&quot;lihuazou&quot;&gt;&lt;/h1&gt; &lt;/body&gt; &lt;script&gt; document.getElementById(&quot;lihuazou&quot;).innerHTML = &quot;天使的脉动是神作！！！&quot; &lt;/script&gt;&lt;/html&gt; （学长是一个二刺螈） 如果我们将这段代码复制粘贴到空白的html文件里。emmm，比如新建一个文本文件，然后打开文件所在的文件夹，win10系统下在右上角的第二行，有个蓝色的问号，点击问号左侧的箭头就可以打开一些额外选项。 选择查看，然后在倒数第二列找到文件拓展名并开启它。这样就可以修改文本文件的后缀名了。接下来将该文件重命名为test.html并将上面代码复制进去。 双击文件，接下来就是选择用什么程序打开。先锋网推荐谷歌浏览器，我也认为最好用谷歌，其次是火狐，再次是Edge。 打开后应该是一排大字。 可是，上面的代码呢？按下键盘上的F12，这是开启现代浏览器控制台的快捷键。这样操作后，在控制台里应该就可以看到粘贴上去的代码了。 HTTP实际上不建议现在过多深入，仅仅需要理解表层即可。我们可以用F12看见HTTP的内容。 可以阅读的网络材料： 菜鸟教程 百度百科 HTTP (Hypertext Transfer Protocol) 深入材料： HTTP权威指南.pdf HTML可以阅读的网络材料： 菜鸟教程 W3school 学习建议多多上stack overflow等网站上看看啥的。 CSDN上很多内容也可以，不过大多都是转载自博客园，博客园文章也可。不过有部分文章就很离谱，直接给一段带bug的代码，然后娓娓道来它如何正确，如何工作。 2021届推荐使用gitee，作为仓库，速度更快🤔。学长用的是GitHub。 接下来内容可以选择性自己学习。 web前端（每个学长都可以问问） HTML CSS JavaScript Vue … 后端运维（覃学长，孙学长都了解很多） Python Java Go C/C++ 数据库 … 游戏开发（冯学长，孙学长都有所涉猎） Unity OpenGL C/C++ Python 算法 … 软件开发（不太懂） Java C/C++ 数据库 … 人工智能（覃学长专业户） Python 算法 … 数据分析（不太懂） Python MatLab 数据库 算法 … 目前学长没有专攻领域，大一时期是以广度优先为主学习。其他学长倾向于深度优先学习，学的更加深入。 后记在这篇文章里，我仅仅给先锋网新人开一个极为小的头。 你可以选择本网站上的一些文章学习，不过一些内容可能有挑战性。","categories":[{"name":"Default","slug":"Default","permalink":"https://blueriverlhr.github.io/categories/Default/"}],"tags":[{"name":"Default","slug":"Default","permalink":"https://blueriverlhr.github.io/tags/Default/"}]},{"title":"个人觉得不错的文章","slug":"articles-apprecated","date":"2021-08-02T05:20:08.000Z","updated":"2021-08-12T09:52:19.916Z","comments":true,"path":"2021/articles-apprecated/","link":"","permalink":"https://blueriverlhr.github.io/2021/articles-apprecated/","excerpt":"以下都是一些我看过觉得有用的文章的链接网址。 未来可能会基于自己的体验，对这些文章进行修改和合并。 一些文章可能会消失，或者改变标题，这些我无法做到实时改变。","text":"以下都是一些我看过觉得有用的文章的链接网址。 未来可能会基于自己的体验，对这些文章进行修改和合并。 一些文章可能会消失，或者改变标题，这些我无法做到实时改变。 链接安装配置 nginx安装及其配置详细教程 Node.js最新最详细安装教程（2020） VSCode详细安装教程 python详细安装教程 Golang安装和配置 2021 Archlinux双系统安装教程（超详细） 技术相关 Gokins1.0 来啦~ 一般的galgame会用什么软件制作呢？ 全世界有上千种编程语言，为什么程序员都只学习那几个主流语言? 写匿名邮件最好用哪个邮箱？就是对方收到邮件后却查不到发件者。 如何阅读RFC？ 八大经典排序算法详解 3Blue1Brown 的视频是怎么制作的？ 路径规划 | 图搜索算法：DFS、BFS、GBFS、Dijkstra、A* Golang Tutorial — from zero to hero The (too) many pitfalls of VLA in C 哈哈！TCP泄露了操作系统信息··· 面试必备！TCP协议经典十五连问！ Gopher China 分享：Go 语言电子表格办公文档格式标准实践续日 Go Slice 原理 《A Quick Guide to Go’s Assembler》中文 Var, Let, and Const – What’s the Difference? Diving deep into JavaScript array - evolution &amp; performance Comparing Floating-Point Numbers Is Tricky OpenGL Projection Matrix 透视矩阵Perspective Matrix Isometric Projection 【游戏】对等轴测投影 Isometric Projection Isometric Game 及译法漫谈 OpenGL中frustum投影矩阵的推导 An introduction to Quaternions Vertex Shader","categories":[{"name":"Collection","slug":"Collection","permalink":"https://blueriverlhr.github.io/categories/Collection/"}],"tags":[{"name":"Collection","slug":"Collection","permalink":"https://blueriverlhr.github.io/tags/Collection/"}]},{"title":"Mirrors","slug":"mirrors","date":"2021-08-02T05:16:11.000Z","updated":"2021-08-12T09:57:41.653Z","comments":true,"path":"2021/mirrors/","link":"","permalink":"https://blueriverlhr.github.io/2021/mirrors/","excerpt":"For programmers in China. TsinghuaUSTCAli","text":"For programmers in China. TsinghuaUSTCAli Arch Linux Tsinghua AUR Arch Linux Arch Linux ARM Arch Linux CN Arch Linux CN Keyring Error USTC Arch Linux Arch Linux ARM Arch Linux CN Kali Linux USTC Kali Linux Julia Tsinghua Julia Julia Releases USTC Julia Ubuntu Tsinghua Ubuntu USTC Ubuntu Node.js USTC Node npm Taobao Install cnpm npm change mirror Go goproxy.io go goproxy.cn go","categories":[{"name":"Collection","slug":"Collection","permalink":"https://blueriverlhr.github.io/categories/Collection/"}],"tags":[{"name":"Go","slug":"Go","permalink":"https://blueriverlhr.github.io/tags/Go/"},{"name":"Linux","slug":"Linux","permalink":"https://blueriverlhr.github.io/tags/Linux/"},{"name":"Mirrors","slug":"Mirrors","permalink":"https://blueriverlhr.github.io/tags/Mirrors/"},{"name":"Julia","slug":"Julia","permalink":"https://blueriverlhr.github.io/tags/Julia/"}]},{"title":"Compiler for Brainfuck","slug":"brainfuck-compiler","date":"2021-08-01T01:00:09.000Z","updated":"2021-08-15T05:14:14.125Z","comments":true,"path":"2021/brainfuck-compiler/","link":"","permalink":"https://blueriverlhr.github.io/2021/brainfuck-compiler/","excerpt":"The code is copied from an article in Zhihu. The original answer is here. But today I will give a simple introduction to brainfuck as well.","text":"The code is copied from an article in Zhihu. The original answer is here. But today I will give a simple introduction to brainfuck as well. Simple Introduction to BrainfuckAs one of the most famous esoteric programming languages, brainfuck only has 8 commands. Brainfuck operates on an array consisting of zero. 1... [0] [0] [0] [0] [0] [0] ... The length of this array has no strict limits. Additionally, there is a pointer, initially pointing to the first memory cell. The 8 commands are: Command Description &gt; Move the pointer to the right &lt; Move the pointer to the left + Increment the memory cell at the pointer - Decrement the memory cell at the pointer . Output the character signified by the cell at the pointer , Input a character and store it in the cell at the pointer [ Jump past the matching ] if the cell at the pointer is 0 ] Jump back to the matching [ if the cell at the pointer is nonzero All characters except &gt;&lt;+-.,[] should be used. Complier’s Source CodeHere is the source code of the compiler. The C++ version must compiled as a cpp file, since I failed with the argv[1]. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;char s[30000] = &#123;0&#125;;char code[100000];int len = 0;int stack[100];int stack_len = 0;int main(int argc,char **argv) &#123; char ch; FILE* file; char* p = s + 10000; file = fopen(argv[1],&quot;r&quot;); while(fread(&amp;code[len], 1, 1, file) == 1) &#123; len++; &#125; setbuf(stdout,NULL); for (int i = 0; i &lt; len; i++) &#123; switch(code[i]) &#123; case &#x27;+&#x27;: (*p)++; break; case &#x27;-&#x27;: (*p)--; break; case &#x27;&gt;&#x27;: p++; break; case &#x27;&lt;&#x27;: p--; break; case &#x27;.&#x27;: putchar((int)(*p)); break; case &#x27;,&#x27;: *p=getchar(); break; case &#x27;[&#x27;: if(*p) &#123; stack[stack_len++]=i; &#125; else &#123; int j,k; for(k = i, j = 0; k &lt; len; k++) &#123; code[k] == &#x27;[&#x27; &amp;&amp; j++; code[k] == &#x27;]&#x27; &amp;&amp; j--; if(j == 0) break; &#125; if(j == 0) i = k; else &#123; fprintf(stderr,&quot;%s:%dn&quot;,__FILE__,__LINE__); return 3; &#125; &#125; break; case &#x27;]&#x27;: i = stack[stack_len-- - 1] - 1; break; default: break; &#125; &#125; return 0;&#125; Go version now has a bad performace when encouter with Chinese character. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119package mainimport ( &quot;bufio&quot; &quot;errors&quot; &quot;fmt&quot; &quot;io/ioutil&quot; &quot;os&quot;)type Instruction struct &#123; operator uint16 operand uint16&#125;const ( op_inc_dp = iota op_dec_dp op_inc_val op_dec_val op_out op_in op_jmp_fwd op_jmp_bck)const data_size int = 65535func compileBF(input string) (program []Instruction, err error) &#123; var pc, jmp_pc uint16 = 0, 0 jmp_stack := make([]uint16, 0) for _, c := range input &#123; switch c &#123; case &#x27;&gt;&#x27;: program = append(program, Instruction&#123;op_inc_dp, 0&#125;) case &#x27;&lt;&#x27;: program = append(program, Instruction&#123;op_dec_dp, 0&#125;) case &#x27;+&#x27;: program = append(program, Instruction&#123;op_inc_val, 0&#125;) case &#x27;-&#x27;: program = append(program, Instruction&#123;op_dec_val, 0&#125;) case &#x27;.&#x27;: program = append(program, Instruction&#123;op_out, 0&#125;) case &#x27;,&#x27;: program = append(program, Instruction&#123;op_in, 0&#125;) case &#x27;[&#x27;: program = append(program, Instruction&#123;op_jmp_fwd, 0&#125;) jmp_stack = append(jmp_stack, pc) case &#x27;]&#x27;: if len(jmp_stack) == 0 &#123; return nil, errors.New(&quot;compilation error&quot;) &#125; jmp_pc = jmp_stack[len(jmp_stack)-1] jmp_stack = jmp_stack[:len(jmp_stack)-1] program = append(program, Instruction&#123;op_jmp_bck, jmp_pc&#125;) program[jmp_pc].operand = pc default: pc-- &#125; pc++ &#125; if len(jmp_stack) != 0 &#123; return nil, errors.New(&quot;compilation error&quot;) &#125; return&#125;func executeBF(program []Instruction) &#123; data := make([]int16, data_size) var data_ptr uint16 = 0 reader := bufio.NewReader(os.Stdin) for pc := 0; pc &lt; len(program); pc++ &#123; switch program[pc].operator &#123; case op_inc_dp: data_ptr++ case op_dec_dp: data_ptr-- case op_inc_val: data[data_ptr]++ case op_dec_val: data[data_ptr]-- case op_out: fmt.Printf(&quot;%c&quot;, data[data_ptr]) case op_in: read_val, _ := reader.ReadByte() data[data_ptr] = int16(read_val) case op_jmp_fwd: if data[data_ptr] == 0 &#123; pc = int(program[pc].operand) &#125; case op_jmp_bck: if data[data_ptr] &gt; 0 &#123; pc = int(program[pc].operand) &#125; default: panic(&quot;Unknown operator&quot;) &#125; &#125;&#125;func main() &#123; args := os.Args if len(args) != 2 &#123; fmt.Printf(&quot;Usage: %s filename\\n&quot;, args[0]) return &#125; filename := args[1] fileContents, err := ioutil.ReadFile(filename) if err != nil &#123; fmt.Printf(&quot;Error reading %s\\n&quot;, filename) return &#125; program, err := compileBF(string(fileContents)) if err != nil &#123; fmt.Println(err) return &#125; executeBF(program)&#125; Input: (Filename is input.bf and the source code is bfc.go) 1++++++++++[&gt;+++++++&gt;++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;++.&gt;+.+++++++..+++.&gt;++.&lt;&lt;+++++++++++++++.&gt;.+++.------.--------.&gt;+.&gt;. Use command 1$ go run bfc.go input.bf Or compile the source code: 1234$ go build bfc.go$ gcc bfc.cpp -o bfc$ ./bfc input.bf Output: 1Hello World! More InformationEsolangs: https://esolangs.org/wiki/Brainfuck StackOverflow: https://stackoverflow.com/questions/16836860/how-does-the-brainfuck-hello-world-actually-work","categories":[{"name":"Application","slug":"Application","permalink":"https://blueriverlhr.github.io/categories/Application/"}],"tags":[{"name":"C","slug":"C","permalink":"https://blueriverlhr.github.io/tags/C/"},{"name":"Go","slug":"Go","permalink":"https://blueriverlhr.github.io/tags/Go/"},{"name":"Brainfuck","slug":"Brainfuck","permalink":"https://blueriverlhr.github.io/tags/Brainfuck/"},{"name":"Compiler","slug":"Compiler","permalink":"https://blueriverlhr.github.io/tags/Compiler/"}]},{"title":"代码测试","slug":"code-demo","date":"2021-07-31T03:03:00.000Z","updated":"2021-08-12T09:57:04.204Z","comments":true,"path":"2021/code-demo/","link":"","permalink":"https://blueriverlhr.github.io/2021/code-demo/","excerpt":"一些代码小例子，不遵循个人代码规范。","text":"一些代码小例子，不遵循个人代码规范。 C-解多元一次方程组123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;time.h&gt;int Start()&#123; int n; printf(&quot;Nice to meet you,doctor.\\n&quot;); printf(&quot;What do you wanne do today?\\n&quot;); printf(&quot;Do you wanne calculate a system of first order equations of multiple variables.\\n&quot;); printf(&quot;Or you wanna DO with me?|\\&#x27;v \\&#x27;)\\n&quot;); printf(&quot;Chose what you wanna to do.(/(///v///)/)\\n\\n&quot;); printf(&quot;0.Qiut. 1.Calculation. 2.DO with me?\\n&quot;); while(1)&#123; if(scanf(&quot;%d&quot;,&amp;n) == 1 &amp;&amp; n &lt; 4 &amp;&amp; n &gt; -1)&#123; return n; break; &#125;else&#123; printf(&quot;You should have replied to me with 1,2 or...0.(; _ ;)\\n&quot;); printf(&quot;Please respond to me again.\\n&quot;); getchar(); &#125; &#125; getchar();&#125;int DefM(int Matrix[],int row,int column)&#123; int i_BR = 1; char c_BR; while(i_BR)&#123; i_BR = 1; getchar(); for(int i = 0;i &lt; row;i++)&#123; for(int k = 0;k &lt; column;k++)&#123; printf(&quot;Please Enter the number in %d row and %d column:&quot;,i+1,k+1); while (scanf(&quot; %d&quot;, &amp;Matrix[column*i+k]) != 1) &#123; while ((c_BR = getchar()) != &#x27;\\n&#x27;) putchar(c_BR); printf(&quot; is not an integer.Please enter an integer value, such as 25, -178, or 3: &quot;); &#125; if(k == (column - 1)) printf(&quot;\\n&quot;); &#125; &#125; printf(&quot;The Matrix is like the following output.\\n&quot;); for(int i = 0;i &lt; row;i++)&#123; printf(&quot;\\t|\\t&quot;); for(int k = 0;k &lt; column;k++)&#123; printf(&quot;%d\\t&quot;,Matrix[column*i+k]); if(k == (column - 1)) printf(&quot;|\\n&quot;); &#125; &#125; getchar(); printf(&quot;\\n\\nIs the Matrix the one you expected?\\nIf so,enter 1 to continue.\\nIf not,enter 0 to define it again.\\n&quot;); scanf(&quot;%c&quot;,&amp;c_BR); while(i_BR == 1)&#123; if(c_BR == &#x27;1&#x27;) i_BR = 0; else if(c_BR == &#x27;0&#x27;)&#123; system(&quot;cls&quot;); printf(&quot;Now recreat it.\\n&quot;); break; &#125; else&#123; getchar(); printf(&quot;please do not enter an irrelevant character.\\nAnswer me again:&quot;); scanf(&quot;%c&quot;,&amp;c_BR); &#125; &#125; &#125;&#125; int VarNum()&#123; int n = 0; int m = 0; printf(&quot;Tell me how many variables you want to cope with?\\n&quot;); while(1)&#123; if(scanf(&quot;%d&quot;,&amp;n))&#123; printf(&quot;Is %d the number of the variables you want to cope with?\\n&quot;,n); printf(&quot;If it is,please enter 1.If not,enter 0 to rewrite it.\\n&quot;); getchar(); if(scanf(&quot;%d&quot;,&amp;m))&#123; if(m)&#123; return n; break; &#125; else&#123; printf(&quot;Rewrite it!&quot;); getchar(); continue; &#125; &#125;else&#123; printf(&quot;You should enter an integer which is either 1 or 0.\\n&quot;); printf(&quot;And now you exit.\\nYou should enter again.\\n\\n&quot;); return 0; break; &#125; &#125;else&#123; printf(&quot;Please enter an integer.\\n&quot;); getchar(); &#125; &#125;&#125;int Calcu3Det(int MainMatrix[])&#123; int PositiveProduct[3],NegativeProduct[3],PositiveSum = 0,NegativeSum = 0; for(int k = 0;k &lt; 3;k++) PositiveProduct[k] = NegativeProduct[k] = 1; for(int k = 0;k &lt; 3;k++)&#123; for(int i = 0;i &lt; 3;i++)&#123; if( (3*i+i+k) &gt;= (3*(i+1))) PositiveProduct[k] *= MainMatrix[3*i+i+k-3]; else PositiveProduct[k] *= MainMatrix[3*i+i+k]; if( (3*i+2-i+k) &gt;= (3*(i+1))) NegativeProduct[k] *= MainMatrix[3*i-1-i+k]; else NegativeProduct[k] *= MainMatrix[3*i+2-i+k]; &#125; PositiveSum += PositiveProduct[k]; NegativeSum += NegativeProduct[k]; &#125; return PositiveSum - NegativeSum;&#125;int CalcuHiDet(int MainMatrix[],int X)&#123; int sum; sum = 0; if(X == 3) sum = Calcu3Det(MainMatrix); else if(X &gt; 3)&#123; int * AssoMatrix = (int *)malloc((X-1)*(X-1)*sizeof(int)); int counter = 0,sign; for(int c = 0;c &lt; X;c++)&#123; for(int k = 1;k &lt; X;k++)&#123; for(int i = 0;i &lt; X;i++)&#123; if(i &lt; c) AssoMatrix[(k-1)*(X-1)+i] = MainMatrix[X*k+i]; else if(i &gt; c) AssoMatrix[(k-1)*(X-1)+i-1] = MainMatrix[X*k+i]; &#125; &#125; counter = CalcuHiDet(AssoMatrix,X-1); sign = ((2+c)%2)?-1:1; sum += MainMatrix[c]*sign*counter; &#125; &#125; return sum;&#125;int CopM(int MainMatrix[],int row,int column,int AssociateMatrix[])&#123; for(int k = 0;k &lt; row*column;k++) AssociateMatrix[k] = MainMatrix[k];&#125;int ChangeC(int Matrix[],int row,int column,int ColumnMatrix[],int ChangedColumn)&#123; for(int k = 0;k &lt; row;k++) Matrix[row*k + ChangedColumn-1] = ColumnMatrix[k];&#125;int Calculation(int MainMatrix[],int Column[],int n)&#123; int D; int * AssoMatrix = (int *)malloc(n*n*sizeof(int)); printf(&quot;\\n&quot;); for(int i = 0;i &lt; n;i++)&#123; for(int k = 0;k &lt; n+1;k++)&#123; if(MainMatrix[n*i+k] == 0) printf(&quot;\\t&quot;); else if(k &lt; n - 1) printf(&quot;\\t%d X%d +&quot;,MainMatrix[n*i+k],k+1); else if(k == n -1) printf(&quot;\\t%d X%d =&quot;,MainMatrix[n*i+k],k+1); else if(k == n) printf(&quot;\\t%d\\n&quot;,Column[i]); &#125; &#125; printf(&quot;The system above have &quot;); if((D = CalcuHiDet(MainMatrix,n)) == 0) printf(&quot;NO exact roots.&quot;); else&#123; printf(&quot;roots.\\nD = %d\\n&quot;,D); for(int i = 0;i &lt; n;i++)&#123; printf(&quot;X%d = D%d/D\\t &quot;,i+1,i+1); &#125; printf(&quot;\\n&quot;); for(int i = 0;i &lt; n;i++)&#123; CopM(MainMatrix,n,n,AssoMatrix); ChangeC(AssoMatrix,n,n,Column,i+1); printf(&quot;D%d = %d\\t &quot;,i+1,CalcuHiDet(AssoMatrix,n)); &#125; &#125;&#125;int CalcuSystem()&#123; int n = VarNum(); if(n)&#123; int * Matrix = (int *)malloc(n*n*sizeof(int)); int * Column = (int *)malloc(n*sizeof(int)); printf(&quot;The coefficient matrix of the system: \\n&quot;); DefM(Matrix,n,n); printf(&quot;The column matrix of the system: \\n&quot;); DefM(Column,n,1); Calculation(Matrix,Column,n); printf(&quot;\\nEnter to continue.\\n&quot;); getchar(); &#125;&#125; int talk(int n)&#123; switch (n%11) &#123; case 0: printf(&quot;I would like to,but now we should study.\\nEmm...We can do it at home.(whisper)\\n&quot;); break; case 1: printf(&quot;DOCTOR DAISUKI !\\n&quot;); break; case 2: printf(&quot;(Ten hours later)Emm...Doctor,you are so strong.(Biting your ear).\\n&quot;); break; case 3: printf(&quot;Do you forget to work?Oh?Ah...I will be waiting for you!\\n&quot;); break; case 4: printf(&quot;Do you forget your work?Oh?\\n&quot;); break; case 5: printf(&quot;Just Joking.\\n&quot;); break; case 6: printf(&quot;Magic,magic.Make doctor happier!\\n&quot;); break; case 7: printf(&quot;Recommend you to listen to a song called the loop of love,doctor.\\n&quot;); break; case 8: printf(&quot;You can got everything you want in your dreams,doctor.\\n&quot;); break; case 9: printf(&quot;I was so shy to say the words.Embarrassment kills me....\\n&quot;); break; case 10: printf(&quot;Doctor,my room it\\&#x27;s upstairs.Shall we go now?(looking up to you)\\n&quot;); break; default: printf(&quot;I...I haven\\&#x27;t got ready./(///v///)/\\n&quot;); break; &#125; printf(&quot;\\nEnter to contine\\n\\n&quot;); getchar();&#125;int main()&#123; int n; while(n = Start())&#123; if(n == 1) CalcuSystem(); else if(n == 2) &#123; srand(time(NULL)); talk(rand()); &#125; getchar(); &#125; printf(&quot;Have a nice day,doctor!\\nBye!&quot;); getchar(); getchar();&#125; C-EPUB文件制作框架include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;time.h&gt;void make_mimetype()&#123; FILE * fp; fp = fopen(&quot;BookName/mimetype&quot;,&quot;w&quot;); fputs(&quot;application/epub+zip&quot;,fp);&#125;void make_folder()&#123; _mkdir(&quot;BookName&quot;); _mkdir(&quot;BookName/META-INF&quot;); _mkdir(&quot;BookName/OEBPS&quot;); _mkdir(&quot;BookName/OEBPS/Fonts&quot;); _mkdir(&quot;BookName/OEBPS/Images&quot;); _mkdir(&quot;BookName/OEBPS/Styles&quot;); _mkdir(&quot;BookName/OEBPS/Text&quot;);&#125;void make_content(int chapnum,int picnum,int illnum)&#123; time_t t; struct tm *p; time(&amp;t); p = gmtime(&amp;t); FILE * fp; fp = fopen(&quot;BookName/OEBPS/content.opf&quot;,&quot;w&quot;); fprintf(fp,&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;\\n&quot;); fprintf(fp,&quot;&lt;package version=\\&quot;2.0\\&quot; unique-identifier=\\&quot;BookId\\&quot; xmlns=\\&quot;http://www.idpf.org/2007/opf\\&quot;&gt;\\n&quot;); fprintf(fp,&quot;\\t&lt;metadata xmlns:dc=\\&quot;http://purl.org/dc/elements/1.1/\\&quot; xmlns:opf=\\&quot;http://www.idpf.org/2007/opf\\&quot;&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:identifier opf:scheme=\\&quot;UUID\\&quot; id=\\&quot;BookId\\&quot;&gt;urn:uuid:&lt;!--uuid--&gt;&lt;/dc:identifier&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:title&gt;&lt;!--书名--&gt;&lt;/dc:title&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:creator opf:role=\\&quot;aut\\&quot; opf:file-as=\\&quot;BlueRiver\\&quot;&gt;&lt;!--作者名--&gt;&lt;/dc:creator&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:language&gt;zh&lt;/dc:language&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:rights&gt;BlueRiver&lt;/dc:rights&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:subject&gt;轻小说&lt;/dc:subject&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:description&gt;\\n\\t\\t\\t&lt;!--简介--&gt;\\n\\t\\t&lt;/dc:description&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:source&gt;BlueRiver&lt;/dc:source&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:publisher&gt;BlueRiver&lt;/dc:publisher&gt;\\n&quot;); fprintf(fp,&quot;\\t\\t&lt;dc:date opf:event=\\&quot;publication\\&quot;&gt;%d-%d-%d&lt;/dc:date&gt;\\n&quot;,p-&gt;tm_year+1900,p-&gt;tm_mon+1,p-&gt;tm_mday); fprintf(fp,&quot;\\t\\t&lt;dc:date opf:event=\\&quot;modification\\&quot;&gt;%d-%d-%d&lt;/dc:date&gt;\\n&quot;,p-&gt;tm_year+1900,p-&gt;tm_mon+1,p-&gt;tm_mday); fputs(&quot;\\t\\t&lt;meta name=\\&quot;Sigil version\\&quot; content=\\&quot;0.9.13\\&quot; /&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;meta name=\\&quot;cover\\&quot; content=\\&quot;cover.jpg\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/metadata&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;manifest&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;item id=\\&quot;ncx\\&quot; href=\\&quot;toc.ncx\\&quot; media-type=\\&quot;application/x-dtbncx+xml\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;item id=\\&quot;postscript.xhtml\\&quot; href=\\&quot;postscript.xhtml\\&quot; media-type=\\&quot;application/xhtml+xml\\&quot;/&gt;\\n&quot;,fp);//后记 fputs(&quot;\\t\\t&lt;item id=\\&quot;message.xhtml\\&quot; href=\\&quot;Text/message.xhtml\\&quot; media-type=\\&quot;application/xhtml+xml\\&quot;/&gt;\\n&quot;,fp);//制作信息页 fputs(&quot;\\t\\t&lt;item id=\\&quot;introduction.xhtml\\&quot; href=\\&quot;Text/introduction.xhtml\\&quot; media-type=\\&quot;application/xhtml+xml\\&quot;/&gt;\\n&quot;,fp);//简介 fputs(&quot;\\t\\t&lt;item id=\\&quot;contents.xhtml\\&quot; href=\\&quot;Text/contents.xhtml\\&quot; media-type=\\&quot;application/xhtml+xml\\&quot;/&gt;\\n&quot;,fp);//目录 fputs(&quot;\\t\\t&lt;item id=\\&quot;cover.jpg\\&quot; href=\\&quot;Images/cover.jpg\\&quot; media-type=\\&quot;image/jpeg\\&quot;/&gt;\\n&quot;,fp);//封面 fputs(&quot;\\t\\t&lt;item id=\\&quot;cover.xhtml\\&quot; href=\\&quot;Text/cover.xhtml\\&quot; media-type=\\&quot;application/xhtml+xml\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;item id=\\&quot;title.xhtml\\&quot; href=\\&quot;Text/title.xhtml\\&quot; media-type=\\&quot;application/xhtml+xml\\&quot;/&gt;\\n&quot;,fp);//书名页 //章节 for(int k = 0;k &lt; chapnum;k++)&#123; fprintf(fp,&quot;\\t\\t&lt;item id=\\&quot;chapter%03d.xhtml\\&quot; href=\\&quot;Text/chapter%03d.xhtml\\&quot; media-type=\\&quot;application/xhtml+xml\\&quot;/&gt;\\n&quot;,k+1,k+1); &#125; //插图 for(int k = 0;k &lt; picnum;k++)&#123; fprintf(fp,&quot;\\t\\t&lt;item id=\\&quot;x%03d.jpg\\&quot; href=\\&quot;Images/%03d.jpg\\&quot; media-type=\\&quot;image/jpeg\\&quot;/&gt;\\n&quot;,k+1,k+1); &#125; //彩图页 for(int k = 0;k &lt; illnum;k++)&#123; fprintf(fp,&quot;\\t\\t&lt;item id=\\&quot;illustration%d.xhtml\\&quot; href=\\&quot;Text/illustration%d.xhtml\\&quot; media-type=\\&quot;image/jpeg\\&quot;/&gt;\\n&quot;,k+1,k+1); &#125; for(int k = 0;k &lt; illnum;k++)&#123; fprintf(fp,&quot;\\t\\t&lt;item id=\\&quot;xc%03d.jpg\\&quot; href=\\&quot;Images/c%03d.jpg\\&quot; media-type=\\&quot;image/jpeg\\&quot;/&gt;\\n&quot;,k+1,k+1); &#125; //此处默认字体文件和样式表文件名称 fputs(&quot;\\t\\t&lt;item id=\\&quot;style.css\\&quot; href=\\&quot;Styles/style.css\\&quot; media-type=\\&quot;text/css\\&quot;/&gt;\\n&quot;,fp);//样式表默认名称为style.css fputs(&quot;\\t\\t&lt;item id=\\&quot; &lt;!--此处填写文件名称--&gt; \\&quot; href=\\&quot; &lt;!--此处填写文件相对路径--&gt; \\&quot; media-type=\\&quot; &lt;!--此处填写文件格式--&gt; \\&quot;/&gt;\\n&quot;,fp); /* 文件格式例如： application/xhtml+xml application/x-font-ttf image/png image/jpeg text/css */ fputs(&quot;\\t&lt;/manifest&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;spine toc=\\&quot;ncx\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;itemref idref=\\&quot;cover.xhtml\\&quot; properties=\\&quot;duokan-page-fullscreen\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;itemref idref=\\&quot;title.xhtml\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;itemref idref=\\&quot;message.xhtml\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;itemref idref=\\&quot;introduction.xhtml\\&quot;/&gt;\\n&quot;,fp); //彩图页 for(int k = 0;k &lt; illnum;k++)&#123; fprintf(fp,&quot;\\t\\t&lt;itemref idref=\\&quot;illustration%03d.xhtml\\&quot; properties=\\&quot;duokan-page-fitwindow\\&quot;/&gt;\\n&quot;,k+1); &#125; fputs(&quot;\\t\\t&lt;itemref idref=\\&quot;contents.xhtml\\&quot;/&gt;\\n&quot;,fp); //章节 for(int k = 0;k &lt; chapnum;k++)&#123; fprintf(fp,&quot;\\t\\t&lt;itemref idref=\\&quot;chapter%03d.xhtml\\&quot;/&gt;\\n&quot;,k+1); &#125; fputs(&quot;\\t\\t&lt;itemref idref=\\&quot;postscript.xhtml\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/spine&gt;\\n&quot;,fp); fputs(&quot;&lt;/package&gt;&quot;,fp);&#125;void make_container()&#123; FILE * fp; fp = fopen(&quot;BookName/META-INF/container.xml&quot;,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;UTF-8\\&quot;?&gt;\\n&quot;,fp); fputs(&quot;&lt;container version=\\&quot;1.0\\&quot; xmlns=\\&quot;urn:oasis:names:tc:opendocument:xmlns:container\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;rootfiles&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;rootfile full-path=\\&quot;OEBPS/content.opf\\&quot; media-type=\\&quot;application/oebps-package+xml\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/rootfiles&gt;\\n&quot;,fp); fputs(&quot;&lt;/container&gt;&quot;,fp);&#125;void make_toc(int chapnum,int picnum,int illnum)&#123; FILE * fp; fp = fopen(&quot;BookName/OEBPS/toc.ncx&quot;,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot; ?&gt;\\n&quot;,fp); fputs(&quot;&lt;!DOCTYPE ncx PUBLIC \\&quot;-//NISO//DTD ncx 2005-1//EN\\&quot; \\&quot;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd\\&quot;&gt;\\n&quot;,fp); fputs(&quot;&lt;ncx version=\\&quot;2005-1\\&quot; xmlns=\\&quot;http://www.daisy.org/z3986/2005/ncx/\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;head&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;meta content=\\&quot;urn:uuid:&lt;!--uuid--&gt;\\&quot; name=\\&quot;dtb:uid\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;meta content=\\&quot;1\\&quot; name=\\&quot;dtb:depth\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;meta content=\\&quot;0\\&quot; name=\\&quot;dtb:totalPageCount\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;meta content=\\&quot;0\\&quot; name=\\&quot;dtb:maxPageNumber\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/head&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;docTitle&gt;\\n\\t\\t&lt;text&gt;&lt;!--书名--&gt;&lt;/text&gt;\\n\\t&lt;docTitle&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;navMap&gt;\\n&quot;,fp); int i = 0; i += 1; fprintf(fp,&quot;\\t\\t&lt;navPoint id=\\&quot;navPoint-%d\\&quot; playOrder=\\&quot;%d\\&quot;&gt;\\n\\t\\t\\t&lt;navLabel&gt;\\n\\t\\t\\t\\t&lt;text&gt;封面&lt;/text&gt;\\n\\t\\t\\t&lt;/navLabel&gt;\\n\\t\\t\\t&lt;content src=\\&quot;Text/cover.xhtml\\&quot;/&gt;\\n\\t\\t&lt;/navPoint&gt;\\n&quot;,i,i); i += 1; fprintf(fp,&quot;\\t\\t&lt;navPoint id=\\&quot;navPoint-%d\\&quot; playOrder=\\&quot;%d\\&quot;&gt;\\n\\t\\t\\t&lt;navLabel&gt;\\n\\t\\t\\t\\t&lt;text&gt;制作信息&lt;/text&gt;\\n\\t\\t\\t&lt;/navLabel&gt;\\n\\t\\t\\t&lt;content src=\\&quot;Text/message.xhtml\\&quot;/&gt;\\n\\t\\t&lt;/navPoint&gt;\\n&quot;,i,i); i += 1; fprintf(fp,&quot;\\t\\t&lt;navPoint id=\\&quot;navPoint-%d\\&quot; playOrder=\\&quot;%d\\&quot;&gt;\\n\\t\\t\\t&lt;navLabel&gt;\\n\\t\\t\\t\\t&lt;text&gt;简介&lt;/text&gt;\\n\\t\\t\\t&lt;/navLabel&gt;\\n\\t\\t\\t&lt;content src=\\&quot;Text/introduction.xhtml\\&quot;/&gt;\\n\\t\\t&lt;/navPoint&gt;\\n&quot;,i,i); i += 1; fprintf(fp,&quot;\\t\\t&lt;navPoint id=\\&quot;navPoint-%d\\&quot; playOrder=\\&quot;%d\\&quot;&gt;\\n\\t\\t\\t&lt;navLabel&gt;\\n\\t\\t\\t\\t&lt;text&gt;彩页&lt;/text&gt;\\n\\t\\t\\t&lt;/navLabel&gt;\\n\\t\\t\\t&lt;content src=\\&quot;Text/illustration001.xhtml\\&quot;/&gt;\\n\\t\\t&lt;/navPoint&gt;\\n&quot;,i,i); i += 1; fprintf(fp,&quot;\\t\\t&lt;navPoint id=\\&quot;navPoint-%d\\&quot; playOrder=\\&quot;%d\\&quot;&gt;\\n\\t\\t\\t&lt;navLabel&gt;\\n\\t\\t\\t\\t&lt;text&gt;目录&lt;/text&gt;\\n\\t\\t\\t&lt;/navLabel&gt;\\n\\t\\t\\t&lt;content src=\\&quot;Text/contents.xhtml\\&quot;/&gt;\\n\\t\\t&lt;/navPoint&gt;\\n&quot;,i,i); for(int k = 0;k &lt; chapnum;k++)&#123; i += 1; fprintf(fp,&quot;\\t\\t&lt;navPoint id=\\&quot;navPoint-%d\\&quot; playOrder=\\&quot;%d\\&quot;&gt;\\n\\t\\t\\t&lt;navLabel&gt;\\n\\t\\t\\t\\t&lt;text&gt;&lt;!--章节名称--&gt;&lt;/text&gt;\\n\\t\\t\\t&lt;/navLabel&gt;\\n\\t\\t\\t&lt;content src=\\&quot;Text/chapter%03d.xhtml\\&quot;/&gt;\\n\\t\\t&lt;/navPoint&gt;\\n&quot;,i,i,k+1); &#125; i += 1; fprintf(fp,&quot;\\t\\t&lt;navPoint id=\\&quot;navPoint-%d\\&quot; playOrder=\\&quot;%d\\&quot;&gt;\\n\\t\\t\\t&lt;navLabel&gt;\\n\\t\\t\\t\\t&lt;text&gt;后记&lt;/text&gt;\\n\\t\\t\\t&lt;/navLabel&gt;\\n\\t\\t\\t&lt;content src=\\&quot;Text/postscript.xhtml\\&quot;/&gt;\\n\\t\\t&lt;/navPoint&gt;\\n&quot;,i,i); fputs(&quot;\\t&lt;/navMap&gt;\\n&quot;,fp); fputs(&quot;&lt;/ncx&gt;\\n&quot;,fp);&#125;void make_title()&#123; FILE * fp; fp = fopen(&quot;BookName/OEBPS/Text/title.xhtml&quot;,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;\\n&quot;,fp); fputs(&quot;&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.1//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\\&quot;&gt;\\n&quot;,fp); fputs(&quot;&lt;html xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot; xml:lang=\\&quot;zh-CN\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;head&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;title&gt;标题&lt;/title&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;link href=\\&quot;../Styles/style.css\\&quot; type=\\&quot;text/css\\&quot; rel=\\&quot;stylesheet\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/head&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;body&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;h1&gt;&lt;!--书名--&gt;&lt;h1&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/body&gt;\\n&quot;,fp); fputs(&quot;&lt;/html&gt;\\n&quot;,fp);&#125;void make_message()&#123; FILE * fp; fp = fopen(&quot;BookName/OEBPS/Text/message.xhtml&quot;,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;\\n&quot;,fp); fputs(&quot;&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.1//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\\&quot;&gt;\\n&quot;,fp); fputs(&quot;&lt;html xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot; xml:lang=\\&quot;zh-CN\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;head&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;title&gt;制作信息&lt;/title&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;link href=\\&quot;../Styles/style.css\\&quot; type=\\&quot;text/css\\&quot; rel=\\&quot;stylesheet\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/head&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;body&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;h1 class=\\&quot;makertitle\\&quot;&gt;制作信息&lt;/h1&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;cutline\\&quot;&gt;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;h1&gt;&lt;!--书名--&gt;&lt;h1&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;makerifm\\&quot;&gt;作者：&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;makerifm\\&quot;&gt;插画：&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;makerifm\\&quot;&gt;译者：&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;makerifm\\&quot;&gt;图源：&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;makerifm\\&quot;&gt;录入：&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;makerifm\\&quot;&gt;仅供个人学习交流使用，禁作商业用途&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;makerifm\\&quot;&gt;下载后请在24小时内删除&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;makerifm\\&quot;&gt;请尊重翻译、扫图、录入、校对的辛勤劳动，转载请保留信息&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;p class=\\&quot;makerifm\\&quot;&gt;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡&lt;/p&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/body&gt;\\n&quot;,fp); fputs(&quot;&lt;/html&gt;\\n&quot;,fp);&#125;void make_cover()&#123; FILE * fp; fp = fopen(&quot;BookName/OEBPS/Text/cover.xhtml&quot;,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;\\n&quot;,fp); fputs(&quot;&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.1//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\\&quot;&gt;\\n&quot;,fp); fputs(&quot;&lt;html xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot; xml:lang=\\&quot;zh-CN\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;head&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;title&gt;标题&lt;/title&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;link href=\\&quot;../Styles/style.css\\&quot; type=\\&quot;text/css\\&quot; rel=\\&quot;stylesheet\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/head&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;body&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;div class=\\&quot;cover duokan-image-single\\&quot;&gt;&lt;img alt=\\&quot;cover\\&quot; src=\\&quot;../Images/cover.jpg\\&quot;/&gt;&lt;/div&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/body&gt;\\n&quot;,fp); fputs(&quot;&lt;/html&gt;\\n&quot;,fp);&#125;void make_introduction()&#123; FILE * fp; fp = fopen(&quot;BookName/OEBPS/Text/introduction.xhtml&quot;,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;\\n&quot;,fp); fputs(&quot;&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.1//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\\&quot;&gt;\\n&quot;,fp); fputs(&quot;&lt;html xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot; xml:lang=\\&quot;zh-CN\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;head&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;title&gt;简介&lt;/title&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;link href=\\&quot;../Styles/style.css\\&quot; type=\\&quot;text/css\\&quot; rel=\\&quot;stylesheet\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/head&gt;\\n&quot;,fp); fputs(&quot;&lt;body&gt;\\n&quot;,fp); fputs(&quot;&lt;div&gt;\\n&quot;,fp); fputs(&quot;&lt;h1 class=\\&quot;color1 fzzys\\&quot;&gt;简介&lt;/h1&gt;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;&lt;/div&gt;\\n&quot;,fp); fputs(&quot;&lt;/body&gt;\\n&quot;,fp); fputs(&quot;&lt;/html&gt;\\n&quot;,fp);&#125;const char illpath[50] = &quot;BookName/OEBPS/Text/illustration001.xhtml&quot;;void make_illustration(int illnum)&#123; FILE * fp; char pa[50]; for(int n = 0;n &lt; illnum;n++)&#123; for(int i = 0; i &lt; 32;i++)&#123; pa[i] = illpath[i]; &#125; for(int i = 35; i &lt;= 50;i++)&#123; pa[i] = illpath[i]; &#125; pa[32] = illpath[32] + n/100; pa[33] = illpath[33] + n/10 - (n/100)*10; pa[34] = illpath[34] + n%10; fp = fopen(pa,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;\\n&quot;,fp); fputs(&quot;&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.1//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\\&quot;&gt;\\n&quot;,fp); fputs(&quot;&lt;html xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot; xml:lang=\\&quot;zh-CN\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;head&gt;\\n&quot;,fp); fprintf(fp,&quot;\\t\\t&lt;title&gt;彩页%d&lt;/title&gt;\\n&quot;,n+1); fputs(&quot;\\t\\t&lt;link href=\\&quot;../Styles/style.css\\&quot; type=\\&quot;text/css\\&quot; rel=\\&quot;stylesheet\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/head&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;body&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;div&gt;\\n&quot;,fp); fprintf(fp,&quot;\\t\\t\\t&lt;div class=\\&quot;center duokan-image-single\\&quot;&gt;&lt;img alt=\\&quot;c%03d\\&quot; src=\\&quot;../Images/c%03d.jpg\\&quot;/&gt;&lt;/div&gt;\\n&quot;,n+1); fputs(&quot;\\t\\t&lt;/div&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/body&gt;\\n&quot;,fp); fputs(&quot;&lt;/html&gt;\\n&quot;,fp); &#125;&#125;void make_postscript()&#123; FILE * fp; fp = fopen(&quot;BookName/OEBPS/Text/postscript.xhtml&quot;,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;\\n&quot;,fp); fputs(&quot;&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.1//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\\&quot;&gt;\\n&quot;,fp); fputs(&quot;&lt;html xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot; xml:lang=\\&quot;zh-CN\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;head&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;title&gt;后记&lt;/title&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;link href=\\&quot;../Styles/style.css\\&quot; type=\\&quot;text/css\\&quot; rel=\\&quot;stylesheet\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/head&gt;\\n&quot;,fp); fputs(&quot;&lt;body&gt;\\n&quot;,fp); fputs(&quot;&lt;h1 class=\\&quot;fzzys\\&quot;&gt;后记&lt;/h1&gt;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;&lt;/body&gt;\\n&quot;,fp); fputs(&quot;&lt;/html&gt;\\n&quot;,fp);&#125;void make_contents(int chapnum)&#123; FILE * fp; fp = fopen(&quot;BookName/OEBPS/Text/contents.xhtml&quot;,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;\\n&quot;,fp); fputs(&quot;&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.1//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\\&quot;&gt;\\n&quot;,fp); fputs(&quot;&lt;html xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot; xml:lang=\\&quot;zh-CN\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;head&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;title&gt;Contents&lt;/title&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;link href=\\&quot;../Styles/style.css\\&quot; type=\\&quot;text/css\\&quot; rel=\\&quot;stylesheet\\&quot;/&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/head&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;body&gt;\\n&quot;,fp); fputs(&quot;\\t\\t&lt;div class=\\&quot;contents\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t\\t\\t&lt;div class=\\&quot;box\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t\\t\\t\\t&lt;h2&gt;CONTENTS&lt;/h2&gt;\\n&quot;,fp); fputs(&quot;\\t\\t\\t\\t&lt;table border=\\&quot;0\\&quot; cellspacing=\\&quot;0\\&quot; cellpadding=\\&quot;0\\&quot;&gt;\\n&quot;,fp); fputs(&quot;\\t\\t\\t\\t\\t&lt;tbody&gt;\\n&quot;,fp); for(int k = 0;k &lt; chapnum;k++)&#123; fputs(&quot;\\t\\t\\t\\t\\t\\t&lt;tr&gt;\\n&quot;,fp); fprintf(fp,&quot;\\t\\t\\t\\t\\t\\t\\t&lt;td&gt;&lt;a class=\\&quot;nodeco colorg\\&quot; href=\\&quot;../Text/chapter%03d.xhtml\\&quot;&gt;&lt;!--样式--&gt;&lt;/a&gt;&lt;/td&gt;\\n&quot;,k+1); fprintf(fp,&quot;\\t\\t\\t\\t\\t\\t\\t&lt;td&gt;&lt;a class=\\&quot;nodeco colorg\\&quot; href=\\&quot;../Text/chapter%03d.xhtml\\&quot;&gt;&lt;!--章节标题--&gt;&lt;/a&gt;&lt;/td&gt;\\n&quot;,k+1); fputs(&quot;\\t\\t\\t\\t\\t\\t&lt;/tr&gt;\\n&quot;,fp); &#125; fputs(&quot;\\t\\t\\t\\t\\t\\t&lt;tr&gt;\\n&quot;,fp); fputs(&quot;\\t\\t\\t\\t\\t\\t\\t&lt;td&gt;&lt;/td&gt;\\n&quot;,fp); fputs(&quot;\\t\\t\\t\\t\\t\\t\\t&lt;td&gt;&lt;a class=\\&quot;nodeco colorg\\&quot; href=\\&quot;../Text/postscript.xhtml\\&quot;&gt;后记&lt;/a&gt;&lt;/td&gt;\\n&quot;,fp); fputs(&quot;\\t\\t\\t\\t\\t\\t&lt;/tr&gt;\\n&quot;,fp); fputs(&quot;\\t\\t\\t\\t\\t&lt;/tbody&gt;\\n\\t\\t\\t\\t&lt;/table&gt;\\n\\t\\t\\t&lt;/div&gt;\\n\\t\\t&lt;/div&gt;\\n&quot;,fp); fputs(&quot;\\t&lt;/body&gt;\\n&quot;,fp); fputs(&quot;&lt;/html&gt;\\n&quot;,fp);&#125;void make_content_toc_text(int chapnum,int picnum,int illnum)&#123; make_content(chapnum,picnum,illnum); make_toc(chapnum,picnum,illnum); make_title(); make_message(); make_cover(); make_introduction(); make_illustration(illnum); make_postscript(); make_contents(chapnum);&#125;void make_basicss()&#123; FILE * fp; fp = fopen(&quot;BookName/OEBPS/Styles/style.css&quot;,&quot;w&quot;); fputs(&quot;/*基础样式*/\\n&quot;,fp); fputs(&quot;body&#123;padding: 0%;margin-top: 0%;margin-bottom: 0%;margin-left: 1%;margin-right: 1%;line-height:1.2;text-align: justify;&#125;\\n&quot;,fp); fputs(&quot;p &#123;text-indent:2em;display:block;line-height:1.3;margin-top:0.6em;margin-bottom:0.6em;&#125;\\n&quot;,fp); fputs(&quot;div &#123;margin:0px;padding:0px;line-height:1.2;text-align: justify;&#125;\\n&quot;,fp); fputs(&quot;li&#123; clear:both; display:block&#125;\\n&quot;,fp); fputs(&quot;td&#123;padding:3px 0px&#125;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;/*封面样式*/\\n&quot;,fp); fputs(&quot;.cover &#123;margin: 0px;padding: 0px;text-indent: 0;text-align: center !important;&#125;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;/*制作信息页样式*/\\n&quot;,fp); fputs(&quot;.makertitle&#123;font-size: 1.3em;text-indent: 0em;font-weight: bold;margin-top: 0.5em;margin-bottom: 0.5em;&#125;\\n&quot;,fp); fputs(&quot;.cutline&#123;text-indent: 0em;line-height: 0;margin-top: 0.3em;margin-bottom: 0.3em;&#125;\\n&quot;,fp); fputs(&quot;.makerifm&#123;text-indent: 0em;line-height: 1.2;margin-top: 0.2em;margin-bottom: 0.2em;&#125;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;/*Logo页样式*/\\n&quot;,fp); fputs(&quot;.logoarea&#123;text-indent: 0em;text-align:center !important;margin-top: 20%;margin-bottom: 0%;&#125;\\n&quot;,fp); fputs(&quot;.logoimage&#123;width:100%;&#125;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;/*目录页样式*/\\n&quot;,fp); fputs(&quot;/*“目录”标题颜色*/\\n&quot;,fp); fputs(&quot;.colorco&#123;color:#000000&#125;\\n&quot;,fp); fputs(&quot;/*目录页超链接样式*/\\n&quot;,fp); fputs(&quot;.nodeco&#123;text-decoration:none&#125;\\n&quot;,fp); fputs(&quot;/*目录页超链接颜色*/\\n&quot;,fp); fputs(&quot;.colorg&#123;color:#000000&#125;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;/*正文样式*/\\n&quot;,fp); fputs(&quot;/*正文章节标题样式*/\\n&quot;,fp); fputs(&quot;h1 &#123;font-size: 1.3em;line-height: 1.2;margin-top: 1em;margin-bottom: 1.2em;font-weight: bold;text-align: center !important;&#125;\\n&quot;,fp); fputs(&quot;/*注释代码样式*/\\n&quot;,fp); fputs(&quot;.po&#123;font-size:0.9em;text-indent:-0.8em;padding: 0em 0.1em 0.1em 1em;color:#960014&#125;\\n&quot;,fp); fputs(&quot;/*正文插图样式*/\\n&quot;,fp); fputs(&quot;.kuan&#123;duokan-bleed:leftright&#125;\\n&quot;,fp); fputs(&quot;.zhai&#123;duokan-bleed:lefttopright&#125;\\n&quot;,fp); fputs(&quot;/*上标样式*/\\n&quot;,fp); fputs(&quot;ruby&#123;ruby-align:center&#125;\\n&quot;,fp); fputs(&quot;rt&#123;font-size:0.7em;&#125;\\n&quot;,fp); fputs(&quot;/*下标黑点着重号*/\\n&quot;,fp); fputs(&quot;.zzh &#123;text-emphasis-style:dot;text-emphasis-position:under;-webkit-text-emphasis-style:dot;-webkit-text-emphasis-position:under;-webkit-text-emphasis-style:dot;-epub-text-emphasis-style:dot;&#125;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;/*字体样式控制*/\\n&quot;,fp); fputs(&quot;/*字体加粗*/\\n&quot;,fp); fputs(&quot;.bold&#123;font-weight:bold&#125;\\n&quot;,fp); fputs(&quot;/*字体高度*/\\n&quot;,fp); fputs(&quot;.font03&#123;font-size: 0.3em&#125;\\n&quot;,fp); fputs(&quot;.font04&#123;font-size: 0.4em&#125;\\n&quot;,fp); fputs(&quot;.font05&#123;font-size: 0.5em&#125;\\n&quot;,fp); fputs(&quot;.font06&#123;font-size: 0.6em&#125;\\n&quot;,fp); fputs(&quot;.font07&#123;font-size: 0.7em&#125;\\n&quot;,fp); fputs(&quot;.font075&#123;font-size: 0.75em&#125;\\n&quot;,fp); fputs(&quot;.font08&#123;font-size: 0.8em&#125;\\n&quot;,fp); fputs(&quot;.font085&#123;font-size: 0.85em&#125;\\n&quot;,fp); fputs(&quot;.font09&#123;font-size: 0.9em&#125;\\n&quot;,fp); fputs(&quot;.font10&#123;font-size: 1.0em&#125;\\n&quot;,fp); fputs(&quot;.font11&#123;font-size: 1.1em&#125;\\n&quot;,fp); fputs(&quot;.font115&#123;font-size: 1.15em&#125;\\n&quot;,fp); fputs(&quot;.font12&#123;font-size: 1.2em&#125;\\n&quot;,fp); fputs(&quot;.font13&#123;font-size: 1.3em&#125;\\n&quot;,fp); fputs(&quot;.font14&#123;font-size: 1.4em&#125;\\n&quot;,fp); fputs(&quot;.font15&#123;font-size: 1.5em&#125;\\n&quot;,fp); fputs(&quot;.font16&#123;font-size: 1.6em&#125;\\n&quot;,fp); fputs(&quot;.font17&#123;font-size: 1.7em&#125;\\n&quot;,fp); fputs(&quot;.font18&#123;font-size: 1.8em&#125;\\n&quot;,fp); fputs(&quot;.font19&#123;font-size: 1.9em&#125;\\n&quot;,fp); fputs(&quot;.font20&#123;font-size: 2em&#125;\\n&quot;,fp); fputs(&quot;.font25&#123;font-size: 2.5em&#125;\\n&quot;,fp); fputs(&quot;.font30&#123;font-size: 3em&#125;\\n&quot;,fp); fputs(&quot;.font40&#123;font-size: 4em&#125;\\n&quot;,fp); fputs(&quot;.font35&#123;font-size: 3.5em&#125;\\n&quot;,fp); fputs(&quot;.font45&#123;font-size: 4.5em&#125;\\n&quot;,fp); fputs(&quot;/*首行缩进值为0*/\\n&quot;,fp); fputs(&quot;.in0&#123;text-indent:0em&#125;\\n&quot;,fp); fputs(&quot;/*文本居中*/\\n&quot;,fp); fputs(&quot;.center&#123;text-align:center !important;text-indent:0em;&#125;\\n&quot;,fp); fputs(&quot;/*文本居左*/\\n&quot;,fp); fputs(&quot;.left&#123;text-align:left !important;duokan-text-indent:0em;text-indent:0em;&#125;\\n&quot;,fp); fputs(&quot;/*文本居右*/\\n&quot;,fp); fputs(&quot;.right&#123;text-align:right !important;text-indent:0em;&#125;\\n&quot;,fp); fputs(&quot;/*斜体的字体样式*/\\n&quot;,fp); fputs(&quot;.italic&#123;font-style:italic&#125;\\n&quot;,fp); fputs(&quot;/*倾斜的字体样式*/\\n&quot;,fp); fputs(&quot;.oblique&#123;font-style:oblique&#125;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;/*字体颜色控制*/\\n&quot;,fp); fputs(&quot;.colorc1&#123;color:#000000&#125;/*书名颜色，默认黑色。*/\\n&quot;,fp); fputs(&quot;.colorc2&#123;color:#000000&#125;/*卷数颜色，默认黑色。*/\\n&quot;,fp); fputs(&quot;.color1&#123;color:#000000&#125;/*印象色，用于制作者人名、章节标题等处，默认黑色。*/\\n&quot;,fp); fputs(&quot;/*补充颜色写在下面，并注明用处*/\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;/*元素控制样式*/\\n&quot;,fp); fputs(&quot;/*td元素顶端对齐*/\\n&quot;,fp); fputs(&quot;.tdtop&#123;vertical-align:top&#125;\\n&quot;,fp); fputs(&quot;/*td元素底端对齐*/\\n&quot;,fp); fputs(&quot;.tdbottom&#123;vertical-align:bottom&#125;\\n&quot;,fp); fputs(&quot;/*td元素垂直居中对齐*/\\n&quot;,fp); fputs(&quot;.tdmiddle&#123;vertical-align:middle&#125;\\n&quot;,fp); fputs(&quot;/*td元素水平居中*/\\n&quot;,fp); fputs(&quot;.tdcenter&#123;margin-left:auto; margin-right:auto;&#125;\\n&quot;,fp); fputs(&quot;/*元素宽度*/\\n&quot;,fp); fputs(&quot;.w05&#123;width:0.5em&#125;\\n&quot;,fp); fputs(&quot;.w07&#123;width:0.7em&#125;\\n&quot;,fp); fputs(&quot;.w09&#123;width:0.9em&#125;\\n&quot;,fp); fputs(&quot;.w10&#123;width:1em&#125;\\n&quot;,fp); fputs(&quot;.w11&#123;width:1.1em&#125;\\n&quot;,fp); fputs(&quot;.w26&#123;width:2.6em&#125;\\n&quot;,fp); fputs(&quot;.w33&#123;width:3.3em&#125;\\n&quot;,fp); fputs(&quot;.w37&#123;width:3.7em&#125;\\n&quot;,fp); fputs(&quot;.w40&#123;width:4em&#125;\\n&quot;,fp); fputs(&quot;.w44&#123;width:4.4em&#125;\\n&quot;,fp); fputs(&quot;.w55&#123;width:5.5em&#125;\\n&quot;,fp); fputs(&quot;.w70&#123;width:70%%&#125;\\n&quot;,fp); fputs(&quot;.w100&#123;width:100%%&#125;\\n&quot;,fp); fputs(&quot;/*元素顶部外边距*/\\n&quot;,fp); fputs(&quot;.mtb13&#123;margin-top:-1.3em;&#125;\\n&quot;,fp); fputs(&quot;.mtb09&#123;margin-top:-0.9em;&#125;\\n&quot;,fp); fputs(&quot;.mtb05&#123;margin-top:-0.5em;&#125;\\n&quot;,fp); fputs(&quot;.mtb03&#123;margin-top:-0.3em;&#125;\\n&quot;,fp); fputs(&quot;.mt03&#123;margin-top:0.3em;&#125;\\n&quot;,fp); fputs(&quot;.mt05&#123;margin-top:0.5em;&#125;\\n&quot;,fp); fputs(&quot;.mt09&#123;margin-top:0.9em;&#125;\\n&quot;,fp); fputs(&quot;.mt13&#123;margin-top:1.3em;&#125;\\n&quot;,fp); fputs(&quot;.mt45&#123;margin-top:4.5em;&#125;\\n&quot;,fp); fputs(&quot;/*元素上下外边距*/\\n&quot;,fp); fputs(&quot;.mbt05&#123;margin-top:0.5em; margin-bottom:0.5em;&#125;\\n&quot;,fp); fputs(&quot;.mbt09&#123;margin-top:0.9em; margin-bottom:0.9em;&#125;\\n&quot;,fp); fputs(&quot;.mbt15&#123;margin-top:1.5em; margin-bottom:1.5em;&#125;\\n&quot;,fp); fputs(&quot;.mbt18&#123;margin-top:1.8em; margin-bottom:1.8em;&#125;\\n&quot;,fp); fputs(&quot;/*元素上下内边距*/\\n&quot;,fp); fputs(&quot;.pbt09&#123;padding-top:0.9em; padding-bottom:0.9em;&#125;\\n&quot;,fp); fputs(&quot;/*行高控制*/\\n&quot;,fp); fputs(&quot;.h04&#123;line-height:0.4;vertical-align:center;&#125;\\n&quot;,fp); fputs(&quot;.h11&#123;line-height:1.1;vertical-align:center;&#125;\\n&quot;,fp); fputs(&quot;.h20&#123;line-height:2;vertical-align:bottom;&#125;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;\\n&quot;,fp); fputs(&quot;/*标题样式*/\\n&quot;,fp); fputs(&quot;.b-relative &#123;width: 30em;margin-left: auto;margin-right: auto;margin-top: 0.5em;margin-bottom: 0em;min-height: 20em;max-width:100%%;min-width:18em;&#125;\\n&quot;,fp); fputs(&quot;.rota &#123;-o-transform: rotate(5deg);-ms-transform: rotate(5deg);-moz-transform: rotate(5deg);-webkit-transform:rotate(5deg);transform: rotate(5deg);&#125;\\n&quot;,fp); fputs(&quot;.box1 &#123;width: 2em;height: 2em;border-radius: 15%%;padding: 0.5em;background-color: #000000;color: #FFFFFF;float: right;margin-top: -0.5em;margin-right: 0.5em;&#125;\\n&quot;,fp); fputs(&quot;.box2 &#123;border-radius: 20%%;width: 1em;height: 1em;background-color: #000000;padding: 0.5em;color: #FFFFFF;float: right;margin-right: -3.5em;margin-top: 2em;&#125;\\n&quot;,fp); fputs(&quot;.t-top &#123;font-size: 0.9em;margin-left: 1em;float: right;margin-top: 1em;color: #FFFFFF;margin-right: -2.7em;&#125;\\n&quot;,fp); fputs(&quot;.f-right &#123;float: right;&#125;\\n&quot;,fp); fputs(&quot;.f-left &#123;float: left;&#125;\\n&quot;,fp); fputs(&quot;.tt &#123;margin-top: -0.9em;&#125;\\n&quot;,fp); fputs(&quot;.tt1 &#123;margin: 0em;padding: 0em;text-indent: 0px;text-align: center;&#125;\\n&quot;,fp); fputs(&quot;.tt2 &#123;margin-top: -2em;margin-right: 0.5em;text-align: center;&#125;\\n&quot;,fp); fputs(&quot;.tt3 &#123;margin: 0em;padding: 0em;text-indent: 0px;text-align: center;&#125;\\n&quot;,fp); fputs(&quot;.tl&#123;margin-top: 4em;&#125;\\n&quot;,fp); fputs(&quot;.tr &#123;-o-transform: rotate(35deg);-ms-transform: rotate(35deg);-moz-transform: rotate(35deg);-webkit-transform: rotate(35deg);transform: rotate(35deg);&#125;\\n&quot;,fp); fputs(&quot;.tr1 &#123;margin-top: -0.5em;text-indent: 0px;&#125;\\n&quot;,fp); fputs(&quot;.shadow &#123;text-shadow: 1px 1px 5px #000000;color: #FFFFFF;&#125;\\n&quot;,fp); fputs(&quot;.clear &#123;clear: both;&#125;\\n&quot;,fp); fputs(&quot;.tt2 p &#123;margin-top: -0.1em;padding: 0em;text-indent: 0px;text-align: center;margin-bottom: 0em;margin-left: 0em;margin-right: 0em;&#125;\\n&quot;,fp); fputs(&quot;/*自定义*/\\n&quot;,fp); fputs(&quot;.contents h2 &#123;padding: 0em;margin: 0.5em 0em 1em 0em;font-weight: bold;line-height: 120%%;font-size: 2.5em;&#125;\\n&quot;,fp); fputs(&quot;.contents .box &#123;width: 25em;margin-left: auto;margin-right: auto;&#125;\\n&quot;,fp); fputs(&quot;.contents table &#123;width: 100%%;&#125;\\n&quot;,fp); fputs(&quot;.contents td &#123;padding: 0.25em 0.5em;text-align: left;&#125;\\n&quot;,fp); fputs(&quot;.border &#123;padding:0.5em;border: 1px solid #000000;&#125;\\n&quot;,fp);&#125;int make_epub_frame()&#123; int chapnum,picnum,illnum; printf(&quot;Now we are going to make a basic frame of an epub.\\n&quot;); printf(&quot;Now tell me how many chapters do this book has?\\n&quot;); while(scanf(&quot; %d&quot;,&amp;chapnum) &lt;= 0)&#123; getchar(); printf(&quot;Please enter an integer such as 1 , 20 , 284.\\n&quot;); &#125; printf(&quot;Now tell me how many pictures which are black and whit do this book has?\\n&quot;); while(scanf(&quot; %d&quot;,&amp;picnum) &lt;= 0)&#123; getchar(); printf(&quot;Please enter an integer such as 1 , 20 , 284.\\n&quot;); &#125; printf(&quot;Now tell me how many colorful pictures do this book has?\\n&quot;); while(scanf(&quot; %d&quot;,&amp;illnum) &lt;= 0)&#123; getchar(); printf(&quot;Please enter an integer such as 1 , 20 , 284.\\n&quot;); &#125; make_mimetype(); make_folder(); make_container(); make_content_toc_text(chapnum,picnum,illnum); make_basicss(); return chapnum;&#125;//字体库需要自己额外加装和设置const char path[40] = &quot;BookName/OEBPS/Text/chapter001.xhtml&quot;;void make_chapter(int chapnum)&#123; int n = 0,test = -1; FILE * fp,* fw; if((fp = fopen(&quot;raw.txt&quot;,&quot;r&quot;)) == NULL)&#123; printf(&quot;Can\\&#x27;t find the file.&quot;); exit(0); &#125; char pa[40]; while((chapnum - n) != -1 &amp;&amp; test != n)&#123; test = n; for(int i = 0; i &lt; 27;i++)&#123; pa[i] = path[i]; &#125; for(int i = 30; i &lt;= 40;i++)&#123; pa[i] = path[i]; &#125; pa[27] =path[27] + n/100; pa[28] =path[28] + n/10 - (n/100)*10; pa[29] =path[29] + n%10; char ch; fw = fopen(pa,&quot;w&quot;); fputs(&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;utf-8\\&quot;?&gt;\\n&quot;,fw); fputs(&quot;&lt;!DOCTYPE html PUBLIC \\&quot;-//W3C//DTD XHTML 1.1//EN\\&quot; \\&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\\&quot;&gt;\\n&quot;,fw); fputs(&quot;&lt;html xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot; xml:lang=\\&quot;zh-CN\\&quot;&gt;\\n&quot;,fw); fputs(&quot;\\t&lt;head&gt;\\n&quot;,fw); fputs(&quot;\\t\\t&lt;title&gt;&lt;!--章节名称--&gt;&lt;/title&gt;\\n&quot;,fw); fputs(&quot;\\t\\t&lt;link href=\\&quot;../Styles/style.css\\&quot; type=\\&quot;text/css\\&quot; rel=\\&quot;stylesheet\\&quot;/&gt;\\n&quot;,fw); fputs(&quot;\\t&lt;/head&gt;\\n&quot;,fw); fputs(&quot;\\t&lt;body&gt;\\n&quot;,fw); fputs(&quot;\\t\\t&lt;h1 class=\\&quot;fzzys\\&quot;&gt;&lt;!--章节名称--&gt;&lt;/h1&gt;\\n&quot;,fw); fputs(&quot;\\t\\t&lt;p&gt;&quot;,fw); int judge = 1; while((ch = getc(fp)) != EOF)&#123; if(ch == &#x27;\\r&#x27;||ch == &#x27;\\n&#x27;)&#123; if(judge == 0) continue; fprintf(fw,&quot;&lt;/p&gt;%c\\t\\t&lt;p&gt;&quot;,ch); judge = 0; &#125;else if(ch == &#x27;\\&quot;&#x27;)&#123; fprintf(fw,&quot;&amp;quot;&quot;); judge = 1; &#125;else if(ch == &#x27;&lt;&#x27;)&#123; fprintf(fw,&quot;&amp;lt;&quot;); judge = 1; &#125;else if(ch == &#x27;&gt;&#x27;)&#123; fprintf(fw,&quot;&amp;gt;&quot;); judge = 1; &#125;else if(ch == &#x27;$&#x27;)&#123; judge = 1; n += 1; break; &#125;else if(ch == &#x27; &#x27; || ch == &#x27;\\t&#x27;)&#123; continue; &#125; else&#123; judge = 1; fprintf(fw,&quot;%c&quot;,ch); &#125; &#125; fputs(&quot;\\t\\t&lt;/p&gt;\\n\\t&lt;/body&gt;\\n&quot;,fw); fputs(&quot;&lt;/html&gt;\\n&quot;,fw); &#125;&#125;int main()&#123; int chapnum; chapnum = make_epub_frame(); printf(&quot;The frame is created.\\n&quot;); printf(&quot;Now name a file named raw.txt.\\n&quot;); printf(&quot;If you wanna to leave.Do not creat the file or delete it.\\n&quot;); printf(&quot;If you wanna continue to create chapters,save the text of the chapter in the file.\\n&quot;); printf(&quot;You can enter $ to seperate the chapters.\\n&quot;); printf(&quot;If you are ready,enter to start.\\n&quot;); system(&quot;pause&quot;); make_chapter(chapnum);&#125; C-不溢出的乘法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135#define A 20000 //第一个乘数的位数#define B 20000 //第二个乘数的位数#include&lt;stdio.h&gt; //输入输出#include&lt;string.h&gt; //计算数字长度#include&lt;time.h&gt; //计算时间typedef struct &#123; char m[2];&#125;temporary;temporary tem[A]; //竖式两个横线之间，一位乘法的结果typedef struct &#123; char m[A];&#125;rpg;rpg temrpg[B]; //竖式里下面一个数字乘上面各位后得到的数字void initialtempo(temporary * pt)&#123; //初始化 for(int i = 0;i &lt; A;i++)&#123; pt[i].m[0] = pt[i].m[1] = &#x27;0&#x27;; &#125;&#125;void initialrpg(rpg * pt)&#123; //初始化 for(int i = 0;i &lt; B;i++)&#123; for(int k = 0;k &lt; A;k++)&#123; pt[i].m[k] = &#x27;0&#x27;; &#125; &#125;&#125;void addend(rpg * pr,char * c,int la,int lb)&#123; //将每一位乘a得到的结果相加 int a[B] = &#123;0&#125;; //保存进位 for(int i = 0,k = 0,r;i &lt; la + lb;i++,k = 0)&#123; for(int p = 0;p &lt; i + 1;p++)&#123; if(pr[i - p].m[p] != &#x27;\\0&#x27;) k += pr[i - p].m[p] - &#x27;0&#x27;; //如果当位不为0，加上b中某位乘a的相应位数，用以替代加和时需要用的10^n &#125; if(i - 1 &gt;= 0) k += a[i - 1]; //加上进位 r = k/10; //得到进位 k = k%10; //得到本位 a[i] = r; //保存进位 c[i] = k + &#x27;0&#x27;; //保存本位 &#125; int i = 0; //用来得到数字的末尾 while(c[la+lb-i] == &#x27;\\0&#x27;)&#123; //忽略&#x27;\\0&#x27; i += 1; &#125; while(c[la+lb-i] == &#x27;0&#x27;)&#123; //忽略&#x27;0&#x27; i += 1; &#125; int f = la+lb-i+2; //保存结尾位置 char temc[A+B]; for(int j = 0;j &lt; f - 1;j++)&#123; //获得最终数字的正常顺序 temc[j] = c[f - j - 2]; &#125; for(int j = 0;j &lt; f - 1;j++)&#123; //返回给最初预留的数组 c[j] = temc[j]; &#125; c[f - 1] = &#x27;\\0&#x27;; //保险，给个结尾&#125;void addtem(temporary * pt,rpg * pr,int la,int lb,int p)&#123; //计算得到的每一位乘出的结果 int a[B] = &#123;0&#125;; //逢十进一用的数组 for(int i = 0,k = 0,r;i &lt; la + lb;i++,k = 0)&#123; if(pt[i].m[0] != &#x27;\\0&#x27;) k = pt[i].m[0] - &#x27;0&#x27;; //如果当位不是0，把保存的第一位给当位 if(i - 1 &gt;= 0)&#123; if(pt[i - 1].m[1] != &#x27;\\0&#x27;) k += pt[i - 1].m[1] - &#x27;0&#x27;; //如果上一位对应保存的第二位不为0，把保存的第二位给当位 &#125; if(i - 1 &gt;= 0) k += a[i - 1]; //如果上一位有进位，给当位 r = k/10; //是否有进位 k = k - r * 10; //得到本位数字 a[i] = r; //保存进位 pr[p].m[i] = k + &#x27;0&#x27;; //保存当位数字 &#125;&#125;void product(char * a,char *b,char * c,temporary * pt,rpg * pr)&#123; //乘法程序 clock_t t1 = clock(); //开始计时 char tema[A] = &#123;&#x27;0&#x27;&#125;,temb[B] = &#123;&#x27;0&#x27;&#125;; //初始化两个数字的倒序形式，如123，记为321 int la = strlen(a),lb = strlen(b); //保存两个数字的实际位数 for(int i = 0;i &lt; la;i++)&#123; //倒序a tema[i] = a[la - i - 1]; &#125; tema[la] = &#x27;\\0&#x27;; for(int i = 0;i &lt; lb;i++)&#123; //倒序b temb[i] = b[lb - i - 1]; &#125; temb[lb] = &#x27;\\0&#x27;; for(int i = 0;i &lt; lb;i++)&#123; //用b的每一位乘a并保存结果，分为第一位（0）和第二位（1）。（第二位可以为0） for(int p = 0,q = 0,r;p &lt; la;p++,q = 0)&#123; q = (tema[p] - &#x27;0&#x27;) * (temb[i] - &#x27;0&#x27;); //个位乘法 r = q/10; //是否有进位 pt[p].m[0] = q - r * 10 + &#x27;0&#x27;; //得到第一位 pt[p].m[1] = r + &#x27;0&#x27;; //得到第二位 &#125; addtem(pt,pr,la,lb,i); //计算每一位乘a得到的结果 &#125; addend(pr,c,la,lb); //将以上每一位乘a得到的结果相加 clock_t t2 = clock(); //计时结束 printf(&quot;%s&quot;,c); //打印数字 printf(&quot;\\n\\n%d&quot;,t2 - t1); //打印时间&#125;char a[A] = &#123;&#x27;0&#x27;&#125;,b[B] = &#123;&#x27;0&#x27;&#125;,c[A+B] = &#123;&#x27;0&#x27;&#125;; //保存两个数字并为结果预留空间/*To calculate the product of a and b.(each of them must be positive)****我们小学学习的竖式乘法算法如下：**** 1 2 3 4 5**X 4**___________** 2 0** 1 6** 1 2** 8** 4 **___________** 4 9 3 8 0****该乘法原理即为上式**如果第二个乘数位数比第一个乘数位数小，计算会更快。**所有数字计算的时候均用倒序形式，如123变成321计算*/int main()&#123; temporary * pt = tem; //传递结构数据 rpg * pr = temrpg; //传递结构数据 initialtempo(pt); //初始化 initialrpg(pr); //初始化 scanf(&quot;%s %s&quot;,a,b); //读取两个乘数 product(a,b,c,pt,pr); //计算并打印&#125; C-数字炸弹123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; //变量 char c_TheRequest = 1;//开始界面的字符 int in_Deltar = 1,in_EnteredNumber,in_Sig;//游戏中输入数字及其判定所需要的数字 int in_GivenNum = 0,in_An = 0,in_Bn = 0;//出的数字，和数字区间 int in_Mid;//用来交换An、Bn的值以满足An&lt;Bn的中间量 int in_DistantAn,in_DistantBn;//An与Bn离num的距离 int in_TemporaryAnSaver,in_TemporaryBnSaver;//临时用于比较的An、Bn储存器 //开始界面 printf(&quot;If you just happen to open the game and do not have the intention to play it.\\n&quot;); printf(&quot;You can enter a q to quit or you can enter an s to start the game now!\\n&quot;); scanf(&quot;%c&quot;,&amp;c_TheRequest); getchar(); while (c_TheRequest != &#x27;s&#x27; &amp;&amp; c_TheRequest != &#x27;q&#x27;)&#123; printf(&quot;Please do not enter a irrelevant letter.\\n&quot;); scanf(&quot;%c&quot;,&amp;c_TheRequest); getchar(); &#125; if(c_TheRequest == &#x27;q&#x27;)&#123; printf(&quot;So sad then.Hope you can play with me next time.\\n&quot;); getchar(); &#125; //游戏 if(c_TheRequest == &#x27;s&#x27;)&#123; //输入“数字炸弹” system(&quot;cls&quot;); printf(&quot;(^ o ^) # *** NOW LET\\&#x27;S PLAY! *** # (^ o ^)\\nAttention!You can only enter numbers in the following steps.\\nEnter to start.\\n&quot;); getchar(); system(&quot;cls&quot;); printf(&quot;Game : The number boom!(Another Life.)\\n&quot;); printf(&quot;Rule:\\n&quot;); printf(&quot;The first player should enter a number.Then he should give to numbers and guarantee the number above is between them.\\n&quot;); printf(&quot;The rest should guess and enter the numbers.And the one who enter the exact number the first player entered\\n&quot;); printf(&quot;is supported to be the winner!\\n&quot;); printf(&quot;Please Enter a number to start the game.(You is ought not to expose it to other players.The number should bigger than 0.)\\n&quot;); printf(&quot;__________\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b&quot;); while(scanf(&quot;%d&quot;,&amp;in_GivenNum) != 1 || in_GivenNum &lt; 0)&#123; system(&quot;cls&quot;); printf(&quot;Please Enter a NUMBER which is bigger than 0.\\n&quot;); printf(&quot;num:___________\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b&quot;); getchar(); &#125; system(&quot;cls&quot;); //判定是否为数字 //输入“数字炸弹”所在的区间 printf(&quot;And where is the number?Please enter two numbers,and ensure that the number above is between them.\\n&quot;); printf(&quot;Additionally,there should be at least 100 numbers between the two numbers you will enter.\\n&quot;); do&#123; printf(&quot;num = %d\\n&quot;,in_GivenNum); printf(&quot;A:__________\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b&quot;); while(scanf(&quot;%d&quot;,&amp;in_An)!=1)&#123; printf(&quot;Please Enter a NUMBER which is bigger or smaller than the \\&quot;num\\&quot;!!!!\\n&quot;); printf(&quot;A:__________\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b&quot;); scanf(&quot;%d&quot;,&amp;in_An); getchar(); &#125; printf(&quot;B:__________\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b&quot;); while(scanf(&quot;%d&quot;,&amp;in_Bn)!=1)&#123; printf(&quot;Please Enter a NUMBER which is bigger or smaller than the \\&quot;num\\&quot;!!!!\\n&quot;); printf(&quot;B:__________\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b&quot;); scanf(&quot;%d&quot;,&amp;in_Bn); getchar(); &#125;//记录An和Bn if(!(( in_An &lt; in_GivenNum &amp;&amp; in_Bn &gt; in_GivenNum ) || ( in_An &gt; in_GivenNum &amp;&amp; in_Bn &lt; in_GivenNum )))&#123; system(&quot;cls&quot;); printf(&quot;Your math is so poor.Enter a again!\\nThe \\&quot;num\\&quot; must be between the two numbers.\\n&quot;); printf(&quot;Enter to restart.\\n&quot;); getchar(); getchar(); system(&quot;cls&quot;); &#125;//区间如果错误就会报错 &#125;while(!(( in_An &lt; in_GivenNum &amp;&amp; in_Bn &gt; in_GivenNum ) || ( in_An &gt; in_GivenNum &amp;&amp; in_Bn &lt; in_GivenNum )));//判定区间是不是对的 //排序 if(in_An &gt; in_Bn)&#123; in_Mid = in_An; in_An = in_Bn; in_Bn = in_Mid; &#125; //开始猜数字 system(&quot;cls&quot;); printf(&quot;Now the game starts!\\n&quot;); printf(&quot;The number is somewhere between %d and %d\\n&quot;,in_An,in_Bn); printf(&quot;Please enter the number.\\n&quot;); printf(&quot;__________\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b&quot;); while(in_Deltar != 0)&#123; while(scanf(&quot;%d&quot;,&amp;in_EnteredNumber)!=1)&#123; printf(&quot;Please Enter a NUMBER!!!!\\n&quot;); scanf(&quot;%d&quot;,&amp;in_EnteredNumber); getchar(); &#125;//判断是否为数字 //差的运算 in_Deltar = ((in_GivenNum - in_EnteredNumber)&lt;0)?in_EnteredNumber - in_GivenNum:in_GivenNum - in_EnteredNumber; in_Sig = in_GivenNum - in_EnteredNumber; in_DistantAn = in_GivenNum - in_An; in_DistantBn = in_Bn - in_GivenNum; //判定差的大小 if(in_Deltar &gt;= 1000)&#123; if(in_Sig &gt; 0) printf(&quot;Too small!Next!\\n&quot;); else printf(&quot;Too big!Next!\\n&quot;); &#125; else if(in_Deltar &gt;= 100)&#123; if(in_Sig &gt; 0) printf(&quot;Small.Next!\\n&quot;); else printf(&quot;Big.Next!\\n&quot;); &#125; else if(in_Deltar &gt;= 10)&#123; if(in_Sig &gt; 0) printf(&quot;A little small.Next!\\n&quot;); else printf(&quot;A little big.Next!\\n&quot;); &#125; else if(in_Deltar &gt; 0)&#123; printf(&quot;Almost there!NEXT!!!\\n&quot;); &#125; //临时存储，以便后面判断所给数字是否满足条件 in_TemporaryAnSaver = in_An; in_TemporaryBnSaver = in_Bn; if(( in_Deltar &lt; in_DistantAn &amp;&amp; in_Sig &gt; 0 ) || ( in_Deltar &lt; in_DistantBn &amp;&amp; in_Sig &lt; 0 ))&#123; if(in_Sig &gt; 0) in_An = in_EnteredNumber; else in_Bn = in_EnteredNumber; &#125;//这是修改上下限 if((in_TemporaryAnSaver == in_An &amp;&amp; in_TemporaryBnSaver == in_Bn) &amp;&amp; in_Deltar)&#123; system(&quot;cls&quot;); printf(&quot;Do not cheat!\\nYou should play it again.\\n&quot;); &#125;//判定所猜的数字是否在区间内 if(in_Deltar == 0) break;//猜中 printf(&quot;Enter to continue.\\n&quot;); getchar(); getchar(); system (&quot;cls&quot;); printf(&quot;Between %d and %d\\n__________\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b&quot;,in_An,in_Bn);//区间修正 &#125; printf(&quot;You are the one !!!&quot;); getchar(); getchar(); &#125;&#125; Go-框架Gin的简单运用db.json1234567891011121314&#123; &quot;20201234&quot;:&#123; &quot;email&quot;:&quot;20201234@neu.edu&quot;, &quot;pwd&quot;:&quot;20201234&quot; &#125;, &quot;20203302&quot;:&#123; &quot;email&quot;:&quot;20203302@neu.edu&quot;, &quot;pwd&quot;:&quot;20020214&quot; &#125;, &quot;20207710&quot;:&#123; &quot;email&quot;:&quot;20207710@neu.edu&quot;, &quot;pwd&quot;:&quot;20020214&quot; &#125;&#125; post.json12345678910111213141516171819202122232425262728293031323334&#123; &quot;Posts&quot;: [ [ &#123; &quot;tag&quot;: &quot;test1&quot;, &quot;description&quot;: &quot;This tag is utilized to test data&quot;, &quot;pNum&quot;: 1 &#125;, &#123; &quot;id&quot;: &quot;1&quot;, &quot;author&quot;: &quot;admin&quot;, &quot;type&quot;: &quot;test&quot;, &quot;title&quot;: &quot;Test&quot;, &quot;content&quot;: &quot;&lt;p&gt;this is a test post&lt;/p&gt;&quot; &#125; ], [ &#123; &quot;tag&quot;: &quot;test2&quot;, &quot;description&quot;: &quot;This tag is utilized to test data&quot;, &quot;pNum&quot;: 1 &#125;, &#123; &quot;id&quot;: &quot;1&quot;, &quot;author&quot;: &quot;admin&quot;, &quot;type&quot;: &quot;test&quot;, &quot;title&quot;: &quot;Test&quot;, &quot;content&quot;: &quot;&lt;p&gt;this is a test post&lt;/p&gt;&quot; &#125; ] ], &quot;totaltag&quot;: 2&#125; Source Codepackage mainimport ( &quot;crypto/md5&quot; &quot;encoding/json&quot; &quot;fmt&quot; &quot;io/ioutil&quot; &quot;net/http&quot; &quot;os&quot; &quot;regexp&quot; &quot;strconv&quot; &quot;github.com/gin-gonic/gin&quot;)func getJsonContent(path string) (string, error) &#123; jsonFile, err := os.Open(path) if err != nil &#123; fmt.Println(err) return &quot;&quot;, nil &#125; defer func() &#123; err = jsonFile.Close() if err != nil &#123; fmt.Println(err) &#125; &#125;() byteValue, _ := ioutil.ReadAll(jsonFile) return string(byteValue), err&#125;func getUserNamePassword(path string) map[string]map[string]string &#123; byteValue, err := getJsonContent(&quot;db.json&quot;) if err != nil &#123; fmt.Println(err) return nil &#125; var unp map[string]map[string]string err = json.Unmarshal([]byte(byteValue), &amp;unp) if err != nil &#123; fmt.Println(err) return nil &#125; return unp&#125;func refreshUserNamePassword(path string, unp map[string]map[string]string) error &#123; jsonFile, err := os.OpenFile(path, os.O_RDWR, 0666) if err != nil &#123; fmt.Println(err) return err &#125; defer func() &#123; err = jsonFile.Close() if err != nil &#123; fmt.Println(err) &#125; &#125;() jsonUNP, err := json.Marshal(unp) if err != nil &#123; fmt.Println(err) return err &#125; _, err = jsonFile.Write(jsonUNP) if err != nil &#123; fmt.Println(err) return err &#125; return nil&#125;func main() &#123; router := gin.Default() grep, err := regexp.Compile(`.+@.+\\.[a-z]+`) secureKey := &quot;123&quot; text := `------------------------------------------------------------------------------------------登录格式: localhost:8081/v1/usr/login?name=20203302&amp;pwd=20020214注册格式: localhost:8081/v1/usr/regin?name=20203302&amp;pwd=20020214&amp;email=1234@1234.com饼干格式: localhost:8081/v1/usr/cookie?name=20203302&amp;pwd=20020214&amp;age=123获取原始内容: - localhost:8081/v1/list/get-post - localhost:8081/v1/list/get-user------------------------------------------------------------------------------------------` fmt.Println(text) v1 := router.Group(&quot;/v1&quot;) go func() &#123; v1.GET(&quot;/usr/:action&quot;, func(c *gin.Context) &#123; action := c.Param(&quot;action&quot;) switch action &#123; case &quot;login&quot;: unp := getUserNamePassword(&quot;db.json&quot;) name := c.Query(&quot;name&quot;) pwd := c.Query(&quot;pwd&quot;) if unp == nil &#123; c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Database No Found&quot;, &#125;) &#125; else if v, ok := unp[name][&quot;pwd&quot;]; ok &amp;&amp; v == pwd &#123; md5Inst := md5.New() md5Inst.Write([]byte(name + pwd)) c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Right Password&quot;, &quot;uuid&quot;: md5Inst.Sum([]byte(secureKey)), &#125;) &#125; else if ok &amp;&amp; v != pwd &#123; c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Wrong Password&quot;, &#125;) &#125; else if !ok &#123; c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Wrong Name&quot;, &#125;) &#125; case &quot;regin&quot;: unp := getUserNamePassword(&quot;db.json&quot;) name := c.Query(&quot;name&quot;) pwd := c.Query(&quot;pwd&quot;) email := c.Query(&quot;email&quot;) if unp == nil &#123; c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Database No Found&quot;, &#125;) &#125; else if err != nil &#123; c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Regular Expression Error&quot;, &#125;) &#125; else if result := grep.FindAllString(email, -1); len(result) == 0 &#123; c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Wrong email&quot;, &#125;) &#125; else if _, ok := unp[name][&quot;pwd&quot;]; ok &#123; c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Name already exist&quot;, &#125;) &#125; else &#123; unp[name] = map[string]string&#123;&quot;pwd&quot;: pwd, &quot;email&quot;: email&#125; err = refreshUserNamePassword(&quot;db.json&quot;, unp) if err == nil &#123; md5Inst := md5.New() md5Inst.Write([]byte(name + pwd)) c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Registered Successfully&quot;, &quot;uuid&quot;: md5Inst.Sum([]byte(secureKey)), &#125;) &#125; else &#123; c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Register Fail&quot;, &#125;) &#125; &#125; case &quot;cookie&quot;: name := c.Query(&quot;name&quot;) pwd := c.Query(&quot;pwd&quot;) age := c.Query(&quot;age&quot;) md5Inst := md5.New() md5Inst.Write([]byte(name + pwd)) intAge, err := strconv.Atoi(age) if err != nil &#123; fmt.Println(err) c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Wrong Age&quot;, &#125;) &#125; c.SetCookie(name, string(md5Inst.Sum([]byte(secureKey))), intAge*60*60*24, &quot;/&quot;, &quot;localhost&quot;, true, true) c.JSON(http.StatusOK, gin.H&#123; &quot;message&quot;: &quot;Get Cookie Successfully&quot;, &#125;) case &quot;&quot;: &#125; &#125;) &#125;() go func() &#123; v1.GET(&quot;/list/get-post&quot;, func(c *gin.Context) &#123; posts, _ := getJsonContent(&quot;post.json&quot;) c.String(http.StatusOK, posts) &#125;) &#125;() go func() &#123; v1.GET(&quot;/list/get-user&quot;, func(c *gin.Context) &#123; posts, _ := getJsonContent(&quot;db.json&quot;) c.String(http.StatusOK, posts) &#125;) &#125;() go func() &#123; router.NoRoute(func(c *gin.Context) &#123; c.JSON(http.StatusNotFound, gin.H&#123; &quot;status&quot;: 404, &quot;error&quot;: &quot;404, page not exists!&quot;, &#125;) &#125;) &#125;() err = router.Run(&quot;:8081&quot;) if err != nil &#123; fmt.Println(err) &#125;&#125; JavaScript-闭包&amp;记忆函数1234567891011121314151617181920212223242526272829var g = function () &#123; var memo = &#123;&quot;0&quot;: false, &quot;1&quot;: false, &quot;2&quot;:true, &quot;3&quot;:true&#125; function isPrime(p) &#123; if (p &lt; 3) &#123; return memo[p] &#125; else &#123; for (x in memo) &#123; if (memo[x] &amp;&amp; x * x &lt;= p) &#123; if (p % x == 0) &#123; return false &#125; &#125; &#125; &#125; return (memo[p] = true) &#125; return &#123; &quot;isPrime&quot;: isPrime, &quot;show&quot;: function () &#123; console.log(memo) &#125; &#125;&#125;()for (var i = 0; i &lt; 1000; i++) &#123; g.isPrime(i)&#125;g.show() Go-关键字defer测试Test Code 11234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556package mainimport ( &quot;fmt&quot;)func deferTest1() int &#123; c := 10 defer func() &#123; c += 10 fmt.Printf(&quot;Test 1 defer 1: %v\\n&quot;, c) &#125;() c += 10 fmt.Printf(&quot;Test 1 in func: %v\\n&quot;, c) defer func() &#123; c += 10 fmt.Printf(&quot;Test 1 defer 2: %v\\n&quot;, c) &#125;() return c&#125;func deferTest2() (c int) &#123; c = 10 defer func() &#123; c += 10 fmt.Printf(&quot;Test 2 defer 1: %v\\n&quot;, c) &#125;() c += 10 fmt.Printf(&quot;Test 2 in func: %v\\n&quot;, c) defer func() &#123; c += 10 fmt.Printf(&quot;Test 2 defer 2: %v\\n&quot;, c) &#125;() return c&#125;func deferTest3() *int &#123; c := 10 defer func() &#123; c += 10 fmt.Printf(&quot;Test 3 defer 1: %v\\n&quot;, c) &#125;() c += 10 fmt.Printf(&quot;Test 3 in func: %v\\n&quot;, c) defer func() &#123; c += 10 fmt.Printf(&quot;Test 3 defer 2: %v\\n&quot;, c) &#125;() return &amp;c&#125;func main() &#123; fmt.Printf(&quot;Test 1 return: %v\\tret val not declared in definition\\n&quot;, deferTest1()) fmt.Printf(&quot;Test 2 return: %v\\tret val declared in definition\\n&quot;, deferTest2()) fmt.Printf(&quot;Test 3 return: %v\\tret val is the pointer\\n&quot;, *deferTest3())&#125; 123456789101112Test 1 in func: 20Test 1 defer 2: 30Test 1 defer 1: 40Test 1 return: 20 ret val not declared in definitionTest 2 in func: 20Test 2 defer 2: 30Test 2 defer 1: 40Test 2 return: 40 ret val declared in definitionTest 3 in func: 20Test 3 defer 2: 30Test 3 defer 1: 40Test 3 return: 40 ret val is the pointer Test Code 21234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374package mainimport ( &quot;fmt&quot;)func deferTest1() int &#123; c := 10 defer func() &#123; c += 10 fmt.Printf(&quot;Test 1 defer 1: %v\\n&quot;, c) defer func() &#123; c += 10 &#125;() &#125;() c += 10 fmt.Printf(&quot;Test 1 in func: %v\\n&quot;, c) defer func() &#123; c += 10 fmt.Printf(&quot;Test 1 defer 2: %v\\n&quot;, c) defer func() &#123; c += 10 &#125;() &#125;() return c&#125;func deferTest2() (c int) &#123; c = 10 defer func() &#123; c += 10 fmt.Printf(&quot;Test 2 defer 1: %v\\n&quot;, c) defer func() &#123; c += 10 &#125;() &#125;() c += 10 fmt.Printf(&quot;Test 2 in func: %v\\n&quot;, c) defer func() &#123; c += 10 fmt.Printf(&quot;Test 2 defer 2: %v\\n&quot;, c) defer func() &#123; c += 10 &#125;() &#125;() return c&#125;func deferTest3() *int &#123; c := 10 defer func() &#123; c += 10 fmt.Printf(&quot;Test 3 defer 1: %v\\n&quot;, c) defer func() &#123; c += 10 &#125;() &#125;() c += 10 fmt.Printf(&quot;Test 3 in func: %v\\n&quot;, c) defer func() &#123; c += 10 fmt.Printf(&quot;Test 3 defer 2: %v\\n&quot;, c) defer func() &#123; c += 10 &#125;() &#125;() return &amp;c&#125;func main() &#123; fmt.Printf(&quot;Test 1 return: %v\\tret val not declared in definition\\n&quot;, deferTest1()) fmt.Printf(&quot;Test 2 return: %v\\tret val declared in definition\\n&quot;, deferTest2()) fmt.Printf(&quot;Test 3 return: %v\\tret val is the pointer\\n&quot;, *deferTest3())&#125; 123456789101112Test 1 in func: 20Test 1 defer 2: 30Test 1 defer 1: 50Test 1 return: 20 ret val not declared in definitionTest 2 in func: 20Test 2 defer 2: 30Test 2 defer 1: 50Test 2 return: 60 ret val declared in definitionTest 3 in func: 20Test 3 defer 2: 30Test 3 defer 1: 50Test 3 return: 60 ret val is the pointer","categories":[{"name":"Collection","slug":"Collection","permalink":"https://blueriverlhr.github.io/categories/Collection/"}],"tags":[{"name":"C","slug":"C","permalink":"https://blueriverlhr.github.io/tags/C/"},{"name":"Go","slug":"Go","permalink":"https://blueriverlhr.github.io/tags/Go/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://blueriverlhr.github.io/tags/JavaScript/"}]},{"title":"编写约定","slug":"code-convention","date":"2021-07-31T00:11:01.000Z","updated":"2021-08-13T01:01:17.084Z","comments":true,"path":"2021/code-convention/","link":"","permalink":"https://blueriverlhr.github.io/2021/code-convention/","excerpt":"内容顺序： 该网站原始 md 文档规范 个人编写语言规范","text":"内容顺序： 该网站原始 md 文档规范 个人编写语言规范 该网站的 md 文档规范框架规范在文档的开头，应该保证有如下内容例如： 12345678---title: 编写约定description: &#x27;该约定规定了本网站里所有代码编写应该遵循的范式，包括原始 md 文档的编写范式。&#x27;date: 2021-07-31 08:11:01categories: HelloWorldtags: - HelloWorld--- 顺序上只需要保证 title 位于第一个。其中： title 和 date 由 hexo 自动生成的格式为主，是默认风格； description 不得为空，一定要有所描述； categories 和 tags 在不清楚分类时候，填写 Default ，请用完整单词首字母大写，下划线隔开的方式命名。如果意思表达清楚下，可以不大写首字母。 文档的内容中，第一部分内容建议是“前言”，该处仅对文章大纲或者对阅读本文需要的能力要求进行说明。 理论相关的 Read More 保证直接在标题下。 Read More 一定处于前言的结尾，内容如下： 123&lt;!--more--&gt;--- 其中： 第一行表示 Read More 在此处出现 第三行标签表示分割线，分割第一部分和其他部分。 内容规范 编写的时候遵循 Markdown Lint； 目前未能遵守三个标准： MD009 MD010 MD014 MD033 尽量遵循中文文案排版指北 中文文章标点符号请全部使用中文标点； 英文标点使用场景： 纯英文文章中； 该段落或者，该注释纯英文； 代码中。 单独行数学公式保证每两个 doller 独自占领一行； 代码中如果在开头指定了 shell，则文内没有特别指出的时候，均将 sh 默认为该 shell 语言； 列表的最后一个项目用「。」结尾，其他项目用「；」结尾。 C命名原则 全局变量 const 变量单词大写下划线隔开，开头加上小写字母 c； define 宏单词大写下划线隔开； 普通情况则单词首字母全部大写。 局部变量 指针用 p_ 开头； for 循环中，计数器用单词，如果没有意义或者临时，请用 i,j,k...； 函数体中，第一个单词第一个字母不大写，其余单词第一个字母大写； 成员函数的第一个形式参数为 self 指针，指向引用的他的结构。 函数名单词之间用下划线隔开，单词首字母不大写。 头文件头部请按如下内容出现顺序排列，没有说明到的内容，请加在后面，自行调整 多行注释，说明头文件，解释头文件功能； include &lt;&gt;，尖括号前加上空格； include &quot;&quot;，引号前加上空格； 头文件惯例例子如下： #ifndef HEAD_FILE_NAME_H； #define HEAD_FILE_NAME_H； #endif。 define，该处先宏函数，再定义替代文本，再定义常量； 正文，先结构体定义，再函数定义，规范： 如果函数对应结构体，则函数定义跟在结构体下面； 对应注释请放在结构体或函数的上面，用多行注释括起。 源代码 使用单行注释； 全局变量定义在函数之前； 同文件内定义函数，其他函数在前，main 函数在后； main 函数的形式参数写出； 函数或者条件、循环语句的第一个大括号不换行，用一个空格隔开； 条件、循环语句关键字和小括号之间用一个空格隔开； else 不换行； , 分隔开的，每个逗号之后要加一个空格； 指针定义时，* 符号在变量上。 C++如果和个人 C 规范有冲突，按照个人 C++ 规范；如果规范没有说明，按照个人 C 规范。 函数 名称以所有单词首字母大写命名，无下划线； 前缀 公开方法用大写字母开头，其余用小写字母； 普通函数用 f_ 开头； 构造函数显式写出； 当遇上需要释放内存时，析构函数需要显式写出。 模板 模板用 t_ 开头； 不定类型用 T_ 开头，或者用 Type，T。 命名空间名称不省略，即不使用 using namespace std;，除非另有要求。 Python 遵循 PEP 要求。 Go 遵循 Go 语言官方要求； 如夺拿不定，遵循 C 语言个人要求。 JavaScript 普通函数名为第一个单词小写字母开头，其余大写字母开头为主； 方法如上； CSS 用连字符连接单词，所有单词用小写字母； 类所有单词以大写字母开头。 Others没有做个人要求的，遵循个人 C 和 C++ 规范，面向对象优先遵循 C++，无面向对象优先遵循 C。","categories":[{"name":"Default","slug":"Default","permalink":"https://blueriverlhr.github.io/categories/Default/"}],"tags":[{"name":"C","slug":"C","permalink":"https://blueriverlhr.github.io/tags/C/"},{"name":"C++","slug":"C","permalink":"https://blueriverlhr.github.io/tags/C/"},{"name":"Python","slug":"Python","permalink":"https://blueriverlhr.github.io/tags/Python/"},{"name":"Go","slug":"Go","permalink":"https://blueriverlhr.github.io/tags/Go/"},{"name":"Markdown","slug":"Markdown","permalink":"https://blueriverlhr.github.io/tags/Markdown/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://blueriverlhr.github.io/tags/JavaScript/"}]},{"title":"复变函数笔记-c1","slug":"complex-func-ed-ustc-c1","date":"2021-07-30T11:00:46.000Z","updated":"2021-08-06T11:54:33.029Z","comments":true,"path":"2021/complex-func-ed-ustc-c1/","link":"","permalink":"https://blueriverlhr.github.io/2021/complex-func-ed-ustc-c1/","excerpt":"复变函数","text":"复变函数 复数的定义和运算将复数定义为一对有序实数对$(a,b)$，如果用$\\mathbb{R}$记实数的全体，$\\mathbb{C}$记复数的全体，那么 $$\\mathbb{C} = { (a,b):a \\in \\mathbb{R}, b \\in \\mathbb{R} }$$ 在这个集合里，定义加法和乘法如下 $$(a,b)+(c,d)=(a+c,b+d) \\(a,b)(c,d)=(ac-bd,ad+bc)$$ 容易验证 加法和乘法满足交换律和结合律； $(0,0)$是零元素； $(-a,-b)$是$(a,b)$的负元素； $(1,0)$是乘法的单位元素； 每个非零元素$(a,b)$都有逆元素； 此外，$\\mathbb{C}$中的加法和乘法还满足分配律： $$[(a,b)+(c,d)] (e,f) = (a,b)(e,f)+(c,d)(e,f)$$ 故在以上基础上，$\\mathbb{C}$构成一个域，称为复数域。 如果记 $$\\widetilde{\\mathbb{R}} = { (a,0):a \\in \\mathbb{R} }$$ 那么$\\widetilde{\\mathbb{R}}$是$\\mathbb{C}$的一个子域。我们直接记$(a,0)=a$，在$\\mathbb{C}$中，$(0,1)$这个元素有其特殊性，它满足 $$(0,1)^2 = (0,1)(0,1) = (-1,0) = -1$$ 专门用记号$i$来记$(0,1)$这个元素，于是就有$i^2=-1$。由于$(0,b)=(b,0)(0,1)=bi$，于是每一个复数$(a,b)$都可写成 $$(a,b) = (a,0) + (0,b) = a+bi$$ 注意：复数域和实数域重要的区别就是在复数域不能定义两个复数的大小关系。 定义1.1.1 有序域域$\\mathbb{F}$称为有序域，如果在$\\mathbb{F}$的元素间能确定一种关系（记为$a&lt;b$），其满足下列要求： 对$\\mathbb{F}$中任意两个元素$a$，$b$，下述三个关系中必有一个而且只有一个成立：$$a&lt;b,a=b,a&gt;b;$$ 如果$a&lt;b$，$b&lt;c$，那么$a&lt;c$； 如果$a&lt;b$，那么对任意$c$，有$a+c&lt;b+c$； 如果$a&lt;b$，$c&gt;0$，那么$ac&lt;bc$。 容易知道实数域是有序域。 定理1.1.2 复数域不是有序域证 &ensp; 如果$\\mathbb{C}$是有序域，那么因为$i\\not ={0}$，$i$与$0$之间必有$i&gt;0$或$i&lt;0$的关系。 如果$i&gt;0$，则由1.1.1(4)得到$i×i&gt;0×i$，即$-1&gt;0$，再由1.1.1(3)，两端都加$1$得到$0&gt;1$。从另一方面，由$-1&gt;0$得到$-1×(-1)&gt;0×(-1)$，即$1&gt;0$，这和刚才的$0&gt;1$矛盾。 如果$i&lt;0$，两端都加$-i$，再由1.1.1(4)，两端乘$-i$得到$-1&gt;0$。重复上面的讨论，即可得到$0&gt;1$和$1&gt;0$的矛盾。 所以复数域不是有序域。 $Q.E.D$","categories":[{"name":"Math","slug":"Math","permalink":"https://blueriverlhr.github.io/categories/Math/"}],"tags":[{"name":"Complex_Function","slug":"Complex-Function","permalink":"https://blueriverlhr.github.io/tags/Complex-Function/"},{"name":"Math","slug":"Math","permalink":"https://blueriverlhr.github.io/tags/Math/"},{"name":"Complex_Function_ed_ustc","slug":"Complex-Function-ed-ustc","permalink":"https://blueriverlhr.github.io/tags/Complex-Function-ed-ustc/"}]},{"title":"用Hexo和GitHub创建个人Blog","slug":"hexo-github-to-blog","date":"2021-07-30T07:52:39.000Z","updated":"2021-08-06T03:24:49.231Z","comments":true,"path":"2021/hexo-github-to-blog/","link":"","permalink":"https://blueriverlhr.github.io/2021/hexo-github-to-blog/","excerpt":"有一个GitHub帐号； 安装了node.js、npm，并了解相关知识； 安装了git。 说明： 12345678# OS: Arch Linux# Shell: fish# Editor: vs code# Some Output will be omitted.# The operation system does not matter.# However the following Article is based on Arch Linux.# Some operation may be different from other os.","text":"有一个GitHub帐号； 安装了node.js、npm，并了解相关知识； 安装了git。 说明： 12345678# OS: Arch Linux# Shell: fish# Editor: vs code# Some Output will be omitted.# The operation system does not matter.# However the following Article is based on Arch Linux.# Some operation may be different from other os. 1.1 Hexo简介Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。 Hexo 可以理解为是基于node.js制作的一个博客工具，不是我们理解的一个开源的博客系统； Hexo 正常来说，不需要部署到我们的服务器上，我们的服务器上保存的，其实是基于在Hexo通过MarkDown编写的文章，然后Hexo帮我们生成静态的html页面，然后，将生成的html上传到我们的服务器。 简而言之：Hexo是个静态页面生成、上传的工具。 1.2 安装Hexo使用如下指令： 1~&gt; sudo npm install -g hexo 1.3 初始化选取一个文件夹，或者创建一个文件夹并打开至当前目录。这里以本人的文件夹为例 1234~&gt; cd Document~/Document&gt; mkdir myblog~/document&gt; cd myblog~/D/myblog&gt; hexo init Hexo会自动下载文件。目录如下： 123456789101112~/D/myblog&gt; ls -ltotal 208-rw-r--r-- 1 blur blur 0 Jul 30 13:26 _config.landscape.yml-rw-r--r-- 1 blur blur 2642 Jul 30 15:50 _config.yml-rw-r--r-- 1 blur blur 48608 Jul 30 15:50 db.jsondrwxr-xr-x 275 blur blur 20480 Jul 30 15:34 node_modules-rw-r--r-- 1 blur blur 724 Jul 30 15:34 package.json-rw-r--r-- 1 blur blur 118417 Jul 30 14:15 package-lock.jsondrwxr-xr-x 10 blur blur 4096 Jul 30 15:49 publicdrwxr-xr-x 2 blur blur 4096 Jul 30 13:26 scaffoldsdrwxr-xr-x 3 blur blur 4096 Jul 30 13:26 sourcedrwxr-xr-x 3 blur blur 4096 Jul 30 15:43 themes blur是我对Blue_River的简写。与Hexo的某一个主题无关哦 部分文件夹说明： 文件/文件夹 说明 _config.yml 配置文件，修改博客的基础配置、模板等 public 生成的静态文件，这个目录最终会发布到服务器 scaffolds 一些通用的markdown模板 source 编写的markdown文件，_drafts草稿文件，_posts发布的文章 themes 博客的模板 Hexo下载办法使用的是npm，所以对于速度慢的，可以将npm换源到淘宝源如： 1~/D/myblog&gt; npm config set registry https://registry.npm.taobao.org 目前阶段Hexo不会使用cnpm 1.4 生成html12~/D/myblog&gt; hexo g~/D/myblog&gt; hexo s 上面第一句用于生成页面，第二句用于在本地启动服务预览页面。 生成的内容保存在public里，而这些文件是将来提交到GitHub上去的。 hexo s是开启本地预览服务，打开浏览器访问http://localhost:4000即可看到内容。 很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端占用的缘故。 先搜索占领4000端口的进程 1~/D/myblog&gt; netstat -anp | grep 4000 获取PID然后关闭进程。 1~/D/myblog&gt; kill -9 PID 这样之后再一次搜索4000端口上的进程。如果返回grep出错，即端口可以使用 第一次初始化的时候，Hexo已经帮我们写好了一篇名为Hello World的文章。 1.5 修改主题可以选择进入Hexo官网寻找主题，主题都有README.md可以参考。 下载下来的主题应该保存在themes中。 然后修改_config.yml文件，使用ctrl+F寻找theme，将theme: landscape修改为比如：theme: light。 再次生成页面的时候，页面主题就会改变。 2.1 上传到GitHubGithub可以免费搭建个人博客。 Github有两种形式的page： 个人或组织的page：只能存在一个，master 分支，地址为 xxx.github.io 项目page：每个项目可以生成一个，gh-pages 分支，地址为 xxx.github.io/projectname 这里笔者采用的是个人版本的page，即仓库名需要命名为：github用户名.github.io。 生成的网址则为https://github用户名.github.io。 2.2 配置部署信息配置_config.yml中有关deploy的部分，使用ctrl+F寻找deploy。 这里展示的是使用SSH，使用SSH在每次deploy的时候不需要输入密码： 123456# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repository: git@github.com:bLueriVerLHR/bLueriVerLHR.github.io.git branch: main 其中repository后边是SSH，可以在指定的respository的下载处（下箭头+Code）选择使用SSH获取SSH。 这里需要个人提前获取好SSH 方法： 12~/D/myblog&gt; cd ~/.ssh~/D/myblog&gt; ls 如果没有后缀为pub文件的文件则创建一个SSH key 1~/D/myblog&gt; ssh-keygen -t rsa -C &quot;your_email@example.com&quot; 其中your_email@example.com是GitHub的邮箱。 接下来要求命名生成文件，如果为空，会默认生成生成id_rsa和id_rsa.pub两个秘钥文件。 接下来会要求设置密码，可以不输入，为空就是不需要密码。 之后还会有一些输出，看到后基本就是完成了。 接下来在GitHub上打开个人设置，选择含有SSH的那一个选项，选择SSH keys后面的选项后，title自己命名，下面的内容填写上面操作生成的以pub结尾的文件里的内容。 注意，前后不能有空格或回车。 如果没有错误显示，则SSH key就算设置完成了。 2.3 安装hexo的git插件直接执行hexo d的话一般会报如下错误： 1ERROR Deployer not found: git 原因是还需要安装一个插件： 1~/D/myblog&gt; npm install hexo-deployer-git --save 2.4 部署使用 1~/D/myblog&gt; hexo d 就可以部署。 不过hexo d会将见到的md文件都渲染。如果希望一些md文件不被渲染，先获取其对于_config.yml的相对位置，然后在_config.yml的文件中的skip_render后面添加内容。比如： 1skip_render: &quot;public/README.md&quot; 3.0 常用的hexo命令常见命令 1234567hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 缩写： 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 组合命令： 12hexo s -g #生成并本地预览hexo d -g #生成并上传 4.1 写博客执行： 1~/D/myblog&gt; hexo new &#x27;my-first-blog&#x27; 生成名为my-first-blog.md的文件，开头是 12345---title: my-first-blogdate: 2021-07-30 15:52:39tags: --- 4.1.1 自定义生成相关生成修改应该改变文件夹scaffolds中对应文件的内容。 完整内容如下： 123456789---title: postNamedate: 2013-12-02 15:30:16categories: 默认分类tags: [tag1,tag2,tag3]description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面--- 以下是正文 默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？ 答案是在合适的位置加上&lt;!--more--&gt;即可，例如： 12345678910111213# 前言 使用github pages服务搭建博客的好处有： 1. 全是静态文件，访问速度快；2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的； &lt;!--more--&gt; 4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；5. 博客内容可以轻松打包、转移、发布到其它平台；6. 等等； 4.1.2 new与new page那么hexo new page ‘postName’命令和hexo new ‘postName’有什么区别呢？ 1~/D/myblog&gt; hexo new page &quot;my-second-blog&quot; 生成页面，但是不会生成在博文目录中。 4.2 插件评论等其他内容添加需要使用插件自己设置。评论插件需要对特定主题，使用特定设定。","categories":[{"name":"Application","slug":"Application","permalink":"https://blueriverlhr.github.io/categories/Application/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blueriverlhr.github.io/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"https://blueriverlhr.github.io/tags/Github/"},{"name":"Git","slug":"Git","permalink":"https://blueriverlhr.github.io/tags/Git/"}]},{"title":"Hello Everyone!","slug":"hello-world","date":"2021-07-30T03:53:32.000Z","updated":"2021-08-15T06:21:17.438Z","comments":true,"path":"2021/hello-world/","link":"","permalink":"https://blueriverlhr.github.io/2021/hello-world/","excerpt":"Who am I ?My name is Blue_River. The name Blue_River came from a character in a JP H-comic. The character is neither noble nor admirable. However, I was impressed by the author of this piece of work. His name is Abgrund. I use the name of his character to memorize his devotion to create a harmonious world. About this siteAn ordinary personal blog site. The blogs may be written in English or in Chinese. It depends. I may share happiness with everyone who find the site. Likewise, I will share something about technology since I am addicted to advanced technology too.","text":"Who am I ?My name is Blue_River. The name Blue_River came from a character in a JP H-comic. The character is neither noble nor admirable. However, I was impressed by the author of this piece of work. His name is Abgrund. I use the name of his character to memorize his devotion to create a harmonious world. About this siteAn ordinary personal blog site. The blogs may be written in English or in Chinese. It depends. I may share happiness with everyone who find the site. Likewise, I will share something about technology since I am addicted to advanced technology too. jinrishici.load(function(result) { var poem = result.data.content; var info = \"【\"+result.data.origin.dynasty+\"】\"+ result.data.origin.author +\"《\" + result.data.origin.title + \"》\"; document.getElementById(\"poem\").innerHTML = poem; document.getElementById(\"info\").innerHTML = info; }) 对于网站上的图片。该网站上的图片均存在GitHub建立的图床上，这意味着你的电脑需要能够链接到&lt;raw.githubusercontent.com&gt;你可以使用&lt;IPAddress.com&gt;来查询相应的IP，并修改hosts来连看到这些图片。","categories":[{"name":"Default","slug":"Default","permalink":"https://blueriverlhr.github.io/categories/Default/"}],"tags":[{"name":"Default","slug":"Default","permalink":"https://blueriverlhr.github.io/tags/Default/"}]}],"categories":[{"name":"Application","slug":"Application","permalink":"https://blueriverlhr.github.io/categories/Application/"},{"name":"Default","slug":"Default","permalink":"https://blueriverlhr.github.io/categories/Default/"},{"name":"Collection","slug":"Collection","permalink":"https://blueriverlhr.github.io/categories/Collection/"},{"name":"Math","slug":"Math","permalink":"https://blueriverlhr.github.io/categories/Math/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://blueriverlhr.github.io/tags/Arch-Linux/"},{"name":"Gnome","slug":"Gnome","permalink":"https://blueriverlhr.github.io/tags/Gnome/"},{"name":"Arch_Linux","slug":"Arch-Linux","permalink":"https://blueriverlhr.github.io/tags/Arch-Linux/"},{"name":"Default","slug":"Default","permalink":"https://blueriverlhr.github.io/tags/Default/"},{"name":"Collection","slug":"Collection","permalink":"https://blueriverlhr.github.io/tags/Collection/"},{"name":"Go","slug":"Go","permalink":"https://blueriverlhr.github.io/tags/Go/"},{"name":"Linux","slug":"Linux","permalink":"https://blueriverlhr.github.io/tags/Linux/"},{"name":"Mirrors","slug":"Mirrors","permalink":"https://blueriverlhr.github.io/tags/Mirrors/"},{"name":"Julia","slug":"Julia","permalink":"https://blueriverlhr.github.io/tags/Julia/"},{"name":"C","slug":"C","permalink":"https://blueriverlhr.github.io/tags/C/"},{"name":"Brainfuck","slug":"Brainfuck","permalink":"https://blueriverlhr.github.io/tags/Brainfuck/"},{"name":"Compiler","slug":"Compiler","permalink":"https://blueriverlhr.github.io/tags/Compiler/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://blueriverlhr.github.io/tags/JavaScript/"},{"name":"C++","slug":"C","permalink":"https://blueriverlhr.github.io/tags/C/"},{"name":"Python","slug":"Python","permalink":"https://blueriverlhr.github.io/tags/Python/"},{"name":"Markdown","slug":"Markdown","permalink":"https://blueriverlhr.github.io/tags/Markdown/"},{"name":"Complex_Function","slug":"Complex-Function","permalink":"https://blueriverlhr.github.io/tags/Complex-Function/"},{"name":"Math","slug":"Math","permalink":"https://blueriverlhr.github.io/tags/Math/"},{"name":"Complex_Function_ed_ustc","slug":"Complex-Function-ed-ustc","permalink":"https://blueriverlhr.github.io/tags/Complex-Function-ed-ustc/"},{"name":"Hexo","slug":"Hexo","permalink":"https://blueriverlhr.github.io/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"https://blueriverlhr.github.io/tags/Github/"},{"name":"Git","slug":"Git","permalink":"https://blueriverlhr.github.io/tags/Git/"}]}
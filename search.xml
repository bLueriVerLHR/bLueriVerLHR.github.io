<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>个人觉得不错的文章</title>
    <url>/2021/articles-apprecated/</url>
    <content><![CDATA[<p>以下都是一些我看过觉得有用的文章的链接网址。</p>
<p>未来可能会基于自己的体验，对这些文章进行修改和合并。</p>
<p>一些文章可能会消失，或者改变标题，这些我无法做到实时改变。</p>
<span id="more"></span>

<hr>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><ul>
<li><a href="https://www.cnblogs.com/lywJ/p/10710361.html">nginx安装及其配置详细教程</a></li>
<li><a href="https://blog.csdn.net/Small_Yogurt/article/details/104968169">Node.js最新最详细安装教程（2020）</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/264785441">VSCode详细安装教程</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/104502997">python详细安装教程</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/82615237">Golang安装和配置</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/138951848">2021 Archlinux双系统安装教程（超详细）</a></li>
</ul>
<h3 id="技术相关"><a href="#技术相关" class="headerlink" title="技术相关"></a>技术相关</h3><ul>
<li><a href="https://zhuanlan.zhihu.com/p/391021123">Gokins1.0 来啦~</a></li>
<li><a href="https://www.zhihu.com/question/267683857/answer/335484161">一般的galgame会用什么软件制作呢？</a></li>
<li><a href="https://www.zhihu.com/question/340317602/answer/908473434">全世界有上千种编程语言，为什么程序员都只学习那几个主流语言?</a></li>
<li><a href="https://www.zhihu.com/question/23418181/answer/56106667">写匿名邮件最好用哪个邮箱？就是对方收到邮件后却查不到发件者。</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/44635072">如何阅读RFC？</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/335048580">八大经典排序算法详解</a></li>
<li><a href="https://www.zhihu.com/question/57357012/answer/723888621">3Blue1Brown 的视频是怎么制作的？</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/346666812">路径规划 | 图搜索算法：DFS、BFS、GBFS、Dijkstra、A*</a></li>
<li><a href="https://milapneupane.com.np/2019/07/06/learning-golang-from-zero-to-hero/">Golang Tutorial — from zero to hero</a></li>
<li><a href="https://blog.joren.ga/programming/vla-bad">The (too) many pitfalls of VLA in C</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/394968623">哈哈！TCP泄露了操作系统信息···</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/388704023">面试必备！TCP协议经典十五连问！</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/392806711">Gopher China 分享：Go 语言电子表格办公文档格式标准实践续日</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/392563871">Go Slice 原理</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/392479706">《A Quick Guide to Go’s Assembler》中文</a></li>
<li><a href="https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/">Var, Let, and Const – What’s the Difference?</a></li>
<li><a href="https://www.voidcanvas.com/javascript-array-evolution-performance/">Diving deep into JavaScript array - evolution &amp; performance</a></li>
<li><a href="https://bitbashing.io/comparing-floats.html">Comparing Floating-Point Numbers Is Tricky</a></li>
<li><a href="https://www.songho.ca/opengl/gl_projectionmatrix.html">OpenGL Projection Matrix</a></li>
<li><a href="https://zymin.cn/arcticle/Perspective-Matrix">透视矩阵Perspective Matrix</a></li>
<li><a href="http://www.gandraxa.com/isometric_projection.xml">Isometric Projection</a></li>
<li><a href="https://www.cnblogs.com/kingime/p/3681690.html">【游戏】对等轴测投影 Isometric Projection</a></li>
<li><a href="https://www.cnblogs.com/turingbooks/archive/2011/12/26/2301890.html">Isometric Game 及译法漫谈</a></li>
<li><a href="https://blog.csdn.net/tanmx219/article/details/81407264">OpenGL中frustum投影矩阵的推导</a></li>
<li><a href="https://gabormakesgames.com/quaternions.html">An introduction to Quaternions</a></li>
<li><a href="https://blog.csdn.net/qq_44884706/article/details/89397729">Vertex Shader</a></li>
<li><a href="https://www.cnblogs.com/wurui1994/p/7839777.html">WSL使用小结：从ArchLinux到Manjaro</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/266585727">在WSL2中安装ArchLinux</a></li>
<li><a href="https://www.cnblogs.com/theWinter/p/10640670.html">【Linux】解决用vi修改文件,保存文件时,提示“readonly option is set”</a></li>
<li><a href="https://github.com/DDoSolitary/LxRunOffline">DDoSolitary/LxRunOffline</a></li>
<li><a href="https://blog.csdn.net/qq_41673920/article/details/80334557">LINUX C语言 printf 输出颜色 属性控制 打印带颜色字体（简单易理解）printf带0X前缀输出控制</a></li>
</ul>
]]></content>
      <categories>
        <category>Collection</category>
      </categories>
      <tags>
        <tag>Collection</tag>
      </tags>
  </entry>
  <entry>
    <title>编写约定</title>
    <url>/2021/code-convention/</url>
    <content><![CDATA[<p>内容顺序：</p>
<ul>
<li>该网站原始 md 文档规范</li>
<li>个人编写语言规范</li>
</ul>
<span id="more"></span>

<hr>
<h2 id="该网站的-md-文档规范"><a href="#该网站的-md-文档规范" class="headerlink" title="该网站的 md 文档规范"></a>该网站的 md 文档规范</h2><h3 id="框架规范"><a href="#框架规范" class="headerlink" title="框架规范"></a>框架规范</h3><p>在文档的开头，应该保证有如下内容例如：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 编写约定</span><br><span class="line">description: &#x27;该约定规定了本网站里所有代码编写应该遵循的范式，包括原始 md 文档的编写范式。&#x27;</span><br><span class="line">date: 2021-07-31 08:11:01</span><br><span class="line">categories: HelloWorld</span><br><span class="line">tags:</span><br><span class="line"><span class="section"> - HelloWorld</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<p>顺序上只需要保证 title 位于第一个。其中：</p>
<ul>
<li>title 和 date 由 hexo 自动生成的格式为主，是默认风格；</li>
<li>description 不得为空，一定要有所描述；</li>
<li>categories 和 tags 在不清楚分类时候，填写 Default ，请用完整单词首字母大写，下划线隔开的方式命名。如果意思表达清楚下，可以不大写首字母。</li>
</ul>
<p>文档的内容中，第一部分内容建议是“前言”，该处仅对文章大纲或者对阅读本文需要的能力要求进行说明。</p>
<p>理论相关的 Read More 保证直接在标题下。</p>
<p>Read More 一定处于前言的结尾，内容如下：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>其中：</p>
<ul>
<li>第一行表示 Read More 在此处出现</li>
<li>第三行标签表示分割线，分割第一部分和其他部分。</li>
</ul>
<h3 id="内容规范"><a href="#内容规范" class="headerlink" title="内容规范"></a>内容规范</h3><ul>
<li>编写的时候遵循 Markdown Lint；<ul>
<li>目前未能遵守三个标准：<ul>
<li>MD009</li>
<li>MD010</li>
<li>MD014</li>
<li>MD033 </li>
</ul>
</li>
</ul>
</li>
<li>尽量遵循 <a href="https://github.com/sparanoid/chinese-copywriting-guidelines">中文文案排版指北</a><ul>
<li>附加条款：链接的两侧也需要加空格；</li>
</ul>
</li>
<li>中文文章标点符号请全部使用中文标点；</li>
<li>英文标点使用场景：<ul>
<li>纯英文文章中；</li>
<li>该段落或者，该注释纯英文；</li>
<li>代码中。</li>
</ul>
</li>
<li>单独行数学公式保证每两个 doller 独自占领一行；</li>
<li>代码中如果在开头指定了 shell，则文内没有特别指出的时候，均将 sh 默认为该 shell 语言；</li>
<li>列表的最后一个项目用「。」结尾，其他项目用「；」结尾；</li>
<li>纯英文表格需要行对齐；</li>
<li>非英文表格第二行如：<code>|-|-|</code>。</li>
</ul>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="命名原则"><a href="#命名原则" class="headerlink" title="命名原则"></a>命名原则</h3><ul>
<li>全局变量<ul>
<li>const 变量单词大写下划线隔开，开头加上小写字母 <code>c</code>；</li>
<li>define 宏单词大写下划线隔开；</li>
<li>普通情况则单词首字母全部大写。</li>
</ul>
</li>
<li>局部变量<ul>
<li>指针用 <code>p_</code> 开头；</li>
<li>for 循环中，计数器用单词，如果没有意义或者临时，请用 <code>i,j,k...</code>；</li>
<li>函数体中，第一个单词第一个字母不大写，其余单词第一个字母大写，包括形式参数；</li>
<li>成员函数的第一个形式参数为 <code>self</code> 指针，指向引用的他的结构。</li>
</ul>
</li>
<li>函数名单词之间用下划线隔开，单词首字母不大写。</li>
</ul>
<h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><p>头部请按如下内容出现顺序排列，没有说明到的内容，请加在后面，自行调整</p>
<ul>
<li>多行注释，说明头文件，解释头文件功能；</li>
<li><code>include &lt;&gt;</code>，尖括号前加上空格；</li>
<li><code>include &quot;&quot;</code>，引号前加上空格；</li>
<li>头文件惯例例子如下：<ul>
<li><code>#ifndef HEAD_FILE_NAME_H</code>；</li>
<li><code>#define HEAD_FILE_NAME_H</code>；</li>
<li><code>#endif</code>。</li>
</ul>
</li>
<li><code>define</code>，该处先宏函数，再定义替代文本，再定义常量；</li>
<li>正文，先结构体定义，再函数定义，规范：<ul>
<li>如果函数对应结构体，则函数定义跟在结构体下面；</li>
<li>对应注释请放在结构体或函数的上面，用多行注释括起。</li>
</ul>
</li>
</ul>
<h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><ul>
<li>使用单行注释；</li>
<li>全局变量定义在函数之前；</li>
<li>同文件内定义函数，其他函数在前，main 函数在后；</li>
<li>main 函数的形式参数写出；</li>
<li>函数或者条件、循环语句的第一个大括号不换行，用一个空格隔开；</li>
<li>条件、循环语句关键字和小括号之间用一个空格隔开；</li>
<li>else 不换行；</li>
<li><code>,</code> 分隔开的，每个逗号之后要加一个空格；</li>
<li>指针定义时，<code>*</code> 符号在变量上。</li>
</ul>
<h2 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h2><p>如果和个人 C 规范有冲突，按照个人 C++ 规范；如果规范没有说明，按照个人 C 规范。</p>
<ul>
<li>函数<ul>
<li>名称以所有单词首字母大写命名，无下划线；</li>
<li>前缀<ul>
<li>公开方法用大写字母开头，其余用小写字母；</li>
<li>普通函数用 <code>f_</code> 开头；</li>
</ul>
</li>
<li>构造函数显式写出；</li>
<li>当遇上需要释放内存时，析构函数需要显式写出。</li>
</ul>
</li>
<li>模板<ul>
<li>模板用 <code>t_</code> 开头；</li>
<li>不定类型用 <code>T_</code> 开头，或者用 <code>Type</code>，<code>T</code>。</li>
</ul>
</li>
<li>命名空间名称不省略，即不使用 <code>using namespace std;</code>，除非另有要求；</li>
<li>类<ul>
<li>名称以所有单词首字母大写命名，无下划线。</li>
</ul>
</li>
</ul>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><ul>
<li>遵循 PEP 要求。</li>
</ul>
<h2 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h2><ul>
<li>遵循 Go 语言官方要求；</li>
<li>如夺拿不定，遵循 C 语言个人要求。</li>
</ul>
<h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><ul>
<li>普通函数名为第一个单词小写字母开头，其余大写字母开头为主；</li>
<li>方法如上；</li>
<li>CSS 用连字符连接单词，所有单词用小写字母；</li>
<li>类所有单词以大写字母开头。</li>
</ul>
<h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p>没有做个人要求的，遵循个人 C 和 C++ 规范，面向对象优先遵循 C++，无面向对象优先遵循 C。</p>
]]></content>
      <categories>
        <category>Default</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>C++</tag>
        <tag>Python</tag>
        <tag>Go</tag>
        <tag>Markdown</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Compiler for Brainfuck</title>
    <url>/2021/brainfuck-compiler/</url>
    <content><![CDATA[<p>The code is copied from an article in Zhihu. The original answer is <a href="https://www.zhihu.com/question/434732218/answer/1635894731">here</a>.</p>
<p>But today I will give a simple introduction to brainfuck as well.</p>
<span id="more"></span>

<hr>
<h2 id="Simple-Introduction-to-Brainfuck"><a href="#Simple-Introduction-to-Brainfuck" class="headerlink" title="Simple Introduction to Brainfuck"></a>Simple Introduction to Brainfuck</h2><p>As one of the most famous esoteric programming languages, brainfuck only has 8 commands.</p>
<p>Brainfuck operates on an array consisting of zero.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... [0] [0] [0] [0] [0] [0] ...</span><br></pre></td></tr></table></figure>

<p>The length of this array has no strict limits. Additionally, there is a pointer, initially pointing to the first memory cell.</p>
<p>The 8 commands are:</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>&gt;</td>
<td>Move the pointer to the right</td>
</tr>
<tr>
<td>&lt;</td>
<td>Move the pointer to the left</td>
</tr>
<tr>
<td>+</td>
<td>Increment the memory cell at the pointer</td>
</tr>
<tr>
<td>-</td>
<td>Decrement the memory cell at the pointer</td>
</tr>
<tr>
<td>.</td>
<td>Output the character signified by the cell at the pointer</td>
</tr>
<tr>
<td>,</td>
<td>Input a character and store it in the cell at the pointer</td>
</tr>
<tr>
<td>[</td>
<td>Jump past the matching ] if the cell at the pointer is 0</td>
</tr>
<tr>
<td>]</td>
<td>Jump back to the matching [ if the cell at the pointer is nonzero</td>
</tr>
</tbody></table>
<p>All characters except <code>&gt;&lt;+-.,[]</code> should be used.</p>
<h2 id="Complier’s-Source-Code"><a href="#Complier’s-Source-Code" class="headerlink" title="Complier’s Source Code"></a>Complier’s Source Code</h2><p>Here is the source code of the compiler.</p>
<p>The C++ version must compiled as a cpp file, since I failed with the argv[1].</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">30000</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> code[<span class="number">100000</span>];</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> stack[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> stack_len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    </span><br><span class="line">    FILE* file;</span><br><span class="line">    <span class="keyword">char</span>* p = s + <span class="number">10000</span>;</span><br><span class="line">   </span><br><span class="line">    file = <span class="built_in">fopen</span>(argv[<span class="number">1</span>],<span class="string">&quot;r&quot;</span>);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">fread</span>(&amp;code[len], <span class="number">1</span>, <span class="number">1</span>, file) == <span class="number">1</span>) &#123;</span><br><span class="line">        len++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">setbuf</span>(stdout,<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span>(code[i]) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">                (*p)++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">                (*p)--;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;&gt;&#x27;</span>:</span><br><span class="line">                p++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;&lt;&#x27;</span>:</span><br><span class="line">                p--;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">                <span class="built_in">putchar</span>((<span class="keyword">int</span>)(*p));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;,&#x27;</span>:</span><br><span class="line">                *p=<span class="built_in">getchar</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span>(*p) &#123;</span><br><span class="line">                    stack[stack_len++]=i;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">int</span> j,k;</span><br><span class="line">                    <span class="keyword">for</span>(k = i, j = <span class="number">0</span>; k &lt; len; k++) &#123;</span><br><span class="line">                        code[k] == <span class="string">&#x27;[&#x27;</span> &amp;&amp; j++;</span><br><span class="line">                        code[k] == <span class="string">&#x27;]&#x27;</span> &amp;&amp; j--;</span><br><span class="line">                        <span class="keyword">if</span>(j == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(j == <span class="number">0</span>)</span><br><span class="line">                        i = k;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">fprintf</span>(stderr,<span class="string">&quot;%s:%dn&quot;</span>,__FILE__,__LINE__);</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">                i = stack[stack_len-- - <span class="number">1</span>] - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Go version now has a bad performace when encouter with Chinese character.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;bufio&quot;</span></span><br><span class="line">    <span class="string">&quot;errors&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Instruction <span class="keyword">struct</span> &#123;</span><br><span class="line">    operator <span class="keyword">uint16</span></span><br><span class="line">    operand  <span class="keyword">uint16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    op_inc_dp = <span class="literal">iota</span></span><br><span class="line">    op_dec_dp</span><br><span class="line">    op_inc_val</span><br><span class="line">    op_dec_val</span><br><span class="line">    op_out</span><br><span class="line">    op_in</span><br><span class="line">    op_jmp_fwd</span><br><span class="line">    op_jmp_bck</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> data_size <span class="keyword">int</span> = <span class="number">65535</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">compileBF</span><span class="params">(input <span class="keyword">string</span>)</span> <span class="params">(program []Instruction, err error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> pc, jmp_pc <span class="keyword">uint16</span> = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    jmp_stack := <span class="built_in">make</span>([]<span class="keyword">uint16</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> _, c := <span class="keyword">range</span> input &#123;</span><br><span class="line">        <span class="keyword">switch</span> c &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;&gt;&#x27;</span>:</span><br><span class="line">            program = <span class="built_in">append</span>(program, Instruction&#123;op_inc_dp, <span class="number">0</span>&#125;)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;&lt;&#x27;</span>:</span><br><span class="line">            program = <span class="built_in">append</span>(program, Instruction&#123;op_dec_dp, <span class="number">0</span>&#125;)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            program = <span class="built_in">append</span>(program, Instruction&#123;op_inc_val, <span class="number">0</span>&#125;)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            program = <span class="built_in">append</span>(program, Instruction&#123;op_dec_val, <span class="number">0</span>&#125;)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">            program = <span class="built_in">append</span>(program, Instruction&#123;op_out, <span class="number">0</span>&#125;)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;,&#x27;</span>:</span><br><span class="line">            program = <span class="built_in">append</span>(program, Instruction&#123;op_in, <span class="number">0</span>&#125;)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">            program = <span class="built_in">append</span>(program, Instruction&#123;op_jmp_fwd, <span class="number">0</span>&#125;)</span><br><span class="line">            jmp_stack = <span class="built_in">append</span>(jmp_stack, pc)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(jmp_stack) == <span class="number">0</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">&quot;compilation error&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            jmp_pc = jmp_stack[<span class="built_in">len</span>(jmp_stack)<span class="number">-1</span>]</span><br><span class="line">            jmp_stack = jmp_stack[:<span class="built_in">len</span>(jmp_stack)<span class="number">-1</span>]</span><br><span class="line">            program = <span class="built_in">append</span>(program, Instruction&#123;op_jmp_bck, jmp_pc&#125;)</span><br><span class="line">            program[jmp_pc].operand = pc</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            pc--</span><br><span class="line">        &#125;</span><br><span class="line">        pc++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(jmp_stack) != <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">&quot;compilation error&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">executeBF</span><span class="params">(program []Instruction)</span></span> &#123;</span><br><span class="line">    data := <span class="built_in">make</span>([]<span class="keyword">int16</span>, data_size)</span><br><span class="line">    <span class="keyword">var</span> data_ptr <span class="keyword">uint16</span> = <span class="number">0</span></span><br><span class="line">    reader := bufio.NewReader(os.Stdin)</span><br><span class="line">    <span class="keyword">for</span> pc := <span class="number">0</span>; pc &lt; <span class="built_in">len</span>(program); pc++ &#123;</span><br><span class="line">        <span class="keyword">switch</span> program[pc].operator &#123;</span><br><span class="line">        <span class="keyword">case</span> op_inc_dp:</span><br><span class="line">            data_ptr++</span><br><span class="line">        <span class="keyword">case</span> op_dec_dp:</span><br><span class="line">            data_ptr--</span><br><span class="line">        <span class="keyword">case</span> op_inc_val:</span><br><span class="line">            data[data_ptr]++</span><br><span class="line">        <span class="keyword">case</span> op_dec_val:</span><br><span class="line">            data[data_ptr]--</span><br><span class="line">        <span class="keyword">case</span> op_out:</span><br><span class="line">            fmt.Printf(<span class="string">&quot;%c&quot;</span>, data[data_ptr])</span><br><span class="line">        <span class="keyword">case</span> op_in:</span><br><span class="line">            read_val, _ := reader.ReadByte()</span><br><span class="line">            data[data_ptr] = <span class="keyword">int16</span>(read_val)</span><br><span class="line">        <span class="keyword">case</span> op_jmp_fwd:</span><br><span class="line">            <span class="keyword">if</span> data[data_ptr] == <span class="number">0</span> &#123;</span><br><span class="line">                pc = <span class="keyword">int</span>(program[pc].operand)</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> op_jmp_bck:</span><br><span class="line">            <span class="keyword">if</span> data[data_ptr] &gt; <span class="number">0</span> &#123;</span><br><span class="line">                pc = <span class="keyword">int</span>(program[pc].operand)</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">panic</span>(<span class="string">&quot;Unknown operator&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    args := os.Args</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(args) != <span class="number">2</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Usage: %s filename\n&quot;</span>, args[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    filename := args[<span class="number">1</span>]</span><br><span class="line">    fileContents, err := ioutil.ReadFile(filename)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Error reading %s\n&quot;</span>, filename)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    program, err := compileBF(<span class="keyword">string</span>(fileContents))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    executeBF(program)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Input:</p>
<p>(Filename is input.bf and the source code is bfc.go)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">++++++++++[&gt;+++++++&gt;++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;++.&gt;+.+++++++..+++.&gt;++.&lt;&lt;+++++++++++++++.&gt;.+++.------.--------.&gt;+.&gt;.</span><br></pre></td></tr></table></figure>

<p>Use command</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ go run bfc.go input.bf</span><br></pre></td></tr></table></figure>

<p>Or compile the source code:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ go build bfc.go</span><br><span class="line">$ gcc bfc.cpp -o bfc</span><br><span class="line"></span><br><span class="line">$ ./bfc input.bf</span><br></pre></td></tr></table></figure>

<p>Output:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure>

<h2 id="More-Information"><a href="#More-Information" class="headerlink" title="More Information"></a>More Information</h2><p>Esolangs: <a href="https://esolangs.org/wiki/Brainfuck">https://esolangs.org/wiki/Brainfuck</a></p>
<p>StackOverflow: <a href="https://stackoverflow.com/questions/16836860/how-does-the-brainfuck-hello-world-actually-work">https://stackoverflow.com/questions/16836860/how-does-the-brainfuck-hello-world-actually-work</a></p>
]]></content>
      <categories>
        <category>Application</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>Go</tag>
        <tag>Brainfuck</tag>
        <tag>Compiler</tag>
      </tags>
  </entry>
  <entry>
    <title>用 Hexo 和 GitHub 创建个人 Blog</title>
    <url>/2021/hexo-github-to-blog/</url>
    <content><![CDATA[<ul>
<li>有一个 <a href="https://github.com/">GitHub</a> 帐号；</li>
<li>安装了 <a href="https://nodejs.org/en/">node.js</a> 、 <a href="https://www.npmjs.com/">npm</a> ，并了解相关知识；</li>
<li>安装了 <a href="https://git-scm.com/">git</a> 。</li>
</ul>
<p>说明：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># OS:       Arch Linux</span></span><br><span class="line"><span class="comment"># Shell:    fish</span></span><br><span class="line"><span class="comment"># Editor:   vs code</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Some Output will be omitted.</span></span><br><span class="line"><span class="comment"># The operation system does not matter.</span></span><br><span class="line"><span class="comment"># However the following Article is based on Arch Linux.</span></span><br><span class="line"><span class="comment"># Some operation may be different from other os.</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<hr>
<h2 id="1-1-Hexo-简介"><a href="#1-1-Hexo-简介" class="headerlink" title="1.1 Hexo 简介"></a>1.1 Hexo 简介</h2><p>Hexo 是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持 Markdown 格式，有众多优秀插件和主题。</p>
<ul>
<li>Hexo 可以理解为是基于 node.js 制作的一个博客工具，不是我们理解的一个开源的博客系统；</li>
<li>Hexo 正常来说，不需要部署到我们的服务器上，我们的服务器上保存的，其实是基于在 Hexo 通过 MarkDown 编写的文章，然后 Hexo 帮我们生成静态的 html 页面，然后，将生成的 html 上传到我们的服务器。</li>
</ul>
<p>简而言之：Hexo 是个静态页面生成、上传的工具。</p>
<h2 id="1-2-安装-Hexo"><a href="#1-2-安装-Hexo" class="headerlink" title="1.2 安装 Hexo"></a>1.2 安装 Hexo</h2><p>使用如下指令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~&gt; sudo npm install -g hexo</span><br></pre></td></tr></table></figure>

<h2 id="1-3-初始化"><a href="#1-3-初始化" class="headerlink" title="1.3 初始化"></a>1.3 初始化</h2><p>选取一个文件夹，或者创建一个文件夹并打开至当前目录。这里以本人的文件夹为例</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~&gt; <span class="built_in">cd</span> Document</span><br><span class="line">~/Document&gt; mkdir myblog</span><br><span class="line">~/document&gt; <span class="built_in">cd</span> myblog</span><br><span class="line">~/D/myblog&gt; hexo init</span><br></pre></td></tr></table></figure>

<p>Hexo 会自动下载文件。目录如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; ls -l</span><br><span class="line">total 208</span><br><span class="line">-rw-r--r--   1 blur blur      0 Jul 30 13:26 _config.landscape.yml</span><br><span class="line">-rw-r--r--   1 blur blur   2642 Jul 30 15:50 _config.yml</span><br><span class="line">-rw-r--r--   1 blur blur  48608 Jul 30 15:50 db.json</span><br><span class="line">drwxr-xr-x 275 blur blur  20480 Jul 30 15:34 node_modules</span><br><span class="line">-rw-r--r--   1 blur blur    724 Jul 30 15:34 package.json</span><br><span class="line">-rw-r--r--   1 blur blur 118417 Jul 30 14:15 package-lock.json</span><br><span class="line">drwxr-xr-x  10 blur blur   4096 Jul 30 15:49 public</span><br><span class="line">drwxr-xr-x   2 blur blur   4096 Jul 30 13:26 scaffolds</span><br><span class="line">drwxr-xr-x   3 blur blur   4096 Jul 30 13:26 <span class="built_in">source</span></span><br><span class="line">drwxr-xr-x   3 blur blur   4096 Jul 30 15:43 themes</span><br></pre></td></tr></table></figure>

<p>blur 是我对 Blue_River 的简写。与 Hexo 的某一个主题无关哦</p>
<p>部分文件夹说明：</p>
<table>
<thead>
<tr>
<th>文件/文件夹</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>_config.yml</td>
<td>配置文件，修改博客的基础配置、模板等</td>
</tr>
<tr>
<td>public</td>
<td>生成的静态文件，这个目录最终会发布到服务器</td>
</tr>
<tr>
<td>scaffolds</td>
<td>一些通用的 markdown 模板</td>
</tr>
<tr>
<td>source</td>
<td>编写的 markdown 文件，_drafts 草稿文件，_posts 发布的文章</td>
</tr>
<tr>
<td>themes</td>
<td>博客的模板</td>
</tr>
</tbody></table>
<p>Hexo 下载办法使用的是 npm，所以对于速度慢的，可以将 npm 换源到淘宝源如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p>目前阶段 Hexo 不会使用 cnpm</p>
<h2 id="1-4-生成html"><a href="#1-4-生成html" class="headerlink" title="1.4 生成html"></a>1.4 生成html</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; hexo g</span><br><span class="line">~/D/myblog&gt; hexo s</span><br></pre></td></tr></table></figure>

<p>上面第一句用于生成页面，第二句用于在本地启动服务预览页面。</p>
<p>生成的内容保存在 public 里，而这些文件是将来提交到 GitHub 上去的。</p>
<p>hexo s 是开启本地预览服务，打开浏览器访问 <code>http://localhost:4000</code> 即可看到内容。</p>
<p>很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端占用的缘故。</p>
<p>先搜索占领4000端口的进程</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; netstat -anp | grep 4000</span><br></pre></td></tr></table></figure>

<p>获取 PID 然后关闭进程。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; <span class="built_in">kill</span> -9 PID</span><br></pre></td></tr></table></figure>

<p>这样之后再一次搜索4000端口上的进程。如果返回 grep 出错，即端口可以使用</p>
<p>第一次初始化的时候，Hexo 已经帮我们写好了一篇名为 Hello World 的文章。</p>
<h2 id="1-5-修改主题"><a href="#1-5-修改主题" class="headerlink" title="1.5 修改主题"></a>1.5 修改主题</h2><p>可以选择进入 <a href="https://hexo.io/">Hexo官网</a> 寻找主题，主题都有 <code>README.md</code> 可以参考。</p>
<p>下载下来的主题应该保存在 themes 中。</p>
<p>然后修改 <code>_config.yml</code> 文件，使用 <code>ctrl+F</code> 寻找 <code>theme</code>，将 <code>theme: landscape</code> 修改为比如：<code>theme: light</code>。</p>
<p>再次生成页面的时候，页面主题就会改变。</p>
<h2 id="2-1-上传到-GitHub"><a href="#2-1-上传到-GitHub" class="headerlink" title="2.1 上传到 GitHub"></a>2.1 上传到 GitHub</h2><p>Github 可以免费搭建个人博客。</p>
<p>Github 有两种形式的 page：</p>
<ul>
<li>个人或组织的 page：只能存在一个，master 分支，地址为 xxx.github.io</li>
<li>项目 page：每个项目可以生成一个，gh-pages 分支，地址为 xxx.github.io/projectname</li>
</ul>
<p>这里笔者采用的是个人版本的 page，即仓库名需要命名为：github用户名.github.io。</p>
<p>生成的网址则为<code>https://github用户名.github.io</code>。</p>
<h2 id="2-2-配置部署信息"><a href="#2-2-配置部署信息" class="headerlink" title="2.2 配置部署信息"></a>2.2 配置部署信息</h2><p>配置 <code>_config.yml</code> 中有关 deploy 的部分，使用 <code>ctrl+F</code> 寻找 <code>deploy</code>。</p>
<p>这里展示的是使用 SSH，使用 SSH 在每次 deploy 的时候不需要输入密码：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:bLueriVerLHR/bLueriVerLHR.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>

<p>其中 repository 后边是 SSH，可以在指定的 repository 的下载处（下箭头+ Code）选择使用 SSH 获取 SSH。</p>
<p>这里需要个人提前获取好 SSH</p>
<p>方法：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">~/D/myblog&gt; ls</span><br></pre></td></tr></table></figure>

<p>如果没有后缀为 pub 文件的文件则创建一个 SSH key</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; ssh-keygen -t rsa -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure>
<p>其中 <code>your_email@example.com</code> 是 GitHub 的邮箱。</p>
<p>接下来要求命名生成文件，如果为空，会默认生成生成 <code>id_rsa</code> 和 <code>id_rsa.pub</code> 两个秘钥文件。</p>
<p>接下来会要求设置密码，可以不输入，为空就是不需要密码。</p>
<p>之后还会有一些输出，看到后基本就是完成了。</p>
<p>接下来在 GitHub 上打开个人设置，选择含有 SSH 的那一个选项，选择 SSH keys 后面的选项后，title 自己命名，下面的内容填写上面操作生成的以 pub 结尾的文件里的内容。</p>
<p>注意，前后不能有空格或回车。</p>
<p>如果没有错误显示，则 SSH key 就算设置完成了。</p>
<h2 id="2-3-安装-hexo-的-git-插件"><a href="#2-3-安装-hexo-的-git-插件" class="headerlink" title="2.3 安装 hexo 的 git 插件"></a>2.3 安装 hexo 的 git 插件</h2><p>直接执行 hexo d 的话一般会报如下错误：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure>

<p>原因是还需要安装一个插件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h2 id="2-4-部署"><a href="#2-4-部署" class="headerlink" title="2.4 部署"></a>2.4 部署</h2><p>使用</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; hexo d</span><br></pre></td></tr></table></figure>

<p>就可以部署。</p>
<p>不过 <code>hexo d</code> 会将见到的 md 文件都渲染。如果希望一些md 文件不被渲染，先获取其对于 <code>_config.yml</code> 的相对位置，然后在 <code>_config.yml</code> 的文件中的 <code>skip_render</code> 后面添加内容。比如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">&quot;public/README.md&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-0-常用的-hexo-命令"><a href="#3-0-常用的-hexo-命令" class="headerlink" title="3.0 常用的 hexo 命令"></a>3.0 常用的 hexo 命令</h2><p>常见命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;postName&quot;</span>         <span class="comment"># 新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;pageName&quot;</span>    <span class="comment"># 新建页面</span></span><br><span class="line">hexo generate               <span class="comment"># 生成静态页面至 public 目录</span></span><br><span class="line">hexo server                 <span class="comment"># 开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span></span><br><span class="line">hexo deploy                 <span class="comment"># 部署到 GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>                   <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version                <span class="comment"># 查看 Hexo 的版本</span></span><br></pre></td></tr></table></figure>

<p>缩写：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>

<p>组合命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo s -g <span class="comment"># 生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment"># 生成并上传</span></span><br></pre></td></tr></table></figure>

<h2 id="4-1-写博客"><a href="#4-1-写博客" class="headerlink" title="4.1 写博客"></a>4.1 写博客</h2><p>执行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; hexo new <span class="string">&#x27;my-first-blog&#x27;</span></span><br></pre></td></tr></table></figure>

<p>生成名为 <code>my-first-blog.md</code> 的文件，开头是</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: my-first-blog</span><br><span class="line">date: 2021-07-30 15:52:39</span><br><span class="line"><span class="section">tags: </span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<h3 id="4-1-1-自定义生成"><a href="#4-1-1-自定义生成" class="headerlink" title="4.1.1 自定义生成"></a>4.1.1 自定义生成</h3><p>相关生成修改应该改变文件夹 <code>scaffolds</code> 中对应文件的内容。</p>
<p>完整内容如下：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName</span><br><span class="line">date: 2013-12-02 15:30:16</span><br><span class="line">categories: 默认分类</span><br><span class="line">tags: [tag1,tag2,tag3]</span><br><span class="line"><span class="section">description: 附加一段文章摘要，字数最好在140字以内，会出现在 meta 的 description 里面</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"> </span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure>

<p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p>
<p>答案是在合适的位置加上 <code>&lt;!--more--&gt;</code> 即可，例如：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># 前言</span></span><br><span class="line"> </span><br><span class="line">使用 github pages 服务搭建博客的好处有：</span><br><span class="line"> </span><br><span class="line"><span class="bullet">1.</span> 全是静态文件，访问速度快；</span><br><span class="line"><span class="bullet">2.</span> 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line"><span class="bullet">3.</span> 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"> </span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"> </span><br><span class="line"><span class="bullet">4.</span> 数据绝对安全，基于 github 的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line"><span class="bullet">5.</span> 博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line"><span class="bullet">6.</span> 等等；</span><br></pre></td></tr></table></figure>

<h3 id="4-1-2-new与new-page"><a href="#4-1-2-new与new-page" class="headerlink" title="4.1.2 new与new page"></a>4.1.2 new与new page</h3><p>那么hexo new page ‘postName’命令和hexo new ‘postName’有什么区别呢？</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/D/myblog&gt; hexo new page <span class="string">&quot;my-second-blog&quot;</span></span><br></pre></td></tr></table></figure>

<p>生成页面，但是不会生成在博文目录中。</p>
<h2 id="4-2-插件"><a href="#4-2-插件" class="headerlink" title="4.2 插件"></a>4.2 插件</h2><p>评论等其他内容添加需要使用插件自己设置。评论插件需要对特定主题，使用特定设定。</p>
]]></content>
      <categories>
        <category>Application</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Mirrors</title>
    <url>/2021/mirrors/</url>
    <content><![CDATA[<p>For programmers in China.</p>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/">Tsinghua</a><br><a href="http://mirrors.ustc.edu.cn/">USTC</a><br><a href="https://developer.aliyun.com/mirror/">Ali</a></p>
<span id="more"></span>

<hr>
<h2 id="Arch-Linux"><a href="#Arch-Linux" class="headerlink" title="Arch Linux"></a>Arch Linux</h2><ul>
<li>Tsinghua<ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AUR/">AUR</a></li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/archlinux/">Arch Linux</a></li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/archlinuxarm/">Arch Linux ARM</a></li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/archlinuxcn/">Arch Linux CN</a><ul>
<li><a href="https://www.archlinuxcn.org/gnupg-2-1-and-the-pacman-keyring/">Arch Linux CN Keyring Error</a></li>
</ul>
</li>
</ul>
</li>
<li>USTC<ul>
<li><a href="http://mirrors.ustc.edu.cn/help/archlinux.html">Arch Linux</a></li>
<li><a href="http://mirrors.ustc.edu.cn/help/archlinuxarm.html">Arch Linux ARM</a></li>
<li><a href="http://mirrors.ustc.edu.cn/help/archlinuxcn.html">Arch Linux CN</a></li>
</ul>
</li>
</ul>
<h2 id="Kali-Linux"><a href="#Kali-Linux" class="headerlink" title="Kali Linux"></a>Kali Linux</h2><ul>
<li>USTC<ul>
<li><a href="http://mirrors.ustc.edu.cn/help/kali.html">Kali Linux</a></li>
</ul>
</li>
</ul>
<h2 id="Julia"><a href="#Julia" class="headerlink" title="Julia"></a>Julia</h2><ul>
<li>Tsinghua<ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/julia/">Julia</a></li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/julia-releases/">Julia Releases</a></li>
</ul>
</li>
<li>USTC<ul>
<li><a href="http://mirrors.ustc.edu.cn/help/julia.html">Julia</a></li>
</ul>
</li>
</ul>
<h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><ul>
<li>Tsinghua<ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">Ubuntu</a></li>
</ul>
</li>
<li>USTC<ul>
<li><a href="http://mirrors.ustc.edu.cn/help/ubuntu.html">Ubuntu</a></li>
</ul>
</li>
</ul>
<h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><ul>
<li>USTC<ul>
<li><a href="http://mirrors.ustc.edu.cn/help/node.html">Node</a></li>
</ul>
</li>
</ul>
<h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><ul>
<li>Taobao<ul>
<li>Install cnpm</li>
<li><a href="https://www.jianshu.com/p/1a426b889bad">npm change mirror</a></li>
</ul>
</li>
</ul>
<h2 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h2><ul>
<li>goproxy.io<ul>
<li><a href="https://goproxy.io/zh/">go</a></li>
</ul>
</li>
<li>goproxy.cn<ul>
<li><a href="https://goproxy.cn/">go</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Collection</category>
      </categories>
      <tags>
        <tag>Go</tag>
        <tag>Linux</tag>
        <tag>Mirrors</tag>
        <tag>Julia</tag>
      </tags>
  </entry>
  <entry>
    <title>复变函数笔记-c1</title>
    <url>/2021/complex-func-ed-ustc-c1/</url>
    <content><![CDATA[<p>复变函数</p>
<span id="more"></span>

<hr>
<h2 id="复数的定义和运算"><a href="#复数的定义和运算" class="headerlink" title="复数的定义和运算"></a>复数的定义和运算</h2><p>将复数定义为一对有序实数对 $(a,b)$，如果用 $\mathbb{R}$ 记实数的全体，$\mathbb{C}$ 记复数的全体，那么</p>
<p>$$<br>\mathbb{C} = { (a,b):a \in \mathbb{R}, b \in \mathbb{R} }<br>$$</p>
<p>在这个集合里，定义加法和乘法如下</p>
<p>$$<br>(a,b)+(c,d)=(a+c,b+d) \<br>(a,b)(c,d)=(ac-bd,ad+bc)<br>$$</p>
<p>容易验证</p>
<ul>
<li>加法和乘法满足交换律和结合律；</li>
<li>$(0,0)$ 是零元素；</li>
<li>$(-a,-b)$ 是 $(a,b)$ 的负元素；</li>
<li>$(1,0)$ 是乘法的单位元素；</li>
<li>每个非零元素 $(a,b)$ 都有逆元素；</li>
</ul>
<p>此外，$\mathbb{C}$ 中的加法和乘法还满足分配律：</p>
<p>$$<br>[(a,b)+(c,d)] (e,f) = (a,b)(e,f)+(c,d)(e,f)<br>$$</p>
<p>故在以上基础上，$\mathbb{C}$ 构成一个域，称为<strong>复数域</strong>。</p>
<p>如果记</p>
<p>$$<br>\widetilde{\mathbb{R}} = { (a,0):a \in \mathbb{R} }<br>$$</p>
<p>那么 $\widetilde{\mathbb{R}}$ 是 $\mathbb{C}$ 的一个子域。我们直接记 $(a,0)=a$，在 $\mathbb{C}$ 中，$(0,1)$ 这个元素有其特殊性，它满足</p>
<p>$$<br>(0,1)^2 = (0,1)(0,1) = (-1,0) = -1<br>$$</p>
<p>专门用记号 $i$ 来记 $(0,1)$ 这个元素，于是就有 $i^2=-1$。由于 $(0,b)=(b,0)(0,1)=bi$，于是每一个复数 $(a,b)$ 都可写成</p>
<p>$$<br>(a,b) = (a,0) + (0,b) = a+bi<br>$$</p>
<p>注意：复数域和实数域重要的区别就是在复数域不能定义两个复数的大小关系。</p>
<h3 id="定义1-1-1-有序域"><a href="#定义1-1-1-有序域" class="headerlink" title="定义1.1.1 有序域"></a>定义1.1.1 有序域</h3><p>域 $\mathbb{F}$ 称为有序域，如果在 $\mathbb{F}$ 的元素间能确定一种关系（记为 $a&lt;b$），其满足下列要求：</p>
<ol>
<li><p>对 $\mathbb{F}$ 中任意两个元素 $a$，$b$，下述三个关系中必有一个而且只有一个成立：<br>$$<br>a&lt;b,a=b,a&gt;b;<br>$$</p>
</li>
<li><p>如果$a&lt;b$，$b&lt;c$，那么$a&lt;c$；</p>
</li>
<li><p>如果$a&lt;b$，那么对任意$c$，有$a+c&lt;b+c$；</p>
</li>
<li><p>如果$a&lt;b$，$c&gt;0$，那么$ac&lt;bc$。</p>
</li>
</ol>
<p>容易知道实数域是有序域。</p>
<h3 id="定理1-1-2-复数域不是有序域"><a href="#定理1-1-2-复数域不是有序域" class="headerlink" title="定理1.1.2 复数域不是有序域"></a>定理1.1.2 复数域不是有序域</h3><p><strong>证</strong> &ensp; 如果 $\mathbb{C}$ 是有序域，那么因为 $i\not ={0}$，$i$ 与 $0$ 之间必有 $i&gt;0$ 或 $i&lt;0$ 的关系。</p>
<p>如果 $i&gt;0$，则由 <code>1.1.1(4)</code> 得到 $i×i&gt;0×i$，即 $-1&gt;0$，再由 <code>1.1.1(3)</code>，两端都加 $1$ 得到 $0&gt;1$。从另一方面，由 $-1&gt;0$ 得到 $-1×(-1)&gt;0×(-1)$，即 $1&gt;0$，这和刚才的 $0&gt;1$ 矛盾。</p>
<p>如果 $i&lt;0$，两端都加 $-i$，再由 <code>1.1.1(4)</code>，两端乘 $-i$ 得到 $-1&gt;0$。重复上面的讨论，即可得到 $0&gt;1$ 和 $1&gt;0$ 的矛盾。</p>
<p>所以复数域不是有序域。</p>
<p>$Q.E.D$</p>
]]></content>
      <categories>
        <category>Math</category>
      </categories>
      <tags>
        <tag>Complex_Function</tag>
        <tag>Math</tag>
        <tag>Complex_Function_ed_ustc</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Everyone!</title>
    <url>/2021/hello-world/</url>
    <content><![CDATA[<h2 id="Who-am-I"><a href="#Who-am-I" class="headerlink" title="Who am I ?"></a>Who am I ?</h2><p>My name is <code>Blue_River</code>.</p>
<p>The name <code>Blue_River</code> came from a character in a JP H-comic. The character is neither noble nor admirable.</p>
<p>However, I was impressed by the author of this piece of work. His name is Abgrund. I use the name of his character to memorize his devotion to create a harmonious world.</p>
<h2 id="About-this-site"><a href="#About-this-site" class="headerlink" title="About this site"></a>About this site</h2><p>An ordinary personal blog site.</p>
<p>The blogs may be written in English or in Chinese. It depends.</p>
<p>I may share happiness with everyone who find the site.</p>
<p>Likewise, I will share something about technology since I am addicted to advanced technology too.</p>
<span id="more"></span>

<p><img src="https://raw.githubusercontent.com/bLueriVerLHR/pics/main/img/ZhiTianXinJiKaWaii.jpg" alt=" "></p>
<blockquote>
<h1 id="poem"></h1>
<p id="info"></p>
</blockquote>
<script src="https://sdk.jinrishici.com/v2/browser/jinrishici.js" charset="utf-8"></script>
<script type="text/javascript">
    jinrishici.load(function(result) {
      var poem =  result.data.content;
      var info = "【"+result.data.origin.dynasty+"】"+ result.data.origin.author +"《" + result.data.origin.title + "》";
      document.getElementById("poem").innerHTML = poem;
      document.getElementById("info").innerHTML = info;
    })
</script>

<blockquote>
<p>对于网站上的图片。<br>该网站上的图片均存在GitHub建立的图床上，这意味着你的电脑需要能够链接到&lt;raw.githubusercontent.com&gt;<br>你可以使用&lt;IPAddress.com&gt;来查询相应的IP，并修改hosts来连看到这些图片。</p>
</blockquote>
]]></content>
      <categories>
        <category>Default</category>
      </categories>
      <tags>
        <tag>Default</tag>
      </tags>
  </entry>
  <entry>
    <title>给先锋网网络部新人的一点帮助</title>
    <url>/2021/for-neupioneer2021/</url>
    <content><![CDATA[<p>在我的印象里，先锋网网络部是个很清闲的部门，没啥大事情干，没有什么任务，也不用举办什么活动。</p>
<p>似乎有一个内部晚会，不过，学长我确实没参加。</p>
<p>作为一个学生组织的部门，什么事情也没有，是不是稍微有点奇怪？不是有点奇怪，是很奇怪。但奇怪归奇怪，从一个学生组织活到这种类似于社团性质的部门是有一段过程的。只是作为20级的混子，学长我不了解罢了。<code>/(ㄒoㄒ)/~~</code></p>
<p>想来，网络部每周也都会挑一个时间开一次例会。例会上大家分享一下本周做了些什么，有什么不懂的可以让学长讲解一下。</p>
<p>20届主要讲的就是 Vue 全栈技术，应该吧？<code>(T_T)</code> 实际上大一的时候太混子了，很多东西没学过，云里雾里的，不过基础内容还是比较了解，会写一点 demo（例子）。</p>
<p>因为这个学期我换了一个校区，可能没办法例会到场，就在网站上写一些先锋网大一学习的内容，同时巩固下自己的知识吧。</p>
<span id="more"></span>

<hr>
<h2 id="网页"><a href="#网页" class="headerlink" title="网页"></a>网页</h2><p>想来，可视化是减少思考的一大利器。简简单单几张图片就可以引发舆论（乌合麒麟），不过一个小短片就可以让人泪目（讲授父爱的宣传片）。</p>
<p>网站亦是一种可视化利器。网站可以同时播放文字，图片，视频，并将这些内容有效的混合起来吸引人们的注意。人们认知网站所展示出来的内容，从屏幕上获取网络所给予的信息，形成自己的感受。</p>
<p>我们能够自由的发表言论，看图片，看视频，不仅要感谢通讯行业的民那（民那即大家的意思，日语音译），也有前后端工程师的功劳。他们通过合作，搭建起一个个的网站，丰富着万维网的生态，让每个人都能从中获益。</p>
<p>先锋网的网站，即 <a href="http://pioneer.neu.edu.cn/">http://pioneer.neu.edu.cn</a> 至今依然更新着校内一些事情。<del>即便现在几乎没有学生使用</del>先锋网网站作为网络宣传，仍旧发挥着自己的作用。</p>
<p>先锋网的主要方向是 web 和其他所有计算机知识。</p>
<p>嗯，以上就是我所有的废话了，接下来我们进入正题吧。</p>
<h3 id="透过现象看本质"><a href="#透过现象看本质" class="headerlink" title="透过现象看本质"></a>透过现象看本质</h3><p>（该节内容：基本操作）</p>
<p>每一个网页都是由代码组成的。</p>
<p>如下是一个简单的 html 代码示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Pioneer<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;lihuazou&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;lihuazou&quot;</span>).innerHTML = <span class="string">&quot;天使的脉动是神作！！！&quot;</span></span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>（学长是一个二刺螈）</p>
<p>如果我们将这段代码复制粘贴到空白的 html 文件里。emmm，比如新建一个文本文件，然后打开文件所在的文件夹，win10 系统下在右上角的第二行，有个蓝色的问号，点击问号左侧的箭头就可以打开一些额外选项。</p>
<p>选择查看，然后在倒数第二列找到文件拓展名并开启它。这样就可以修改文本文件的后缀名了。接下来将该文件重命名为 <code>test.html</code> 并将上面代码复制进去。</p>
<p>双击文件，接下来就是选择用什么程序打开。先锋网推荐谷歌浏览器，我也认为最好用谷歌，其次是火狐，再次是 Edge。</p>
<p>打开后应该是一排大字。</p>
<p>可是，上面的代码呢？按下键盘上的 <code>F12</code>，这是开启现代浏览器控制台的快捷键。这样操作后，在控制台里应该就可以看到粘贴上去的代码了。</p>
<h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><p>实际上不建议现在过多深入，仅仅需要理解表层即可。我们可以用 F12 看见 HTTP 的内容。</p>
<p>可以阅读的网络材料：</p>
<ul>
<li><a href="https://www.runoob.com/http/http-tutorial.html">菜鸟教程</a></li>
<li><a href="https://baike.baidu.com/item/HTTP">百度百科</a></li>
<li><a href="https://whatis.techtarget.com/definition/HTTP-Hypertext-Transfer-Protocol">HTTP (Hypertext Transfer Protocol)</a></li>
</ul>
<p>深入材料：</p>
<ul>
<li><a href="../resource/HTTPguide.pdf">HTTP权威指南.pdf</a></li>
</ul>
<h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>可以阅读的网络材料：</p>
<ul>
<li><a href="https://www.runoob.com/html/html-tutorial.html">菜鸟教程</a></li>
<li><a href="https://www.w3school.com.cn/html/index.asp">W3school</a></li>
</ul>
<h2 id="学习建议"><a href="#学习建议" class="headerlink" title="学习建议"></a>学习建议</h2><p>多多上 stack overflow 等网站上看看啥的。</p>
<p>CSDN 上很多内容也可以，不过大多都是转载自博客园，博客园文章也可。不过有部分文章就很离谱，直接给一段带 bug 的代码，然后娓娓道来它如何正确，如何工作。</p>
<p>2021届推荐使用 gitee，作为仓库，速度更快🤔。学长用的是 GitHub。</p>
<p>接下来内容可以选择性自己学习。</p>
<ul>
<li>web 前端（每个学长都可以问问）<ul>
<li>HTML</li>
<li>CSS</li>
<li>JavaScript</li>
<li>Vue</li>
<li>…</li>
</ul>
</li>
<li>后端运维（覃学长，孙学长都了解很多）<ul>
<li>Python</li>
<li>Java</li>
<li>Go</li>
<li>C/C++</li>
<li>数据库</li>
<li>…</li>
</ul>
</li>
<li>游戏开发（冯学长，孙学长都有所涉猎）<ul>
<li>Unity</li>
<li>OpenGL</li>
<li>C/C++</li>
<li>Python</li>
<li>算法</li>
<li>…</li>
</ul>
</li>
<li>软件开发（不太懂）<ul>
<li>Java</li>
<li>C/C++</li>
<li>数据库</li>
<li>…</li>
</ul>
</li>
<li>人工智能（覃学长专业户）<ul>
<li>Python</li>
<li>算法</li>
<li>…</li>
</ul>
</li>
<li>数据分析（不太懂）<ul>
<li>Python</li>
<li>MatLab</li>
<li>数据库</li>
<li>算法</li>
<li>…</li>
</ul>
</li>
</ul>
<p>目前学长没有专攻领域，大一时期是以广度优先为主学习。其他学长倾向于深度优先学习，学的更加深入。</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>在这篇文章里，我仅仅给先锋网新人开一个极为小的头。</p>
<p>你可以选择本网站上的一些文章学习，不过一些内容可能有挑战性。</p>
]]></content>
      <categories>
        <category>Default</category>
      </categories>
      <tags>
        <tag>Default</tag>
      </tags>
  </entry>
  <entry>
    <title>代码测试</title>
    <url>/2021/code-demo/</url>
    <content><![CDATA[<p>一些代码小例子，不遵循个人代码规范。</p>
<span id="more"></span>

<hr>
<h2 id="C-解多元一次方程组"><a href="#C-解多元一次方程组" class="headerlink" title="C 解多元一次方程组"></a>C 解多元一次方程组</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Start</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Nice to meet you,doctor.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;What do you wanne do today?\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Do you wanne calculate a system of first order equations of multiple variables.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Or you wanna DO with me?|\&#x27;v \&#x27;)\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Chose what you wanna to do.(/(///v///)/)\n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0.Qiut.   1.Calculation.   2.DO with me?\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) == <span class="number">1</span> &amp;&amp; n &lt; <span class="number">4</span> &amp;&amp; n &gt; <span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> n;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;You should have replied to me with 1,2 or...0.(; _ ;)\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Please respond to me again.\n&quot;</span>);</span><br><span class="line">            getchar();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DefM</span><span class="params">(<span class="keyword">int</span> Matrix[],<span class="keyword">int</span> row,<span class="keyword">int</span> column)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i_BR = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> c_BR;</span><br><span class="line">    <span class="keyword">while</span>(i_BR)&#123;</span><br><span class="line">        i_BR = <span class="number">1</span>;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; row;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; column;k++)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Please Enter the number in %d row and %d column:&quot;</span>,i+<span class="number">1</span>,k+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot; %d&quot;</span>, &amp;Matrix[column*i+k]) != <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span> ((c_BR = getchar()) != <span class="string">&#x27;\n&#x27;</span>)  <span class="built_in">putchar</span>(c_BR);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot; is not an integer.Please enter an integer value, such as 25, -178, or 3: &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(k == (column - <span class="number">1</span>))</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The Matrix is like the following output.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; row;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t|\t&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; column;k++)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,Matrix[column*i+k]);</span><br><span class="line">                <span class="keyword">if</span>(k == (column - <span class="number">1</span>))</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;|\n&quot;</span>);</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n\nIs the Matrix the one you expected?\nIf so,enter 1 to continue.\nIf not,enter 0 to define it again.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c_BR);</span><br><span class="line">        <span class="keyword">while</span>(i_BR == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(c_BR == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            i_BR = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(c_BR == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Now recreat it.\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                getchar();</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;please do not enter an irrelevant character.\nAnswer me again:&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c_BR);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">     </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">VarNum</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Tell me how many variables you want to cope with?\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Is %d the number of the variables you want to cope with?\n&quot;</span>,n);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;If it is,please enter 1.If not,enter 0 to rewrite it.\n&quot;</span>);</span><br><span class="line">            getchar();</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m))&#123;</span><br><span class="line">                <span class="keyword">if</span>(m)&#123;</span><br><span class="line">                    <span class="keyword">return</span> n;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Rewrite it!&quot;</span>);</span><br><span class="line">                    getchar();</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;You should enter an integer which is either 1 or 0.\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;And now you exit.\nYou should enter again.\n\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Please enter an integer.\n&quot;</span>);</span><br><span class="line">            getchar();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Calcu3Det</span><span class="params">(<span class="keyword">int</span> MainMatrix[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> PositiveProduct[<span class="number">3</span>],NegativeProduct[<span class="number">3</span>],PositiveSum = <span class="number">0</span>,NegativeSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">3</span>;k++) PositiveProduct[k] = NegativeProduct[k] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">3</span>;k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( (<span class="number">3</span>*i+i+k) &gt;= (<span class="number">3</span>*(i+<span class="number">1</span>))) PositiveProduct[k] *= MainMatrix[<span class="number">3</span>*i+i+k<span class="number">-3</span>];</span><br><span class="line">            <span class="keyword">else</span> PositiveProduct[k] *= MainMatrix[<span class="number">3</span>*i+i+k];</span><br><span class="line">            <span class="keyword">if</span>( (<span class="number">3</span>*i+<span class="number">2</span>-i+k) &gt;= (<span class="number">3</span>*(i+<span class="number">1</span>))) NegativeProduct[k] *= MainMatrix[<span class="number">3</span>*i<span class="number">-1</span>-i+k];</span><br><span class="line">            <span class="keyword">else</span> NegativeProduct[k] *= MainMatrix[<span class="number">3</span>*i+<span class="number">2</span>-i+k];</span><br><span class="line">        &#125;</span><br><span class="line">        PositiveSum += PositiveProduct[k];</span><br><span class="line">        NegativeSum += NegativeProduct[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> PositiveSum - NegativeSum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CalcuHiDet</span><span class="params">(<span class="keyword">int</span> MainMatrix[],<span class="keyword">int</span> X)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(X == <span class="number">3</span>) sum = Calcu3Det(MainMatrix);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(X &gt; <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> * AssoMatrix = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>((X<span class="number">-1</span>)*(X<span class="number">-1</span>)*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">        <span class="keyword">int</span> counter = <span class="number">0</span>,sign;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> c = <span class="number">0</span>;c &lt; X;c++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt; X;k++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; X;i++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i &lt; c) AssoMatrix[(k<span class="number">-1</span>)*(X<span class="number">-1</span>)+i] = MainMatrix[X*k+i];</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(i &gt; c) AssoMatrix[(k<span class="number">-1</span>)*(X<span class="number">-1</span>)+i<span class="number">-1</span>] = MainMatrix[X*k+i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            counter = CalcuHiDet(AssoMatrix,X<span class="number">-1</span>);</span><br><span class="line">            sign = ((<span class="number">2</span>+c)%<span class="number">2</span>)?<span class="number">-1</span>:<span class="number">1</span>;</span><br><span class="line">            sum += MainMatrix[c]*sign*counter;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CopM</span><span class="params">(<span class="keyword">int</span> MainMatrix[],<span class="keyword">int</span> row,<span class="keyword">int</span> column,<span class="keyword">int</span> AssociateMatrix[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; row*column;k++) AssociateMatrix[k] = MainMatrix[k];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ChangeC</span><span class="params">(<span class="keyword">int</span> Matrix[],<span class="keyword">int</span> row,<span class="keyword">int</span> column,<span class="keyword">int</span> ColumnMatrix[],<span class="keyword">int</span> ChangedColumn)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; row;k++) Matrix[row*k + ChangedColumn<span class="number">-1</span>] = ColumnMatrix[k];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Calculation</span><span class="params">(<span class="keyword">int</span> MainMatrix[],<span class="keyword">int</span> Column[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> D;</span><br><span class="line">    <span class="keyword">int</span> * AssoMatrix = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(n*n*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; n+<span class="number">1</span>;k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(MainMatrix[n*i+k] == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(k &lt; n - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;\t%d X%d +&quot;</span>,MainMatrix[n*i+k],k+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(k == n <span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">&quot;\t%d X%d =&quot;</span>,MainMatrix[n*i+k],k+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(k == n) <span class="built_in">printf</span>(<span class="string">&quot;\t%d\n&quot;</span>,Column[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The system above have &quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>((D = CalcuHiDet(MainMatrix,n)) == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;NO exact roots.&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;roots.\nD = %d\n&quot;</span>,D);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;X%d = D%d/D\t   &quot;</span>,i+<span class="number">1</span>,i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            CopM(MainMatrix,n,n,AssoMatrix);</span><br><span class="line">            ChangeC(AssoMatrix,n,n,Column,i+<span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;D%d = %d\t   &quot;</span>,i+<span class="number">1</span>,CalcuHiDet(AssoMatrix,n));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CalcuSystem</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = VarNum();</span><br><span class="line">    <span class="keyword">if</span>(n)&#123;</span><br><span class="line">        <span class="keyword">int</span> * Matrix = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(n*n*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">        <span class="keyword">int</span> * Column = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The coefficient matrix of the system: \n&quot;</span>);</span><br><span class="line">        DefM(Matrix,n,n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The column matrix of the system: \n&quot;</span>);</span><br><span class="line">        DefM(Column,n,<span class="number">1</span>);</span><br><span class="line">        Calculation(Matrix,Column,n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nEnter to continue.\n&quot;</span>);</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">talk</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (n%<span class="number">11</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;I would like to,but now we should study.\nEmm...We can do it at home.(whisper)\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;DOCTOR DAISUKI !\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;(Ten hours later)Emm...Doctor,you are so strong.(Biting your ear).\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Do you forget to work?Oh?Ah...I will be waiting for you!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Do you forget your work?Oh?\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Just Joking.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Magic,magic.Make doctor happier!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Recommend you to listen to a song called the loop of love,doctor.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;You can got everything you want in your dreams,doctor.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;I was so shy to say the words.Embarrassment kills me....\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Doctor,my room it\&#x27;s upstairs.Shall we go now?(looking up to you)\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;I...I haven\&#x27;t got ready./(///v///)/\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nEnter to contine\n\n&quot;</span>);</span><br><span class="line">    getchar();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(n = Start())&#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>) CalcuSystem();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">2</span>) &#123;</span><br><span class="line">            srand(time(<span class="literal">NULL</span>));</span><br><span class="line">            talk(rand());</span><br><span class="line">        &#125;</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Have a nice day,doctor!\nBye!&quot;</span>);</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="C-EPUB-文件制作框架"><a href="#C-EPUB-文件制作框架" class="headerlink" title="C EPUB 文件制作框架"></a>C EPUB 文件制作框架</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_mimetype</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/mimetype&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;application/epub+zip&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_folder</span><span class="params">()</span></span>&#123;</span><br><span class="line">    _mkdir(<span class="string">&quot;BookName&quot;</span>);</span><br><span class="line">    _mkdir(<span class="string">&quot;BookName/META-INF&quot;</span>);</span><br><span class="line">    _mkdir(<span class="string">&quot;BookName/OEBPS&quot;</span>);</span><br><span class="line">    _mkdir(<span class="string">&quot;BookName/OEBPS/Fonts&quot;</span>);</span><br><span class="line">    _mkdir(<span class="string">&quot;BookName/OEBPS/Images&quot;</span>);</span><br><span class="line">    _mkdir(<span class="string">&quot;BookName/OEBPS/Styles&quot;</span>);</span><br><span class="line">    _mkdir(<span class="string">&quot;BookName/OEBPS/Text&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_content</span><span class="params">(<span class="keyword">int</span> chapnum,<span class="keyword">int</span> picnum,<span class="keyword">int</span> illnum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">time_t</span> t;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> *<span class="title">p</span>;</span></span><br><span class="line">    time(&amp;t);</span><br><span class="line">    p = gmtime(&amp;t);</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/OEBPS/content.opf&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;&lt;package version=\&quot;2.0\&quot; unique-identifier=\&quot;BookId\&quot; xmlns=\&quot;http://www.idpf.org/2007/opf\&quot;&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t&lt;metadata xmlns:dc=\&quot;http://purl.org/dc/elements/1.1/\&quot; xmlns:opf=\&quot;http://www.idpf.org/2007/opf\&quot;&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:identifier opf:scheme=\&quot;UUID\&quot; id=\&quot;BookId\&quot;&gt;urn:uuid:&lt;!--uuid--&gt;&lt;/dc:identifier&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:title&gt;&lt;!--书名--&gt;&lt;/dc:title&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:creator opf:role=\&quot;aut\&quot; opf:file-as=\&quot;BlueRiver\&quot;&gt;&lt;!--作者名--&gt;&lt;/dc:creator&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:language&gt;zh&lt;/dc:language&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:rights&gt;BlueRiver&lt;/dc:rights&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:subject&gt;轻小说&lt;/dc:subject&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:description&gt;\n\t\t\t&lt;!--简介--&gt;\n\t\t&lt;/dc:description&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:source&gt;BlueRiver&lt;/dc:source&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:publisher&gt;BlueRiver&lt;/dc:publisher&gt;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:date opf:event=\&quot;publication\&quot;&gt;%d-%d-%d&lt;/dc:date&gt;\n&quot;</span>,p-&gt;tm_year+<span class="number">1900</span>,p-&gt;tm_mon+<span class="number">1</span>,p-&gt;tm_mday);</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;dc:date opf:event=\&quot;modification\&quot;&gt;%d-%d-%d&lt;/dc:date&gt;\n&quot;</span>,p-&gt;tm_year+<span class="number">1900</span>,p-&gt;tm_mon+<span class="number">1</span>,p-&gt;tm_mday);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;meta name=\&quot;Sigil version\&quot; content=\&quot;0.9.13\&quot; /&gt;\n&quot;</span>,fp);    </span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;meta name=\&quot;cover\&quot; content=\&quot;cover.jpg\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/metadata&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;manifest&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot;ncx\&quot; href=\&quot;toc.ncx\&quot; media-type=\&quot;application/x-dtbncx+xml\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot;postscript.xhtml\&quot; href=\&quot;postscript.xhtml\&quot; media-type=\&quot;application/xhtml+xml\&quot;/&gt;\n&quot;</span>,fp);<span class="comment">//后记</span></span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot;message.xhtml\&quot; href=\&quot;Text/message.xhtml\&quot; media-type=\&quot;application/xhtml+xml\&quot;/&gt;\n&quot;</span>,fp);<span class="comment">//制作信息页</span></span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot;introduction.xhtml\&quot; href=\&quot;Text/introduction.xhtml\&quot; media-type=\&quot;application/xhtml+xml\&quot;/&gt;\n&quot;</span>,fp);<span class="comment">//简介</span></span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot;contents.xhtml\&quot; href=\&quot;Text/contents.xhtml\&quot; media-type=\&quot;application/xhtml+xml\&quot;/&gt;\n&quot;</span>,fp);<span class="comment">//目录</span></span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot;cover.jpg\&quot; href=\&quot;Images/cover.jpg\&quot; media-type=\&quot;image/jpeg\&quot;/&gt;\n&quot;</span>,fp);<span class="comment">//封面</span></span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot;cover.xhtml\&quot; href=\&quot;Text/cover.xhtml\&quot; media-type=\&quot;application/xhtml+xml\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot;title.xhtml\&quot; href=\&quot;Text/title.xhtml\&quot; media-type=\&quot;application/xhtml+xml\&quot;/&gt;\n&quot;</span>,fp);<span class="comment">//书名页</span></span><br><span class="line">    <span class="comment">//章节</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; chapnum;k++)&#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;item id=\&quot;chapter%03d.xhtml\&quot; href=\&quot;Text/chapter%03d.xhtml\&quot; media-type=\&quot;application/xhtml+xml\&quot;/&gt;\n&quot;</span>,k+<span class="number">1</span>,k+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//插图</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; picnum;k++)&#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;item id=\&quot;x%03d.jpg\&quot; href=\&quot;Images/%03d.jpg\&quot; media-type=\&quot;image/jpeg\&quot;/&gt;\n&quot;</span>,k+<span class="number">1</span>,k+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//彩图页</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; illnum;k++)&#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;item id=\&quot;illustration%d.xhtml\&quot; href=\&quot;Text/illustration%d.xhtml\&quot; media-type=\&quot;image/jpeg\&quot;/&gt;\n&quot;</span>,k+<span class="number">1</span>,k+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; illnum;k++)&#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;item id=\&quot;xc%03d.jpg\&quot; href=\&quot;Images/c%03d.jpg\&quot; media-type=\&quot;image/jpeg\&quot;/&gt;\n&quot;</span>,k+<span class="number">1</span>,k+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//此处默认字体文件和样式表文件名称</span></span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot;style.css\&quot; href=\&quot;Styles/style.css\&quot; media-type=\&quot;text/css\&quot;/&gt;\n&quot;</span>,fp);<span class="comment">//样式表默认名称为style.css</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;item id=\&quot; &lt;!--此处填写文件名称--&gt; \&quot; href=\&quot; &lt;!--此处填写文件相对路径--&gt; \&quot; media-type=\&quot; &lt;!--此处填写文件格式--&gt; \&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    文件格式例如：</span></span><br><span class="line"><span class="comment">    application/xhtml+xml</span></span><br><span class="line"><span class="comment">    application/x-font-ttf</span></span><br><span class="line"><span class="comment">    image/png</span></span><br><span class="line"><span class="comment">    image/jpeg</span></span><br><span class="line"><span class="comment">    text/css</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/manifest&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;spine toc=\&quot;ncx\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;itemref idref=\&quot;cover.xhtml\&quot; properties=\&quot;duokan-page-fullscreen\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;itemref idref=\&quot;title.xhtml\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;itemref idref=\&quot;message.xhtml\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;itemref idref=\&quot;introduction.xhtml\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="comment">//彩图页</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; illnum;k++)&#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;itemref idref=\&quot;illustration%03d.xhtml\&quot; properties=\&quot;duokan-page-fitwindow\&quot;/&gt;\n&quot;</span>,k+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;itemref idref=\&quot;contents.xhtml\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="comment">//章节</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; chapnum;k++)&#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;itemref idref=\&quot;chapter%03d.xhtml\&quot;/&gt;\n&quot;</span>,k+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;itemref idref=\&quot;postscript.xhtml\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/spine&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/package&gt;&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_container</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/META-INF/container.xml&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;container version=\&quot;1.0\&quot; xmlns=\&quot;urn:oasis:names:tc:opendocument:xmlns:container\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;rootfiles&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;rootfile full-path=\&quot;OEBPS/content.opf\&quot; media-type=\&quot;application/oebps-package+xml\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/rootfiles&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/container&gt;&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_toc</span><span class="params">(<span class="keyword">int</span> chapnum,<span class="keyword">int</span> picnum,<span class="keyword">int</span> illnum)</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/OEBPS/toc.ncx&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot; ?&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;!DOCTYPE ncx PUBLIC \&quot;-//NISO//DTD ncx 2005-1//EN\&quot; \&quot;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;ncx version=\&quot;2005-1\&quot; xmlns=\&quot;http://www.daisy.org/z3986/2005/ncx/\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;meta content=\&quot;urn:uuid:&lt;!--uuid--&gt;\&quot; name=\&quot;dtb:uid\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;meta content=\&quot;1\&quot; name=\&quot;dtb:depth\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;meta content=\&quot;0\&quot; name=\&quot;dtb:totalPageCount\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;meta content=\&quot;0\&quot; name=\&quot;dtb:maxPageNumber\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;docTitle&gt;\n\t\t&lt;text&gt;&lt;!--书名--&gt;&lt;/text&gt;\n\t&lt;docTitle&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;navMap&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;navPoint id=\&quot;navPoint-%d\&quot; playOrder=\&quot;%d\&quot;&gt;\n\t\t\t&lt;navLabel&gt;\n\t\t\t\t&lt;text&gt;封面&lt;/text&gt;\n\t\t\t&lt;/navLabel&gt;\n\t\t\t&lt;content src=\&quot;Text/cover.xhtml\&quot;/&gt;\n\t\t&lt;/navPoint&gt;\n&quot;</span>,i,i);</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;navPoint id=\&quot;navPoint-%d\&quot; playOrder=\&quot;%d\&quot;&gt;\n\t\t\t&lt;navLabel&gt;\n\t\t\t\t&lt;text&gt;制作信息&lt;/text&gt;\n\t\t\t&lt;/navLabel&gt;\n\t\t\t&lt;content src=\&quot;Text/message.xhtml\&quot;/&gt;\n\t\t&lt;/navPoint&gt;\n&quot;</span>,i,i);</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;navPoint id=\&quot;navPoint-%d\&quot; playOrder=\&quot;%d\&quot;&gt;\n\t\t\t&lt;navLabel&gt;\n\t\t\t\t&lt;text&gt;简介&lt;/text&gt;\n\t\t\t&lt;/navLabel&gt;\n\t\t\t&lt;content src=\&quot;Text/introduction.xhtml\&quot;/&gt;\n\t\t&lt;/navPoint&gt;\n&quot;</span>,i,i);</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;navPoint id=\&quot;navPoint-%d\&quot; playOrder=\&quot;%d\&quot;&gt;\n\t\t\t&lt;navLabel&gt;\n\t\t\t\t&lt;text&gt;彩页&lt;/text&gt;\n\t\t\t&lt;/navLabel&gt;\n\t\t\t&lt;content src=\&quot;Text/illustration001.xhtml\&quot;/&gt;\n\t\t&lt;/navPoint&gt;\n&quot;</span>,i,i);</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;navPoint id=\&quot;navPoint-%d\&quot; playOrder=\&quot;%d\&quot;&gt;\n\t\t\t&lt;navLabel&gt;\n\t\t\t\t&lt;text&gt;目录&lt;/text&gt;\n\t\t\t&lt;/navLabel&gt;\n\t\t\t&lt;content src=\&quot;Text/contents.xhtml\&quot;/&gt;\n\t\t&lt;/navPoint&gt;\n&quot;</span>,i,i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; chapnum;k++)&#123;</span><br><span class="line">        i += <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;navPoint id=\&quot;navPoint-%d\&quot; playOrder=\&quot;%d\&quot;&gt;\n\t\t\t&lt;navLabel&gt;\n\t\t\t\t&lt;text&gt;&lt;!--章节名称--&gt;&lt;/text&gt;\n\t\t\t&lt;/navLabel&gt;\n\t\t\t&lt;content src=\&quot;Text/chapter%03d.xhtml\&quot;/&gt;\n\t\t&lt;/navPoint&gt;\n&quot;</span>,i,i,k+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;navPoint id=\&quot;navPoint-%d\&quot; playOrder=\&quot;%d\&quot;&gt;\n\t\t\t&lt;navLabel&gt;\n\t\t\t\t&lt;text&gt;后记&lt;/text&gt;\n\t\t\t&lt;/navLabel&gt;\n\t\t\t&lt;content src=\&quot;Text/postscript.xhtml\&quot;/&gt;\n\t\t&lt;/navPoint&gt;\n&quot;</span>,i,i);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/navMap&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/ncx&gt;\n&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_title</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/OEBPS/Text/title.xhtml&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;!DOCTYPE html PUBLIC \&quot;-//W3C//DTD XHTML 1.1//EN\&quot; \&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;html xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xml:lang=\&quot;zh-CN\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;title&gt;标题&lt;/title&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;link href=\&quot;../Styles/style.css\&quot; type=\&quot;text/css\&quot; rel=\&quot;stylesheet\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;h1&gt;&lt;!--书名--&gt;&lt;h1&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_message</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/OEBPS/Text/message.xhtml&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;!DOCTYPE html PUBLIC \&quot;-//W3C//DTD XHTML 1.1//EN\&quot; \&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;html xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xml:lang=\&quot;zh-CN\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;title&gt;制作信息&lt;/title&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;link href=\&quot;../Styles/style.css\&quot; type=\&quot;text/css\&quot; rel=\&quot;stylesheet\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;h1 class=\&quot;makertitle\&quot;&gt;制作信息&lt;/h1&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;cutline\&quot;&gt;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;h1&gt;&lt;!--书名--&gt;&lt;h1&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;makerifm\&quot;&gt;作者：&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;makerifm\&quot;&gt;插画：&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;makerifm\&quot;&gt;译者：&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;makerifm\&quot;&gt;图源：&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;makerifm\&quot;&gt;录入：&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;makerifm\&quot;&gt;仅供个人学习交流使用，禁作商业用途&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;makerifm\&quot;&gt;下载后请在24小时内删除&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;makerifm\&quot;&gt;请尊重翻译、扫图、录入、校对的辛勤劳动，转载请保留信息&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p class=\&quot;makerifm\&quot;&gt;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡&lt;/p&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_cover</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/OEBPS/Text/cover.xhtml&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;!DOCTYPE html PUBLIC \&quot;-//W3C//DTD XHTML 1.1//EN\&quot; \&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;html xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xml:lang=\&quot;zh-CN\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;title&gt;标题&lt;/title&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;link href=\&quot;../Styles/style.css\&quot; type=\&quot;text/css\&quot; rel=\&quot;stylesheet\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;div class=\&quot;cover duokan-image-single\&quot;&gt;&lt;img alt=\&quot;cover\&quot; src=\&quot;../Images/cover.jpg\&quot;/&gt;&lt;/div&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_introduction</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/OEBPS/Text/introduction.xhtml&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;!DOCTYPE html PUBLIC \&quot;-//W3C//DTD XHTML 1.1//EN\&quot; \&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;html xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xml:lang=\&quot;zh-CN\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;title&gt;简介&lt;/title&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;link href=\&quot;../Styles/style.css\&quot; type=\&quot;text/css\&quot; rel=\&quot;stylesheet\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;div&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;h1 class=\&quot;color1 fzzys\&quot;&gt;简介&lt;/h1&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/div&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> illpath[<span class="number">50</span>] = <span class="string">&quot;BookName/OEBPS/Text/illustration001.xhtml&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_illustration</span><span class="params">(<span class="keyword">int</span> illnum)</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    <span class="keyword">char</span> pa[<span class="number">50</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>;n &lt; illnum;n++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>;i++)&#123;</span><br><span class="line">            pa[i] = illpath[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">35</span>; i &lt;= <span class="number">50</span>;i++)&#123;</span><br><span class="line">            pa[i] = illpath[i];</span><br><span class="line">        &#125;</span><br><span class="line">        pa[<span class="number">32</span>] = illpath[<span class="number">32</span>] + n/<span class="number">100</span>;</span><br><span class="line">        pa[<span class="number">33</span>] = illpath[<span class="number">33</span>] + n/<span class="number">10</span> - (n/<span class="number">100</span>)*<span class="number">10</span>;</span><br><span class="line">        pa[<span class="number">34</span>] = illpath[<span class="number">34</span>] + n%<span class="number">10</span>;</span><br><span class="line">        fp = fopen(pa,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;&lt;!DOCTYPE html PUBLIC \&quot;-//W3C//DTD XHTML 1.1//EN\&quot; \&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;&lt;html xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xml:lang=\&quot;zh-CN\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;head&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t&lt;title&gt;彩页%d&lt;/title&gt;\n&quot;</span>,n+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;link href=\&quot;../Styles/style.css\&quot; type=\&quot;text/css\&quot; rel=\&quot;stylesheet\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/head&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;body&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;div&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t\t&lt;div class=\&quot;center duokan-image-single\&quot;&gt;&lt;img alt=\&quot;c%03d\&quot; src=\&quot;../Images/c%03d.jpg\&quot;/&gt;&lt;/div&gt;\n&quot;</span>,n+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;/div&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/body&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>,fp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_postscript</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/OEBPS/Text/postscript.xhtml&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;!DOCTYPE html PUBLIC \&quot;-//W3C//DTD XHTML 1.1//EN\&quot; \&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;html xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xml:lang=\&quot;zh-CN\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;title&gt;后记&lt;/title&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;link href=\&quot;../Styles/style.css\&quot; type=\&quot;text/css\&quot; rel=\&quot;stylesheet\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;h1 class=\&quot;fzzys\&quot;&gt;后记&lt;/h1&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_contents</span><span class="params">(<span class="keyword">int</span> chapnum)</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/OEBPS/Text/contents.xhtml&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;!DOCTYPE html PUBLIC \&quot;-//W3C//DTD XHTML 1.1//EN\&quot; \&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;html xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xml:lang=\&quot;zh-CN\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;title&gt;Contents&lt;/title&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;link href=\&quot;../Styles/style.css\&quot; type=\&quot;text/css\&quot; rel=\&quot;stylesheet\&quot;/&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/head&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;div class=\&quot;contents\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t&lt;div class=\&quot;box\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t&lt;h2&gt;CONTENTS&lt;/h2&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t&lt;table border=\&quot;0\&quot; cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot;&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t\t&lt;tbody&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; chapnum;k++)&#123;</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t\t\t&lt;tr&gt;\n&quot;</span>,fp);</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t\t\t\t\t\t&lt;td&gt;&lt;a class=\&quot;nodeco colorg\&quot; href=\&quot;../Text/chapter%03d.xhtml\&quot;&gt;&lt;!--样式--&gt;&lt;/a&gt;&lt;/td&gt;\n&quot;</span>,k+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;\t\t\t\t\t\t\t&lt;td&gt;&lt;a class=\&quot;nodeco colorg\&quot; href=\&quot;../Text/chapter%03d.xhtml\&quot;&gt;&lt;!--章节标题--&gt;&lt;/a&gt;&lt;/td&gt;\n&quot;</span>,k+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t\t\t&lt;/tr&gt;\n&quot;</span>,fp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t\t\t&lt;tr&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t\t\t\t&lt;td&gt;&lt;/td&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t\t\t\t&lt;td&gt;&lt;a class=\&quot;nodeco colorg\&quot; href=\&quot;../Text/postscript.xhtml\&quot;&gt;后记&lt;/a&gt;&lt;/td&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t\t\t&lt;/tr&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t\t\t\t\t&lt;/tbody&gt;\n\t\t\t\t&lt;/table&gt;\n\t\t\t&lt;/div&gt;\n\t\t&lt;/div&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/body&gt;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_content_toc_text</span><span class="params">(<span class="keyword">int</span> chapnum,<span class="keyword">int</span> picnum,<span class="keyword">int</span> illnum)</span></span>&#123;</span><br><span class="line">    make_content(chapnum,picnum,illnum);</span><br><span class="line">    make_toc(chapnum,picnum,illnum);</span><br><span class="line">    make_title();</span><br><span class="line">    make_message();</span><br><span class="line">    make_cover();</span><br><span class="line">    make_introduction();</span><br><span class="line">    make_illustration(illnum);</span><br><span class="line">    make_postscript();</span><br><span class="line">    make_contents(chapnum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_basicss</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FILE * fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;BookName/OEBPS/Styles/style.css&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*基础样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;body&#123;padding: 0%;margin-top: 0%;margin-bottom: 0%;margin-left: 1%;margin-right: 1%;line-height:1.2;text-align: justify;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;p &#123;text-indent:2em;display:block;line-height:1.3;margin-top:0.6em;margin-bottom:0.6em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;div &#123;margin:0px;padding:0px;line-height:1.2;text-align: justify;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;li&#123; clear:both; display:block&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;td&#123;padding:3px 0px&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*封面样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.cover &#123;margin: 0px;padding: 0px;text-indent: 0;text-align: center !important;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*制作信息页样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.makertitle&#123;font-size: 1.3em;text-indent: 0em;font-weight: bold;margin-top: 0.5em;margin-bottom: 0.5em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.cutline&#123;text-indent: 0em;line-height: 0;margin-top: 0.3em;margin-bottom: 0.3em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.makerifm&#123;text-indent: 0em;line-height: 1.2;margin-top: 0.2em;margin-bottom: 0.2em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*Logo页样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.logoarea&#123;text-indent: 0em;text-align:center !important;margin-top: 20%;margin-bottom: 0%;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.logoimage&#123;width:100%;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*目录页样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*“目录”标题颜色*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.colorco&#123;color:#000000&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*目录页超链接样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.nodeco&#123;text-decoration:none&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*目录页超链接颜色*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.colorg&#123;color:#000000&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*正文样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*正文章节标题样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;h1 &#123;font-size: 1.3em;line-height: 1.2;margin-top: 1em;margin-bottom: 1.2em;font-weight: bold;text-align: center !important;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*注释代码样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.po&#123;font-size:0.9em;text-indent:-0.8em;padding: 0em 0.1em 0.1em 1em;color:#960014&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*正文插图样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.kuan&#123;duokan-bleed:leftright&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.zhai&#123;duokan-bleed:lefttopright&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*上标样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;ruby&#123;ruby-align:center&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;rt&#123;font-size:0.7em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*下标黑点着重号*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.zzh &#123;text-emphasis-style:dot;text-emphasis-position:under;-webkit-text-emphasis-style:dot;-webkit-text-emphasis-position:under;-webkit-text-emphasis-style:dot;-epub-text-emphasis-style:dot;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*字体样式控制*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*字体加粗*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.bold&#123;font-weight:bold&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*字体高度*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font03&#123;font-size: 0.3em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font04&#123;font-size: 0.4em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font05&#123;font-size: 0.5em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font06&#123;font-size: 0.6em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font07&#123;font-size: 0.7em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font075&#123;font-size: 0.75em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font08&#123;font-size: 0.8em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font085&#123;font-size: 0.85em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font09&#123;font-size: 0.9em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font10&#123;font-size: 1.0em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font11&#123;font-size: 1.1em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font115&#123;font-size: 1.15em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font12&#123;font-size: 1.2em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font13&#123;font-size: 1.3em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font14&#123;font-size: 1.4em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font15&#123;font-size: 1.5em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font16&#123;font-size: 1.6em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font17&#123;font-size: 1.7em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font18&#123;font-size: 1.8em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font19&#123;font-size: 1.9em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font20&#123;font-size: 2em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font25&#123;font-size: 2.5em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font30&#123;font-size: 3em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font40&#123;font-size: 4em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font35&#123;font-size: 3.5em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.font45&#123;font-size: 4.5em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*首行缩进值为0*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.in0&#123;text-indent:0em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*文本居中*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.center&#123;text-align:center !important;text-indent:0em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*文本居左*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.left&#123;text-align:left !important;duokan-text-indent:0em;text-indent:0em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*文本居右*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.right&#123;text-align:right !important;text-indent:0em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*斜体的字体样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.italic&#123;font-style:italic&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*倾斜的字体样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.oblique&#123;font-style:oblique&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*字体颜色控制*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.colorc1&#123;color:#000000&#125;/*书名颜色，默认黑色。*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.colorc2&#123;color:#000000&#125;/*卷数颜色，默认黑色。*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.color1&#123;color:#000000&#125;/*印象色，用于制作者人名、章节标题等处，默认黑色。*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*补充颜色写在下面，并注明用处*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*元素控制样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*td元素顶端对齐*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tdtop&#123;vertical-align:top&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*td元素底端对齐*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tdbottom&#123;vertical-align:bottom&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*td元素垂直居中对齐*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tdmiddle&#123;vertical-align:middle&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*td元素水平居中*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tdcenter&#123;margin-left:auto; margin-right:auto;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*元素宽度*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w05&#123;width:0.5em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w07&#123;width:0.7em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w09&#123;width:0.9em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w10&#123;width:1em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w11&#123;width:1.1em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w26&#123;width:2.6em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w33&#123;width:3.3em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w37&#123;width:3.7em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w40&#123;width:4em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w44&#123;width:4.4em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w55&#123;width:5.5em&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w70&#123;width:70%%&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.w100&#123;width:100%%&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*元素顶部外边距*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mtb13&#123;margin-top:-1.3em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mtb09&#123;margin-top:-0.9em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mtb05&#123;margin-top:-0.5em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mtb03&#123;margin-top:-0.3em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mt03&#123;margin-top:0.3em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mt05&#123;margin-top:0.5em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mt09&#123;margin-top:0.9em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mt13&#123;margin-top:1.3em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mt45&#123;margin-top:4.5em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*元素上下外边距*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mbt05&#123;margin-top:0.5em; margin-bottom:0.5em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mbt09&#123;margin-top:0.9em; margin-bottom:0.9em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mbt15&#123;margin-top:1.5em; margin-bottom:1.5em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.mbt18&#123;margin-top:1.8em; margin-bottom:1.8em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*元素上下内边距*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.pbt09&#123;padding-top:0.9em; padding-bottom:0.9em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*行高控制*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.h04&#123;line-height:0.4;vertical-align:center;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.h11&#123;line-height:1.1;vertical-align:center;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.h20&#123;line-height:2;vertical-align:bottom;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*标题样式*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.b-relative &#123;width: 30em;margin-left: auto;margin-right: auto;margin-top: 0.5em;margin-bottom: 0em;min-height: 20em;max-width:100%%;min-width:18em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.rota &#123;-o-transform: rotate(5deg);-ms-transform: rotate(5deg);-moz-transform: rotate(5deg);-webkit-transform:rotate(5deg);transform: rotate(5deg);&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.box1 &#123;width: 2em;height: 2em;border-radius: 15%%;padding: 0.5em;background-color: #000000;color: #FFFFFF;float: right;margin-top: -0.5em;margin-right: 0.5em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.box2 &#123;border-radius: 20%%;width: 1em;height: 1em;background-color: #000000;padding: 0.5em;color: #FFFFFF;float: right;margin-right: -3.5em;margin-top: 2em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.t-top &#123;font-size: 0.9em;margin-left: 1em;float: right;margin-top: 1em;color: #FFFFFF;margin-right: -2.7em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.f-right &#123;float: right;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.f-left &#123;float: left;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tt &#123;margin-top: -0.9em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tt1 &#123;margin: 0em;padding: 0em;text-indent: 0px;text-align: center;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tt2 &#123;margin-top: -2em;margin-right: 0.5em;text-align: center;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tt3 &#123;margin: 0em;padding: 0em;text-indent: 0px;text-align: center;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tl&#123;margin-top: 4em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tr &#123;-o-transform: rotate(35deg);-ms-transform: rotate(35deg);-moz-transform: rotate(35deg);-webkit-transform: rotate(35deg);transform: rotate(35deg);&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tr1 &#123;margin-top: -0.5em;text-indent: 0px;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.shadow &#123;text-shadow: 1px 1px 5px #000000;color: #FFFFFF;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.clear &#123;clear: both;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.tt2 p &#123;margin-top: -0.1em;padding: 0em;text-indent: 0px;text-align: center;margin-bottom: 0em;margin-left: 0em;margin-right: 0em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;/*自定义*/\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.contents h2 &#123;padding: 0em;margin: 0.5em 0em 1em 0em;font-weight: bold;line-height: 120%%;font-size: 2.5em;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.contents .box &#123;width: 25em;margin-left: auto;margin-right: auto;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.contents table &#123;width: 100%%;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.contents td &#123;padding: 0.25em 0.5em;text-align: left;&#125;\n&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;.border &#123;padding:0.5em;border: 1px solid #000000;&#125;\n&quot;</span>,fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">make_epub_frame</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> chapnum,picnum,illnum;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Now we are going to make a basic frame of an epub.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Now tell me how many chapters do this book has?\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot; %d&quot;</span>,&amp;chapnum) &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Please enter an integer such as 1 , 20 , 284.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Now tell me how many pictures which are black and whit do this book has?\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot; %d&quot;</span>,&amp;picnum) &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Please enter an integer such as 1 , 20 , 284.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Now tell me how many colorful pictures do this book has?\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot; %d&quot;</span>,&amp;illnum) &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Please enter an integer such as 1 , 20 , 284.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    make_mimetype();</span><br><span class="line">    make_folder();</span><br><span class="line">    make_container();</span><br><span class="line">    make_content_toc_text(chapnum,picnum,illnum);</span><br><span class="line">    make_basicss();</span><br><span class="line">    <span class="keyword">return</span> chapnum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字体库需要自己额外加装和设置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> path[<span class="number">40</span>] = <span class="string">&quot;BookName/OEBPS/Text/chapter001.xhtml&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">make_chapter</span><span class="params">(<span class="keyword">int</span> chapnum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>,test = <span class="number">-1</span>;</span><br><span class="line">    FILE * fp,* fw;</span><br><span class="line">    <span class="keyword">if</span>((fp = fopen(<span class="string">&quot;raw.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Can\&#x27;t find the file.&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> pa[<span class="number">40</span>];</span><br><span class="line">    <span class="keyword">while</span>((chapnum - n) != <span class="number">-1</span> &amp;&amp; test != n)&#123;</span><br><span class="line">        test = n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">27</span>;i++)&#123;</span><br><span class="line">            pa[i] = path[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">30</span>; i &lt;= <span class="number">40</span>;i++)&#123;</span><br><span class="line">            pa[i] = path[i];</span><br><span class="line">        &#125;</span><br><span class="line">        pa[<span class="number">27</span>] =path[<span class="number">27</span>] + n/<span class="number">100</span>;</span><br><span class="line">        pa[<span class="number">28</span>] =path[<span class="number">28</span>] + n/<span class="number">10</span> - (n/<span class="number">100</span>)*<span class="number">10</span>;</span><br><span class="line">        pa[<span class="number">29</span>] =path[<span class="number">29</span>] + n%<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        fw = fopen(pa,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;&lt;!DOCTYPE html PUBLIC \&quot;-//W3C//DTD XHTML 1.1//EN\&quot; \&quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\&quot;&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;&lt;html xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xml:lang=\&quot;zh-CN\&quot;&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;head&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;title&gt;&lt;!--章节名称--&gt;&lt;/title&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;link href=\&quot;../Styles/style.css\&quot; type=\&quot;text/css\&quot; rel=\&quot;stylesheet\&quot;/&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;/head&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t&lt;body&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;h1 class=\&quot;fzzys\&quot;&gt;&lt;!--章节名称--&gt;&lt;/h1&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;p&gt;&quot;</span>,fw);</span><br><span class="line">        <span class="keyword">int</span> judge = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>((ch = getc(fp)) != EOF)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">&#x27;\r&#x27;</span>||ch == <span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(judge == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">fprintf</span>(fw,<span class="string">&quot;&lt;/p&gt;%c\t\t&lt;p&gt;&quot;</span>,ch);</span><br><span class="line">                judge = <span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ch == <span class="string">&#x27;\&quot;&#x27;</span>)&#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(fw,<span class="string">&quot;&amp;quot;&quot;</span>);</span><br><span class="line">                judge = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ch == <span class="string">&#x27;&lt;&#x27;</span>)&#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(fw,<span class="string">&quot;&amp;lt;&quot;</span>);</span><br><span class="line">                judge = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ch == <span class="string">&#x27;&gt;&#x27;</span>)&#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(fw,<span class="string">&quot;&amp;gt;&quot;</span>);</span><br><span class="line">                judge = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ch == <span class="string">&#x27;$&#x27;</span>)&#123;</span><br><span class="line">                judge = <span class="number">1</span>;</span><br><span class="line">                n += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ch == <span class="string">&#x27; &#x27;</span> || ch == <span class="string">&#x27;\t&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                judge = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">fprintf</span>(fw,<span class="string">&quot;%c&quot;</span>,ch);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;\t\t&lt;/p&gt;\n\t&lt;/body&gt;\n&quot;</span>,fw);</span><br><span class="line">        <span class="built_in">fputs</span>(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>,fw);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> chapnum;</span><br><span class="line">    chapnum = make_epub_frame();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The frame is created.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Now name a file named raw.txt.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;If you wanna to leave.Do not creat the file or delete it.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;If you wanna continue to create chapters,save the text of the chapter in the file.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;You can enter $ to seperate the chapters.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;If you are ready,enter to start.\n&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    make_chapter(chapnum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="C-不溢出的乘法"><a href="#C-不溢出的乘法" class="headerlink" title="C 不溢出的乘法"></a>C 不溢出的乘法</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> A 20000                                                         <span class="comment">//第一个乘数的位数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 20000                                                         <span class="comment">//第二个乘数的位数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span>                                                       <span class="comment">//输入输出</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span>                                                      <span class="comment">//计算数字长度</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span>                                                        <span class="comment">//计算时间</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> m[<span class="number">2</span>];</span><br><span class="line">&#125;temporary;</span><br><span class="line"></span><br><span class="line">temporary tem[A];                                                       <span class="comment">//竖式两个横线之间，一位乘法的结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> m[A];</span><br><span class="line">&#125;rpg;</span><br><span class="line"></span><br><span class="line">rpg temrpg[B];                                                          <span class="comment">//竖式里下面一个数字乘上面各位后得到的数字</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialtempo</span><span class="params">(temporary * pt)</span></span>&#123;                                      <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; A;i++)&#123;</span><br><span class="line">        pt[i].m[<span class="number">0</span>] = pt[i].m[<span class="number">1</span>] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialrpg</span><span class="params">(rpg * pt)</span></span>&#123;                                              <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; B;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; A;k++)&#123;</span><br><span class="line">            pt[i].m[k] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addend</span><span class="params">(rpg * pr,<span class="keyword">char</span> * c,<span class="keyword">int</span> la,<span class="keyword">int</span> lb)</span></span>&#123;                           <span class="comment">//将每一位乘a得到的结果相加</span></span><br><span class="line">    <span class="keyword">int</span> a[B] = &#123;<span class="number">0</span>&#125;;                                                     <span class="comment">//保存进位</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>,k = <span class="number">0</span>,r;i &lt; la + lb;i++,k = <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> p = <span class="number">0</span>;p &lt; i + <span class="number">1</span>;p++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pr[i - p].m[p] != <span class="string">&#x27;\0&#x27;</span>) k += pr[i - p].m[p] - <span class="string">&#x27;0&#x27;</span>;       <span class="comment">//如果当位不为0，加上b中某位乘a的相应位数，用以替代加和时需要用的10^n</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i - <span class="number">1</span> &gt;= <span class="number">0</span>) k += a[i - <span class="number">1</span>];                                   <span class="comment">//加上进位</span></span><br><span class="line">        r = k/<span class="number">10</span>;                                                       <span class="comment">//得到进位</span></span><br><span class="line">        k = k%<span class="number">10</span>;                                                       <span class="comment">//得到本位</span></span><br><span class="line">        a[i] = r;                                                       <span class="comment">//保存进位</span></span><br><span class="line">        c[i] = k + <span class="string">&#x27;0&#x27;</span>;                                                 <span class="comment">//保存本位</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;                                                          <span class="comment">//用来得到数字的末尾</span></span><br><span class="line">    <span class="keyword">while</span>(c[la+lb-i] == <span class="string">&#x27;\0&#x27;</span>)&#123;                                          <span class="comment">//忽略&#x27;\0&#x27;</span></span><br><span class="line">        i += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(c[la+lb-i] == <span class="string">&#x27;0&#x27;</span>)&#123;                                           <span class="comment">//忽略&#x27;0&#x27;</span></span><br><span class="line">        i += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> f = la+lb-i+<span class="number">2</span>;                                                  <span class="comment">//保存结尾位置</span></span><br><span class="line">    <span class="keyword">char</span> temc[A+B];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; f - <span class="number">1</span>;j++)&#123;                                       <span class="comment">//获得最终数字的正常顺序</span></span><br><span class="line">        temc[j] = c[f - j - <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; f - <span class="number">1</span>;j++)&#123;                                       <span class="comment">//返回给最初预留的数组</span></span><br><span class="line">        c[j] = temc[j];</span><br><span class="line">    &#125;</span><br><span class="line">    c[f - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;                                                    <span class="comment">//保险，给个结尾</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addtem</span><span class="params">(temporary * pt,rpg * pr,<span class="keyword">int</span> la,<span class="keyword">int</span> lb,<span class="keyword">int</span> p)</span></span>&#123;               <span class="comment">//计算得到的每一位乘出的结果</span></span><br><span class="line">    <span class="keyword">int</span> a[B] = &#123;<span class="number">0</span>&#125;;                                                     <span class="comment">//逢十进一用的数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>,k = <span class="number">0</span>,r;i &lt; la + lb;i++,k = <span class="number">0</span>)&#123;                                               </span><br><span class="line">        <span class="keyword">if</span>(pt[i].m[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>) k = pt[i].m[<span class="number">0</span>] - <span class="string">&#x27;0&#x27;</span>;                    <span class="comment">//如果当位不是0，把保存的第一位给当位</span></span><br><span class="line">        <span class="keyword">if</span>(i - <span class="number">1</span> &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pt[i - <span class="number">1</span>].m[<span class="number">1</span>] != <span class="string">&#x27;\0&#x27;</span>) k += pt[i - <span class="number">1</span>].m[<span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>;       <span class="comment">//如果上一位对应保存的第二位不为0，把保存的第二位给当位</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i - <span class="number">1</span> &gt;= <span class="number">0</span>) k += a[i - <span class="number">1</span>];                                   <span class="comment">//如果上一位有进位，给当位</span></span><br><span class="line">        r = k/<span class="number">10</span>;                                                       <span class="comment">//是否有进位</span></span><br><span class="line">        k = k - r * <span class="number">10</span>;                                                 <span class="comment">//得到本位数字</span></span><br><span class="line">        a[i] = r;                                                       <span class="comment">//保存进位</span></span><br><span class="line">        pr[p].m[i] = k + <span class="string">&#x27;0&#x27;</span>;                                           <span class="comment">//保存当位数字</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">product</span><span class="params">(<span class="keyword">char</span> * a,<span class="keyword">char</span> *b,<span class="keyword">char</span> * c,temporary * pt,rpg * pr)</span></span>&#123;        <span class="comment">//乘法程序</span></span><br><span class="line">    <span class="keyword">clock_t</span> t1 = clock();                                               <span class="comment">//开始计时</span></span><br><span class="line">    <span class="keyword">char</span> tema[A] = &#123;<span class="string">&#x27;0&#x27;</span>&#125;,temb[B] = &#123;<span class="string">&#x27;0&#x27;</span>&#125;;                               <span class="comment">//初始化两个数字的倒序形式，如123，记为321</span></span><br><span class="line">    <span class="keyword">int</span> la = <span class="built_in">strlen</span>(a),lb = <span class="built_in">strlen</span>(b);                                  <span class="comment">//保存两个数字的实际位数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; la;i++)&#123;                                          <span class="comment">//倒序a</span></span><br><span class="line">        tema[i] = a[la - i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    tema[la] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; lb;i++)&#123;                                          <span class="comment">//倒序b</span></span><br><span class="line">        temb[i] = b[lb - i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    temb[lb] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; lb;i++)&#123;                                          <span class="comment">//用b的每一位乘a并保存结果，分为第一位（0）和第二位（1）。（第二位可以为0）</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> p = <span class="number">0</span>,q = <span class="number">0</span>,r;p &lt; la;p++,q = <span class="number">0</span>)&#123;</span><br><span class="line">            q = (tema[p] - <span class="string">&#x27;0&#x27;</span>) * (temb[i] - <span class="string">&#x27;0&#x27;</span>);                      <span class="comment">//个位乘法</span></span><br><span class="line">            r = q/<span class="number">10</span>;                                                   <span class="comment">//是否有进位</span></span><br><span class="line">            pt[p].m[<span class="number">0</span>] = q - r * <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>;                              <span class="comment">//得到第一位</span></span><br><span class="line">            pt[p].m[<span class="number">1</span>] = r + <span class="string">&#x27;0&#x27;</span>;                                       <span class="comment">//得到第二位</span></span><br><span class="line">        &#125;</span><br><span class="line">        addtem(pt,pr,la,lb,i);                                          <span class="comment">//计算每一位乘a得到的结果</span></span><br><span class="line">    &#125;</span><br><span class="line">    addend(pr,c,la,lb);                                                 <span class="comment">//将以上每一位乘a得到的结果相加</span></span><br><span class="line">    <span class="keyword">clock_t</span> t2 = clock();                                               <span class="comment">//计时结束</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,c);                                                     <span class="comment">//打印数字</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n\n%d&quot;</span>,t2 - t1);                                           <span class="comment">//打印时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a[A] = &#123;<span class="string">&#x27;0&#x27;</span>&#125;,b[B] = &#123;<span class="string">&#x27;0&#x27;</span>&#125;,c[A+B] = &#123;<span class="string">&#x27;0&#x27;</span>&#125;;                          <span class="comment">//保存两个数字并为结果预留空间</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*To calculate the product of a and b.(each of them must be positive)</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment">**我们小学学习的竖式乘法算法如下：</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment">**  1 2 3 4 5</span></span><br><span class="line"><span class="comment">**X         4</span></span><br><span class="line"><span class="comment">**___________</span></span><br><span class="line"><span class="comment">**        2 0</span></span><br><span class="line"><span class="comment">**      1 6</span></span><br><span class="line"><span class="comment">**    1 2</span></span><br><span class="line"><span class="comment">**    8</span></span><br><span class="line"><span class="comment">**  4    </span></span><br><span class="line"><span class="comment">**___________</span></span><br><span class="line"><span class="comment">**  4 9 3 8 0</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment">**该乘法原理即为上式</span></span><br><span class="line"><span class="comment">**如果第二个乘数位数比第一个乘数位数小，计算会更快。</span></span><br><span class="line"><span class="comment">**所有数字计算的时候均用倒序形式，如123变成321计算</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    temporary * pt = tem;                                               <span class="comment">//传递结构数据</span></span><br><span class="line">    rpg * pr = temrpg;                                                  <span class="comment">//传递结构数据</span></span><br><span class="line">    initialtempo(pt);                                                   <span class="comment">//初始化</span></span><br><span class="line">    initialrpg(pr);                                                     <span class="comment">//初始化</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>,a,b);                                                 <span class="comment">//读取两个乘数</span></span><br><span class="line">    product(a,b,c,pt,pr);                                               <span class="comment">//计算并打印</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="C-数字炸弹"><a href="#C-数字炸弹" class="headerlink" title="C 数字炸弹"></a>C 数字炸弹</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//变量</span></span><br><span class="line">    <span class="keyword">char</span> c_TheRequest = <span class="number">1</span>;<span class="comment">//开始界面的字符</span></span><br><span class="line">    <span class="keyword">int</span> in_Deltar = <span class="number">1</span>,in_EnteredNumber,in_Sig;<span class="comment">//游戏中输入数字及其判定所需要的数字</span></span><br><span class="line">    <span class="keyword">int</span> in_GivenNum = <span class="number">0</span>,in_An = <span class="number">0</span>,in_Bn = <span class="number">0</span>;<span class="comment">//出的数字，和数字区间</span></span><br><span class="line">    <span class="keyword">int</span> in_Mid;<span class="comment">//用来交换An、Bn的值以满足An&lt;Bn的中间量</span></span><br><span class="line">    <span class="keyword">int</span> in_DistantAn,in_DistantBn;<span class="comment">//An与Bn离num的距离</span></span><br><span class="line">    <span class="keyword">int</span> in_TemporaryAnSaver,in_TemporaryBnSaver;<span class="comment">//临时用于比较的An、Bn储存器</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//开始界面</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;If you just happen to open the game and do not have the intention to play it.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;You can enter a q to quit or you can enter an s to start the game now!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c_TheRequest);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span> (c_TheRequest != <span class="string">&#x27;s&#x27;</span> &amp;&amp; c_TheRequest != <span class="string">&#x27;q&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Please do not enter a irrelevant letter.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c_TheRequest);</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c_TheRequest == <span class="string">&#x27;q&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;So sad then.Hope you can play with me next time.\n&quot;</span>);</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//游戏</span></span><br><span class="line">    <span class="keyword">if</span>(c_TheRequest == <span class="string">&#x27;s&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//输入“数字炸弹”</span></span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;(^ o ^) # *** NOW LET\&#x27;S PLAY! *** # (^ o ^)\nAttention!You can only enter numbers in the following steps.\nEnter to start.\n&quot;</span>);</span><br><span class="line">        getchar();</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Game : The number boom!(Another Life.)\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Rule:\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The first player should enter a number.Then he should give to numbers and guarantee the number above is between them.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The rest should guess and enter the numbers.And the one who enter the exact number the first player entered\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;is supported to be the winner!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Please Enter a number to start the game.(You is ought not to expose it to other players.The number should bigger than 0.)\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;__________\b\b\b\b\b\b\b\b\b\b\b&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;in_GivenNum) != <span class="number">1</span> || in_GivenNum &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Please Enter a NUMBER which is bigger than 0.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;num:___________\b\b\b\b\b\b\b\b\b\b\b&quot;</span>);</span><br><span class="line">            getchar();</span><br><span class="line">        &#125;</span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="comment">//判定是否为数字</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//输入“数字炸弹”所在的区间</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;And where is the number?Please enter two numbers,and ensure that the number above is between them.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Additionally,there should be at least 100 numbers between the two numbers you will enter.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;num = %d\n&quot;</span>,in_GivenNum);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;A:__________\b\b\b\b\b\b\b\b\b\b&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;in_An)!=<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Please Enter a NUMBER which is bigger or smaller than the \&quot;num\&quot;!!!!\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;A:__________\b\b\b\b\b\b\b\b\b\b&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;in_An);</span><br><span class="line">                getchar();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;B:__________\b\b\b\b\b\b\b\b\b\b&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;in_Bn)!=<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Please Enter a NUMBER which is bigger or smaller than the \&quot;num\&quot;!!!!\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;B:__________\b\b\b\b\b\b\b\b\b\b&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;in_Bn);</span><br><span class="line">                getchar();</span><br><span class="line">            &#125;<span class="comment">//记录An和Bn</span></span><br><span class="line">            <span class="keyword">if</span>(!(( in_An &lt; in_GivenNum &amp;&amp; in_Bn &gt; in_GivenNum ) || ( in_An &gt; in_GivenNum &amp;&amp; in_Bn &lt; in_GivenNum )))&#123;</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Your math is so poor.Enter a again!\nThe \&quot;num\&quot; must be between the two numbers.\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Enter to restart.\n&quot;</span>);</span><br><span class="line">                getchar();</span><br><span class="line">                getchar();</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            &#125;<span class="comment">//区间如果错误就会报错</span></span><br><span class="line">        &#125;<span class="keyword">while</span>(!(( in_An &lt; in_GivenNum &amp;&amp; in_Bn &gt; in_GivenNum ) || ( in_An &gt; in_GivenNum &amp;&amp; in_Bn &lt; in_GivenNum )));<span class="comment">//判定区间是不是对的</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//排序</span></span><br><span class="line">        <span class="keyword">if</span>(in_An &gt; in_Bn)&#123;</span><br><span class="line">            in_Mid = in_An;</span><br><span class="line">            in_An = in_Bn;</span><br><span class="line">            in_Bn = in_Mid;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始猜数字</span></span><br><span class="line">        system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Now the game starts!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The number is somewhere between %d and %d\n&quot;</span>,in_An,in_Bn);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Please enter the number.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;__________\b\b\b\b\b\b\b\b\b\b&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>(in_Deltar != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;in_EnteredNumber)!=<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Please Enter a NUMBER!!!!\n&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;in_EnteredNumber);</span><br><span class="line">                getchar();</span><br><span class="line">            &#125;<span class="comment">//判断是否为数字</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//差的运算</span></span><br><span class="line">            in_Deltar = ((in_GivenNum - in_EnteredNumber)&lt;<span class="number">0</span>)?in_EnteredNumber - in_GivenNum:in_GivenNum - in_EnteredNumber;</span><br><span class="line">            in_Sig = in_GivenNum - in_EnteredNumber;</span><br><span class="line">            in_DistantAn = in_GivenNum - in_An;</span><br><span class="line">            in_DistantBn = in_Bn - in_GivenNum;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//判定差的大小</span></span><br><span class="line">            <span class="keyword">if</span>(in_Deltar &gt;= <span class="number">1000</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(in_Sig &gt; <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Too small!Next!\n&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Too big!Next!\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(in_Deltar &gt;= <span class="number">100</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(in_Sig &gt; <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Small.Next!\n&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Big.Next!\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(in_Deltar &gt;= <span class="number">10</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(in_Sig &gt; <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;A little small.Next!\n&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;A little big.Next!\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(in_Deltar &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Almost there!NEXT!!!\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//临时存储，以便后面判断所给数字是否满足条件</span></span><br><span class="line">            in_TemporaryAnSaver = in_An;</span><br><span class="line">            in_TemporaryBnSaver = in_Bn;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(( in_Deltar &lt; in_DistantAn &amp;&amp; in_Sig &gt; <span class="number">0</span> ) || ( in_Deltar &lt; in_DistantBn &amp;&amp; in_Sig &lt; <span class="number">0</span> ))&#123;</span><br><span class="line">                <span class="keyword">if</span>(in_Sig &gt; <span class="number">0</span>)</span><br><span class="line">                in_An = in_EnteredNumber;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                in_Bn = in_EnteredNumber;</span><br><span class="line">            &#125;<span class="comment">//这是修改上下限</span></span><br><span class="line">            <span class="keyword">if</span>((in_TemporaryAnSaver == in_An &amp;&amp; in_TemporaryBnSaver == in_Bn) &amp;&amp; in_Deltar)&#123;</span><br><span class="line">                system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Do not cheat!\nYou should play it again.\n&quot;</span>);</span><br><span class="line">            &#125;<span class="comment">//判定所猜的数字是否在区间内</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(in_Deltar == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//猜中</span></span><br><span class="line">            </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Enter to continue.\n&quot;</span>);</span><br><span class="line">            getchar();</span><br><span class="line">            getchar();</span><br><span class="line">            system (<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Between %d and %d\n__________\b\b\b\b\b\b\b\b\b\b&quot;</span>,in_An,in_Bn);<span class="comment">//区间修正</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;You are the one !!!&quot;</span>);</span><br><span class="line">        getchar();</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Go-框架-Gin-的简单运用"><a href="#Go-框架-Gin-的简单运用" class="headerlink" title="Go 框架 Gin 的简单运用"></a>Go 框架 Gin 的简单运用</h2><h3 id="db-json"><a href="#db-json" class="headerlink" title="db.json"></a>db.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;20201234&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;email&quot;</span>:<span class="string">&quot;20201234@neu.edu&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;pwd&quot;</span>:<span class="string">&quot;20201234&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;20203302&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;email&quot;</span>:<span class="string">&quot;20203302@neu.edu&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;pwd&quot;</span>:<span class="string">&quot;20020214&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;20207710&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;email&quot;</span>:<span class="string">&quot;20207710@neu.edu&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;pwd&quot;</span>:<span class="string">&quot;20020214&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="post-json"><a href="#post-json" class="headerlink" title="post.json"></a>post.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;Posts&quot;</span>:</span><br><span class="line">  [</span><br><span class="line">    [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;test1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This tag is utilized to test data&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;pNum&quot;</span>: <span class="number">1</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;Test&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;&lt;p&gt;this is a test post&lt;/p&gt;&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;test2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This tag is utilized to test data&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;pNum&quot;</span>: <span class="number">1</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;Test&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;&lt;p&gt;this is a test post&lt;/p&gt;&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;totaltag&quot;</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;crypto/md5&quot;</span></span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">    <span class="string">&quot;regexp&quot;</span></span><br><span class="line">    <span class="string">&quot;strconv&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getJsonContent</span><span class="params">(path <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">    jsonFile, err := os.Open(path)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        err = jsonFile.Close()</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(err)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    byteValue, _ := ioutil.ReadAll(jsonFile)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(byteValue), err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getUserNamePassword</span><span class="params">(path <span class="keyword">string</span>)</span> <span class="title">map</span>[<span class="title">string</span>]<span class="title">map</span>[<span class="title">string</span>]<span class="title">string</span></span> &#123;</span><br><span class="line">    byteValue, err := getJsonContent(<span class="string">&quot;db.json&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> unp <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">    err = json.Unmarshal([]<span class="keyword">byte</span>(byteValue), &amp;unp)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> unp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">refreshUserNamePassword</span><span class="params">(path <span class="keyword">string</span>, unp <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    jsonFile, err := os.OpenFile(path, os.O_RDWR, <span class="number">0666</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        err = jsonFile.Close()</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(err)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    jsonUNP, err := json.Marshal(unp)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    _, err = jsonFile.Write(jsonUNP)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    router := gin.Default()</span><br><span class="line"></span><br><span class="line">    grep, err := regexp.Compile(<span class="string">`.+@.+\.[a-z]+`</span>)</span><br><span class="line"></span><br><span class="line">    secureKey := <span class="string">&quot;123&quot;</span></span><br><span class="line"></span><br><span class="line">    text := <span class="string">`</span></span><br><span class="line"><span class="string">------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">登录格式:  localhost:8081/v1/usr/login?name=20203302&amp;pwd=20020214</span></span><br><span class="line"><span class="string">注册格式:  localhost:8081/v1/usr/regin?name=20203302&amp;pwd=20020214&amp;email=1234@1234.com</span></span><br><span class="line"><span class="string">饼干格式:  localhost:8081/v1/usr/cookie?name=20203302&amp;pwd=20020214&amp;age=123</span></span><br><span class="line"><span class="string">获取原始内容:</span></span><br><span class="line"><span class="string"> - localhost:8081/v1/list/get-post</span></span><br><span class="line"><span class="string"> - localhost:8081/v1/list/get-user</span></span><br><span class="line"><span class="string">------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">    fmt.Println(text)</span><br><span class="line"></span><br><span class="line">    v1 := router.Group(<span class="string">&quot;/v1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        v1.GET(<span class="string">&quot;/usr/:action&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">            action := c.Param(<span class="string">&quot;action&quot;</span>)</span><br><span class="line">            <span class="keyword">switch</span> action &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;login&quot;</span>:</span><br><span class="line">                unp := getUserNamePassword(<span class="string">&quot;db.json&quot;</span>)</span><br><span class="line">                name := c.Query(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">                pwd := c.Query(<span class="string">&quot;pwd&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> unp == <span class="literal">nil</span> &#123;</span><br><span class="line">                    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Database No Found&quot;</span>,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> v, ok := unp[name][<span class="string">&quot;pwd&quot;</span>]; ok &amp;&amp; v == pwd &#123;</span><br><span class="line">                    md5Inst := md5.New()</span><br><span class="line">                    md5Inst.Write([]<span class="keyword">byte</span>(name + pwd))</span><br><span class="line">                    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Right Password&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;uuid&quot;</span>:    md5Inst.Sum([]<span class="keyword">byte</span>(secureKey)),</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ok &amp;&amp; v != pwd &#123;</span><br><span class="line">                    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Wrong Password&quot;</span>,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> !ok &#123;</span><br><span class="line">                    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Wrong Name&quot;</span>,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;regin&quot;</span>:</span><br><span class="line">                unp := getUserNamePassword(<span class="string">&quot;db.json&quot;</span>)</span><br><span class="line">                name := c.Query(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">                pwd := c.Query(<span class="string">&quot;pwd&quot;</span>)</span><br><span class="line">                email := c.Query(<span class="string">&quot;email&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> unp == <span class="literal">nil</span> &#123;</span><br><span class="line">                    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Database No Found&quot;</span>,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Regular Expression Error&quot;</span>,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> result := grep.FindAllString(email, <span class="number">-1</span>); <span class="built_in">len</span>(result) == <span class="number">0</span> &#123;</span><br><span class="line">                    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Wrong email&quot;</span>,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> _, ok := unp[name][<span class="string">&quot;pwd&quot;</span>]; ok &#123;</span><br><span class="line">                    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Name already exist&quot;</span>,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    unp[name] = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;<span class="string">&quot;pwd&quot;</span>: pwd, <span class="string">&quot;email&quot;</span>: email&#125;</span><br><span class="line"></span><br><span class="line">                    err = refreshUserNamePassword(<span class="string">&quot;db.json&quot;</span>, unp)</span><br><span class="line">                    <span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">                        md5Inst := md5.New()</span><br><span class="line">                        md5Inst.Write([]<span class="keyword">byte</span>(name + pwd))</span><br><span class="line">                        c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                            <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Registered Successfully&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;uuid&quot;</span>:    md5Inst.Sum([]<span class="keyword">byte</span>(secureKey)),</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                            <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Register Fail&quot;</span>,</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;cookie&quot;</span>:</span><br><span class="line">                name := c.Query(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">                pwd := c.Query(<span class="string">&quot;pwd&quot;</span>)</span><br><span class="line">                age := c.Query(<span class="string">&quot;age&quot;</span>)</span><br><span class="line">                md5Inst := md5.New()</span><br><span class="line">                md5Inst.Write([]<span class="keyword">byte</span>(name + pwd))</span><br><span class="line">                intAge, err := strconv.Atoi(age)</span><br><span class="line">                <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                    fmt.Println(err)</span><br><span class="line">                    c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Wrong Age&quot;</span>,</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                c.SetCookie(name, <span class="keyword">string</span>(md5Inst.Sum([]<span class="keyword">byte</span>(secureKey))), intAge*<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>,</span><br><span class="line">                    <span class="string">&quot;/&quot;</span>, <span class="string">&quot;localhost&quot;</span>, <span class="literal">true</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">                c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">                    <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Get Cookie Successfully&quot;</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;&quot;</span>:</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        v1.GET(<span class="string">&quot;/list/get-post&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">            posts, _ := getJsonContent(<span class="string">&quot;post.json&quot;</span>)</span><br><span class="line">            c.String(http.StatusOK, posts)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        v1.GET(<span class="string">&quot;/list/get-user&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">            posts, _ := getJsonContent(<span class="string">&quot;db.json&quot;</span>)</span><br><span class="line">            c.String(http.StatusOK, posts)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        router.NoRoute(<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">            c.JSON(http.StatusNotFound, gin.H&#123;</span><br><span class="line">                <span class="string">&quot;status&quot;</span>: <span class="number">404</span>,</span><br><span class="line">                <span class="string">&quot;error&quot;</span>:  <span class="string">&quot;404, page not exists!&quot;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    err = router.Run(<span class="string">&quot;:8081&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="JavaScript-闭包-amp-记忆函数"><a href="#JavaScript-闭包-amp-记忆函数" class="headerlink" title="JavaScript 闭包&amp;记忆函数"></a>JavaScript 闭包&amp;记忆函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> g = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> memo = &#123;<span class="string">&quot;0&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;1&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;2&quot;</span>:<span class="literal">true</span>, <span class="string">&quot;3&quot;</span>:<span class="literal">true</span>&#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">isPrime</span>(<span class="params">p</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (p &lt; <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> memo[p]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (x <span class="keyword">in</span> memo) &#123;</span><br><span class="line">                <span class="keyword">if</span> (memo[x] &amp;&amp; x * x &lt;= p) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (p % x == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                    &#125;   </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (memo[p] = <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&quot;isPrime&quot;</span>: isPrime,</span><br><span class="line">        <span class="string">&quot;show&quot;</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(memo)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">    g.isPrime(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g.show()</span><br></pre></td></tr></table></figure>

<h2 id="Go-关键字-defer-测试"><a href="#Go-关键字-defer-测试" class="headerlink" title="Go 关键字 defer 测试"></a>Go 关键字 defer 测试</h2><h3 id="Test-Code-1"><a href="#Test-Code-1" class="headerlink" title="Test Code 1"></a>Test Code 1</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deferTest1</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    c := <span class="number">10</span></span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 1 defer 1: %v\n&quot;</span>, c)</span><br><span class="line">    &#125;()</span><br><span class="line">    c += <span class="number">10</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 1 in func: %v\n&quot;</span>, c)</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 1 defer 2: %v\n&quot;</span>, c)</span><br><span class="line">    &#125;()</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deferTest2</span><span class="params">()</span> <span class="params">(c <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    c = <span class="number">10</span></span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 2 defer 1: %v\n&quot;</span>, c)</span><br><span class="line">    &#125;()</span><br><span class="line">    c += <span class="number">10</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 2 in func: %v\n&quot;</span>, c)</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 2 defer 2: %v\n&quot;</span>, c)</span><br><span class="line">    &#125;()</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deferTest3</span><span class="params">()</span> *<span class="title">int</span></span> &#123;</span><br><span class="line">    c := <span class="number">10</span></span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 3 defer 1: %v\n&quot;</span>, c)</span><br><span class="line">    &#125;()</span><br><span class="line">    c += <span class="number">10</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 3 in func: %v\n&quot;</span>, c)</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 3 defer 2: %v\n&quot;</span>, c)</span><br><span class="line">    &#125;()</span><br><span class="line">    <span class="keyword">return</span> &amp;c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 1 return: %v\tret val not declared in definition\n&quot;</span>, deferTest1())</span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 2 return: %v\tret val declared in definition\n&quot;</span>, deferTest2())</span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 3 return: %v\tret val is the pointer\n&quot;</span>, *deferTest3())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Test 1 in func: 20</span><br><span class="line">Test 1 defer 2: 30</span><br><span class="line">Test 1 defer 1: 40</span><br><span class="line">Test 1 return: 20       ret val not declared in definition</span><br><span class="line">Test 2 in func: 20</span><br><span class="line">Test 2 defer 2: 30</span><br><span class="line">Test 2 defer 1: 40</span><br><span class="line">Test 2 return: 40       ret val declared in definition</span><br><span class="line">Test 3 in func: 20</span><br><span class="line">Test 3 defer 2: 30</span><br><span class="line">Test 3 defer 1: 40</span><br><span class="line">Test 3 return: 40       ret val is the pointer</span><br></pre></td></tr></table></figure>

<h3 id="Test-Code-2"><a href="#Test-Code-2" class="headerlink" title="Test Code 2"></a>Test Code 2</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deferTest1</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    c := <span class="number">10</span></span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 1 defer 1: %v\n&quot;</span>, c)</span><br><span class="line">        <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            c += <span class="number">10</span></span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;()</span><br><span class="line">    c += <span class="number">10</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 1 in func: %v\n&quot;</span>, c)</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 1 defer 2: %v\n&quot;</span>, c)</span><br><span class="line">        <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            c += <span class="number">10</span></span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;()</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deferTest2</span><span class="params">()</span> <span class="params">(c <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    c = <span class="number">10</span></span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 2 defer 1: %v\n&quot;</span>, c)</span><br><span class="line">        <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            c += <span class="number">10</span></span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;()</span><br><span class="line">    c += <span class="number">10</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 2 in func: %v\n&quot;</span>, c)</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 2 defer 2: %v\n&quot;</span>, c)</span><br><span class="line">        <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            c += <span class="number">10</span></span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;()</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deferTest3</span><span class="params">()</span> *<span class="title">int</span></span> &#123;</span><br><span class="line">    c := <span class="number">10</span></span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 3 defer 1: %v\n&quot;</span>, c)</span><br><span class="line">        <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            c += <span class="number">10</span></span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;()</span><br><span class="line">    c += <span class="number">10</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 3 in func: %v\n&quot;</span>, c)</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        c += <span class="number">10</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;Test 3 defer 2: %v\n&quot;</span>, c)</span><br><span class="line">        <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            c += <span class="number">10</span></span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;()</span><br><span class="line">    <span class="keyword">return</span> &amp;c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 1 return: %v\tret val not declared in definition\n&quot;</span>, deferTest1())</span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 2 return: %v\tret val declared in definition\n&quot;</span>, deferTest2())</span><br><span class="line">    fmt.Printf(<span class="string">&quot;Test 3 return: %v\tret val is the pointer\n&quot;</span>, *deferTest3())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Test 1 in func: 20</span><br><span class="line">Test 1 defer 2: 30</span><br><span class="line">Test 1 defer 1: 50</span><br><span class="line">Test 1 return: 20       ret val not declared in definition</span><br><span class="line">Test 2 in func: 20</span><br><span class="line">Test 2 defer 2: 30</span><br><span class="line">Test 2 defer 1: 50</span><br><span class="line">Test 2 return: 60       ret val declared in definition</span><br><span class="line">Test 3 in func: 20</span><br><span class="line">Test 3 defer 2: 30</span><br><span class="line">Test 3 defer 1: 50</span><br><span class="line">Test 3 return: 60       ret val is the pointer</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Collection</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>Go</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>在 NVIDIA 显卡下启动 Arch Linux 系统的亮度调节功能</title>
    <url>/2021/ctl-brightness-arch-nvidia/</url>
    <content><![CDATA[<p><strong>《关于我在 Arch Linux 上调节亮度用了 acpid，brightnessctl，xbacklight 也改变不了亮度，于是上网搜索了半天终于发现问题出现在闭源的 Nvidia 显卡和 Arch Linux 相性不好，修改了两个系统文件然后重启电脑才搞定问题这件事》</strong><code>XD</code></p>
<span id="more"></span>

<hr>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://wiki.archlinux.org/title/Backlight">Backlight</a></p>
<p><a href="https://blog.csdn.net/m0_60212601/article/details/118866751">Arch / Manjaro Linux 英伟达显卡闭源驱动 调节屏幕亮度失效问题解决方法</a></p>
<p><a href="https://unix.stackexchange.com/questions/482569/debian-10-buster-update-grub-command-not-found">Debian 10 Buster | update-grub | command not found</a></p>
<h2 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h2><h3 id="1-添加10-nvidia-conf（可能不需要，没测试）"><a href="#1-添加10-nvidia-conf（可能不需要，没测试）" class="headerlink" title="1 添加10-nvidia.conf（可能不需要，没测试）"></a>1 添加10-nvidia.conf（可能不需要，没测试）</h3><p>首先，打开到 <code>xorg.conf.d</code> 中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/share/X11/xorg.conf.d</span><br><span class="line">$ ls</span><br></pre></td></tr></table></figure>

<p>查看输出有没有 <code>10-nvidia.conf</code>，如果没有，执行下面步骤：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo vim 10-nvidia.conf</span><br></pre></td></tr></table></figure>

<p>在里面输入如下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Section &quot;Device&quot;</span><br><span class="line">        Identifier &quot;Device0&quot;</span><br><span class="line">        Driver &quot;nvidia&quot;</span><br><span class="line">        VendorName &quot;NVIDIA Corporation&quot;</span><br><span class="line">        Option &quot;RegistryDwords&quot; &quot;EnableBrightnessControl=1&quot;</span><br><span class="line">        Option &quot;NoLogo&quot; &quot;True&quot;</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure>

<p>保存后退出。</p>
<h3 id="2-更新grub"><a href="#2-更新grub" class="headerlink" title="2 更新grub"></a>2 更新grub</h3><p>打开 <code>grub</code> 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /etc/default/</span><br><span class="line">$ sudo vim grub</span><br></pre></td></tr></table></figure>

<p>修改 <code>GRUB_CMDLINE_LINUX=&quot;&quot;</code> 为 <code>GRUB_CMDLINE_LINUX=&quot;acpi_backlight=vendor&quot;</code></p>
<p>然后在输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo grub-mkconfig grub</span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure>

<p>当电脑重启以后就可以调节屏幕亮度了。</p>
<p>此时你可以在 <code>/sys/class/backlight/</code> 里看到原来的 <code>acpi_video0</code> 换成了 <code>nvidia_0</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls /sys/class/backlight/</span><br><span class="line">nvidia_0</span><br></pre></td></tr></table></figure>

<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>难受，太难受了 TAT</p>
<p>原因竟然是显卡。。。</p>
]]></content>
      <categories>
        <category>Application</category>
      </categories>
      <tags>
        <tag>Arch_Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux 下修改 gnome GUI 的关闭，最大，最小键的布局</title>
    <url>/2021/gnome-application-change-close-button/</url>
    <content><![CDATA[<p>在做 Gnome 桌面美化时候学习的方法。</p>
<span id="more"></span>

<hr>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/lengchu_org/article/details/81022724">gnome 应用窗口 关闭、最小化、最大化 按钮的位置设置</a></p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S dconf-editor</span><br><span class="line">$ dconf-editor</span><br></pre></td></tr></table></figure>

<p>打开到设置路径为 <code>/org/gnome/desktop/wm/preferences/button-layout</code></p>
<p>该设置即控制关闭，最大，最小键布局。</p>
<p><code>Use default value</code> 就是最右侧只有一个关闭键</p>
<p>可以修改成如下样式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">close,maximize,minimize,appmenu:</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">appmenu:maximize,minimize,close</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Application</category>
      </categories>
      <tags>
        <tag>Arch_Linux</tag>
        <tag>Gnome</tag>
      </tags>
  </entry>
</search>
